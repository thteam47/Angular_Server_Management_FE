{"version":3,"file":"ng-terminal.js","sources":["ng://ng-terminal/lib/ng-terminal.service.ts","ng://ng-terminal/lib/ng-terminal.component.ts","ng://ng-terminal/lib/global-style/global-style.component.ts","ng://ng-terminal/lib/ng-terminal.module.ts","ng://ng-terminal/lib/functions-using-csi.ts","ng://ng-terminal/lib/ng-terminal.ts","ng://ng-terminal/lib/display-option.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgTerminalService {\n\n  constructor() { }\n\n}\n","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { NgTerminal } from './ng-terminal';\nimport { Subject, Observable, Subscription, combineLatest, ObjectUnsubscribedError } from 'rxjs';\nimport { DisplayOption } from './display-option';\nimport { ResizeEvent } from 'angular-resizable-element';\n\n@Component({\n  selector: 'ng-terminal',\n  templateUrl: './ng-terminal.component.html',\n  styleUrls: ['./ng-terminal.component.css']\n})\nexport class NgTerminalComponent implements OnInit, AfterViewInit, AfterViewChecked, NgTerminal, OnDestroy {\n  private term: Terminal;\n  private fitAddon: FitAddon;\n  private keyInputSubject: Subject<string> = new Subject<string>();\n  private keyEventSubject = new Subject<{key: string; domEvent: KeyboardEvent;}>();\n  private termSnippetSubject = new Subject<()=>void>();\n  private afterViewInitSubject = new Subject<void>();\n  \n  private keyInputSubjectSubscription: Subscription;\n  private keyEventSubjectSubscription: Subscription;\n  private termSnippetSubscription: Subscription;\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  private displayOption: DisplayOption = {};\n  private dataSource: Observable<string>;\n  private dataSourceSubscription: Subscription;\n  terminalStyle: object = {};\n\n  @Input('dataSource')\n  set _dataSource(ds) {\n    if(this.dataSourceSubscription != null){\n      this.dataSourceSubscription.unsubscribe();\n    }\n    this.dataSource = ds;\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\n      this.write(data);\n    })\n  }\n  get _dataSource() {\n    return this.dataSource;\n  }\n\n  @Input('displayOption')\n  set _displayOption(opt: DisplayOption){\n    this.setDisplayOption(opt);\n  }\n\n  @Input('style')\n  set _style(opt: any){\n    this.setStyle(opt);\n  }\n\n  @Output('keyInput')\n  keyInputEmitter  = new EventEmitter<string>();\n\n  @Output('keyEvent')\n  keyEventEmitter  = new EventEmitter<{key: string; domEvent: KeyboardEvent;}>();\n\n  @ViewChild('terminal', { static: true }) \n  terminalDiv: ElementRef;\n\n  constructor() { \n    this.termSnippetSubscription = combineLatest(this.termSnippetSubject, this.afterViewInitSubject).subscribe(([snippet]) => {\n      snippet();\n    });\n  }\n\n  private observableSetup(){\n    this.term.onData((input) => {\n      this.keyInputSubject.next(input);\n    });\n    this.term.onKey(e => {\n      this.keyEventSubject.next(e);\n    })\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\n      this.keyInputEmitter.emit(data);\n    })\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\n      this.keyEventEmitter.emit(e);\n    });\n    this.afterViewInitSubject.next();\n  }\n\n  /**\n   * set block or inline-block to #terminal for fitting client or outer element\n   */\n  private setTerminalBlock(isBlock: boolean){\n    if(isBlock)\n      this.terminalStyle['display'] = 'block';\n    else\n      this.terminalStyle['display'] = 'inline-block';\n  }\n\n  /**\n   * set dimensions\n   */\n  private setTerminalDimensions(left: number, top: number, width: number, height: number) {\n    this.terminalStyle['left'] = left ? `${left}px` : undefined;\n    this.terminalStyle['top'] = top ? `${top}px` : undefined;\n    this.terminalStyle['width'] = width ? `${width}px` : undefined;\n    this.terminalStyle['height'] = height ? `${height}px` : undefined;\n  }\n  \n  /**\n   * remove dimensions\n   */\n  private removeTerminalDimensions(){\n    this.terminalStyle['left'] = undefined;\n    this.terminalStyle['top'] = undefined;\n    this.terminalStyle['width'] = undefined;\n    this.terminalStyle['height'] = undefined;\n  }\n\n  setStyle(styleObject: any){\n    Object.assign(this.terminalStyle, styleObject);\n  }\n\n  ngOnInit(){\n  }\n\n  /**\n   * When a dimension of div changes, fit a terminal in div.\n   */\n  ngAfterViewChecked() {\n    let dims = this.fitAddon.proposeDimensions();\n    if(dims === undefined || isNaN(dims.rows) || dims.rows == Infinity || isNaN(dims.cols) || dims.cols == Infinity){\n      this.term.resize(10, 10);\n    }else if(!this.displayOption.fixedGrid){\n      this.fitAddon.fit();\n    }else{\n      this.term.resize(this.displayOption.fixedGrid.cols, this.displayOption.fixedGrid.rows);\n      let xtermScreen = this.term.element.getElementsByClassName('xterm-screen')[0];\n      let scrollArea = this.term.element.getElementsByClassName('xterm-scroll-area')[0];\n      let terminal = this.term.element;\n      const contentWidth = xtermScreen.clientWidth;\n      const scrollWidth = terminal.clientWidth - scrollArea.clientWidth;\n      this.setTerminalDimensions(undefined, undefined, contentWidth + scrollWidth, undefined);\n    }\n  }\n\n  /**\n   * It creates new terminal in #terminal.\n   */\n  ngAfterViewInit() {\n    this.fitAddon = new FitAddon();\n    this.term = new Terminal();\n    this.term.open(this.terminalDiv.nativeElement);\n    this.term.loadAddon(this.fitAddon);\n    this.observableSetup();\n  }\n\n  /**\n   * clean all resources\n   */\n  ngOnDestroy(): void {\n    if(this.keyInputSubjectSubscription)\n      this.keyInputSubjectSubscription.unsubscribe();\n    if(this.dataSourceSubscription)\n      this.dataSourceSubscription.unsubscribe();\n    if(this.keyEventSubjectSubscription)\n      this.keyEventSubjectSubscription.unsubscribe();\n    if(this.termSnippetSubscription)\n    this.termSnippetSubscription.unsubscribe();\n    if(this.term)\n      this.term.dispose();\n  }\n\n  write(chars: string) {\n    this.term.write(chars);\n  }\n\n  setDisplayOption(opt: DisplayOption) {\n    if (opt) {\n      if (opt.fixedGrid != null) {\n        console.debug(\"resizable will be ignored.\");\n        this.setTerminalBlock(false);\n        this.removeTerminalDimensions();\n      } else {\n        this.setTerminalBlock(true);\n      }\n      this.displayOption = opt;\n    } else\n      console.warn(`A falsy option is not allowed`);\n  }\n\n  get keyInput(): Observable<string> {\n    return this.keyInputSubject;\n  }\n\n  get keyEventInput(): Observable<{key: string; domEvent: KeyboardEvent;}> {\n    return this.keyEventSubject;\n  }\n\n  get underlying(): Terminal {\n    return this.term;\n  }\n\n  get isDraggableOnEdgeActivated() {\n    return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\n  }\n\n  /**\n   * After user coordinate dimensions of terminal, it's called.\n   * @param left \n   * @param top \n   * @param width \n   * @param height \n   */\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\n    this.setTerminalDimensions(left, top, width, height);\n  }\n\n  /**\n   * Before onResizeEnd is called, it valiates dimensions to change.\n   * @param re dimension to be submitted from resizable stuff\n   */\n  validatorFactory(): (re: ResizeEvent) => boolean {\n    const comp = this;\n    return (re: ResizeEvent) =>{ \n      const displayOption = comp.displayOption;\n      if(displayOption.activateDraggableOnEdge){\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\n        if ((width < displayOption.activateDraggableOnEdge.minWidth) || (height < displayOption.activateDraggableOnEdge.minHeight)) {\n          return false;\n        } else return true;\n      }\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'global-style',\n  templateUrl: './global-style.component.html',\n  styleUrls: ['../../../../../node_modules/xterm/css/xterm.css'],  //global styles\n  encapsulation: ViewEncapsulation.None\n})\nexport class GlobalStyleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgTerminalComponent } from './ng-terminal.component';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { GlobalStyleComponent } from './global-style/global-style.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\n  imports: [\n    ResizableModule, CommonModule\n  ],\n  exports: [NgTerminalComponent]\n})\nexport class NgTerminalModule { }\n","/**\n *\n * It is a CSI sequences generator\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\n */\nlet CSI = '\\x9b'\nexport class FunctionsUsingCSI {\n    /**\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \n     * \n     * */\n    static insertBlank(count: number){\n        return `${CSI}${count}@`; \n    }\n    /**\n     *  CSI Ps SP @ */\n    /**\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \n     * \\x9b3A*/\n    static cursorUp(count: number){\n        return `${CSI}${count}A`;\n    }\n    /**\n     *  CSI Ps SP A */\n    /**\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\n     * \\x9b3B */\n    static cursorDown(count: number){\n        return `${CSI}${count}B`;\n    }\n    /**\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \n     * \\x9b3C */\n    static cursorForward(count: number){\n        return `${CSI}${count}C`;\n    }\n    /**\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \n     * \\x9b3D */\n    static cursorBackward(count: number){\n        return `${CSI}${count}D`;\n    }\n    /**\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \n     * \\x9b3E\n     * */\n    static cursorNextLine(count: number){\n        return `${CSI}${count}E`;\n    }\n    /**\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\n     * \\x9b3F\n     *  */\n    static cursorPrecedingLine(count: number){\n        return `${CSI}${count}F`;\n    }\n    /**\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n     *  \\x9b9G\n     *  */\n    static cursorColumn(count: number){\n        return `${CSI}${count}G`;\n    }\n    /**\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\n     * \\x9b2;2H\n     * */\n    static cursorPosition(row: number, col: number){\n        return `${CSI}${row};${col}H`;\n    }\n    /**\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\n    /**\n     *  CSI Ps J  Erase in Display (ED), VT100.\n     *      Ps = 0  -> Erase Below (default).\n     *      Ps = 1  -> Erase Above.\n     *      Ps = 2  -> Erase All.\n     *      Ps = 3  -> Erase Saved Lines (xterm).\n     * \\x9b2J\n     *  */\n    static eraseInDisplay(category: KindOfEraseInDisplay){\n        return `${CSI}${category}J`;\n    }\n\n    /**\n     *  CSI ? Ps J\n     *  Erase in Display (DECSED), VT220.\n     *    Ps = 0  -> Selective Erase Below (default).\n     *    Ps = 1  -> Selective Erase Above.\n     *    Ps = 2  -> Selective Erase All.\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\n     * \\x9b?2J \n     * */\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\n        return `${CSI}?${category}J`;\n    }\n    /**\n     *  CSI Ps K  \n     *   Erase in Line (EL), VT100.\n     *     Ps = 0  -> Erase to Right (default).\n     *     Ps = 1  -> Erase to Left.\n     *     Ps = 2  -> Erase All.\n     * \\x9b?1K\n     * */\n    static eraseInLine(category: KindOfEraseInLine){\n        return `${CSI}${category}K`;\n    }\n    /**\n     *  CSI ? Ps K \n     *    Erase in Line (DECSEL), VT220.\n     *      Ps = 0  -> Selective Erase to Right (default).\n     *      Ps = 1  -> Selective Erase to Left.\n     *      Ps = 2  -> Selective Erase All.\n     * \\x9b?1K\n     * */\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\n        return `${CSI}?${category}K`;\n    }\n    /**\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\n     * \\x9b2L\n     *  */\n    static insertLines(count: number){\n        return `${CSI}${count}L`;\n    }\n    /**\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\n     * \\x9b2M\n     *  */\n    static deleteLines(count: number){\n        return `${CSI}${count}M`;\n    }\n    /**\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\n     * \\x9b2P\n     *  */\n    static deleteCharacter(count: number){\n        return `${CSI}${count}P`;\n    }\n    /**\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\n     * \\x9b2S\n     *  */\n    static scrollUpLines(count: number){\n        return `${CSI}${count}S`;\n    }\n    /**\n     *  CSI ? Pi ; Pa ; Pv S */\n    /**\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \n     * \\x9b2T\n     * */\n    static scrollDownLines(count: number){\n        return `${CSI}${count}T`;\n    }\n    /**\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\n    /**\n     *  CSI > Ps ; Ps T */\n    /**\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\n     * \\x9b2X\n     *  */\n    static eraseCharacters(count: number){\n        return `${CSI}${count}X`;\n    }\n    /**\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\n    /**\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\n    /**\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\n    /**\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\n    /**\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\n    /**\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\n    /**\n     *  CSI = Ps c */\n    /**\n     *  CSI > Ps c */\n    /**\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\n    /**\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\n    /**\n     *  CSI Ps ; Ps f */\n    /**\n     *  CSI Ps g  Tab Clear (TBC). */\n    /**\n     *  CSI Pm h  Set Mode (SM). */\n    /**\n     *  CSI ? Pm h */\n    /**\n     *  CSI Pm i  Media Copy (MC). */\n    /**\n     *  CSI ? Pm i */\n    /**\n     *  CSI Pm l  Reset Mode (RM). */\n    /**\n     *  CSI ? Pm l */\n    /**\n     *  CSI Pm m  Character Attributes (SGR). */\n    /**\n     *  CSI > Ps ; Ps m */\n    /**\n     *  CSI Ps n  Device Status Report (DSR). */\n    /**\n     *  CSI > Ps n */\n    /**\n     *  CSI ? Ps n */\n    /**\n     *  CSI > Ps p */\n    /**\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\n    /**\n     *  CSI Ps ; Ps \" p */\n    /**\n     *  CSI Ps $ p */\n    /**\n     *  CSI ? Ps $ p */\n    /**\n     *  CSI # p */\n    /**\n     *  CSI Ps ; Ps # p */\n    /**\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\n    /**\n     *  CSI Ps SP q */\n    /**\n     *  CSI Ps \" q */\n    /**\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\n    /**\n     *  CSI Ps ; Ps r */\n    /**\n     *  CSI ? Pm r */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\n    /**\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\n    /**\n     *  CSI Pl ; Pr s */\n    /**\n     *  CSI ? Pm s */\n    /**\n     *  CSI Ps ; Ps ; Ps t */\n    /**\n     *  CSI > Ps ; Ps t */\n    /**\n     *  CSI Ps SP t */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\n    /**\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\n    /**\n     *  CSI Ps SP u */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\n    /**\n     *  CSI Ps $ w */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\n    /**\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\n    /**\n     *  CSI Ps * x */\n    /**\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\n    /**\n     *  CSI Ps # y */\n    /**\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\n    /**\n     *  CSI Ps ; Pu ' z */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\n    /**\n     *  CSI Pm ' { */\n    /**\n     *  CSI # { */\n    /**\n     *  CSI Ps ; Ps # { */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\n    /**\n     *  CSI Ps $ | */\n    /**\n     *  CSI Ps ' | */\n    /**\n     *  CSI Ps * | */\n    /**\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\n    /**\n     *  CSI Pm ' } */\n    /**\n     *  CSI Pm ' ~ */\n}\nexport enum KindOfEraseInDisplay{\n    Below=0, Above=1, All=2, SavedLines=3\n}\nexport enum KindOfEraseInLine{\n    Right=0, Left=1, All=2\n}","import { Subscription, Observable } from 'rxjs';\nimport { Terminal } from 'xterm';\nimport { DisplayOption } from './display-option';\n\nexport interface NgTerminal {\n    /**\n     * write print charactors or control sequences to the xterm directly\n     * @param chars charactors to write\n     */\n    write(chars: string)\n    /**\n     * getter only provided\n     * A observable to emit printable characters when a user typed on the div for the xterm\n     * @deprecated since version 2.1.0\n     */\n    readonly keyInput: Observable<string>\n    \n    /**\n     * getter only provided\n     * A observable to emit keys and keyboard event when a user typed on the div for the xterm\n     */\n    readonly keyEventInput: Observable<{key: string; domEvent: KeyboardEvent;}>\n    /**\n     * getter only provided\n     * return the core object of the terminal where you can control everything directly\n     */\n    readonly underlying: Terminal\n    /**\n     * change row, col, draggable\n     */\n    setDisplayOption(opt: DisplayOption): void\n    \n    setStyle(styleObject: any): void;\n}\n","/**\n * options for dimensions of terminal.\n * fixedGrid has high priority than activateDraggableOnEdge's\n */\nexport interface DisplayOption{\n    fixedGrid?: {rows: number, cols: number};\n    activateDraggableOnEdge?: {\n        minWidth: number,\n        minHeight: number\n    }\n}"],"names":[],"mappings":"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"}
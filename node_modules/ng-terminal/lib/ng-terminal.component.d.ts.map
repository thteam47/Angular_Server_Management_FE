{"version":3,"file":"ng-terminal.component.d.ts","sources":["ng-terminal.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, AfterViewChecked, ElementRef, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Terminal } from 'xterm';\nimport { NgTerminal } from './ng-terminal';\nimport { Observable } from 'rxjs';\nimport { DisplayOption } from './display-option';\nimport { ResizeEvent } from 'angular-resizable-element';\nexport declare class NgTerminalComponent implements OnInit, AfterViewInit, AfterViewChecked, NgTerminal, OnDestroy {\n    private term;\n    private fitAddon;\n    private keyInputSubject;\n    private keyEventSubject;\n    private termSnippetSubject;\n    private afterViewInitSubject;\n    private keyInputSubjectSubscription;\n    private keyEventSubjectSubscription;\n    private termSnippetSubscription;\n    private h;\n    private displayOption;\n    private dataSource;\n    private dataSourceSubscription;\n    terminalStyle: object;\n    _dataSource: any;\n    _displayOption: DisplayOption;\n    _style: any;\n    keyInputEmitter: EventEmitter<string>;\n    keyEventEmitter: EventEmitter<{\n        key: string;\n        domEvent: KeyboardEvent;\n    }>;\n    terminalDiv: ElementRef;\n    constructor();\n    private observableSetup;\n    /**\n     * set block or inline-block to #terminal for fitting client or outer element\n     */\n    private setTerminalBlock;\n    /**\n     * set dimensions\n     */\n    private setTerminalDimensions;\n    /**\n     * remove dimensions\n     */\n    private removeTerminalDimensions;\n    setStyle(styleObject: any): void;\n    ngOnInit(): void;\n    /**\n     * When a dimension of div changes, fit a terminal in div.\n     */\n    ngAfterViewChecked(): void;\n    /**\n     * It creates new terminal in #terminal.\n     */\n    ngAfterViewInit(): void;\n    /**\n     * clean all resources\n     */\n    ngOnDestroy(): void;\n    write(chars: string): void;\n    setDisplayOption(opt: DisplayOption): void;\n    readonly keyInput: Observable<string>;\n    readonly keyEventInput: Observable<{\n        key: string;\n        domEvent: KeyboardEvent;\n    }>;\n    readonly underlying: Terminal;\n    readonly isDraggableOnEdgeActivated: boolean;\n    /**\n     * After user coordinate dimensions of terminal, it's called.\n     * @param left\n     * @param top\n     * @param width\n     * @param height\n     */\n    onResizeEnd(left: number, top: number, width: number, height: number): void;\n    /**\n     * Before onResizeEnd is called, it valiates dimensions to change.\n     * @param re dimension to be submitted from resizable stuff\n     */\n    validatorFactory(): (re: ResizeEvent) => boolean;\n}\n"]}
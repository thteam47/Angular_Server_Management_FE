{"version":3,"file":"ng-terminal.js","sources":["ng-terminal/lib/ng-terminal.service.ts","ng-terminal/lib/ng-terminal.component.ts","ng-terminal/lib/global-style/global-style.component.ts","ng-terminal/lib/ng-terminal.module.ts","ng-terminal/lib/functions-using-csi.ts","ng-terminal/lib/ng-terminal.ts","ng-terminal/lib/display-option.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgTerminalService {\n\n  constructor() { }\n\n}\n","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { NgTerminal } from './ng-terminal';\nimport { Subject, Observable, Subscription, combineLatest, ObjectUnsubscribedError } from 'rxjs';\nimport { DisplayOption } from './display-option';\nimport { ResizeEvent } from 'angular-resizable-element';\n\n@Component({\n  selector: 'ng-terminal',\n  templateUrl: './ng-terminal.component.html',\n  styleUrls: ['./ng-terminal.component.css']\n})\nexport class NgTerminalComponent implements OnInit, AfterViewInit, AfterViewChecked, NgTerminal, OnDestroy {\n  private term: Terminal;\n  private fitAddon: FitAddon;\n  private keyInputSubject: Subject<string> = new Subject<string>();\n  private keyEventSubject = new Subject<{key: string; domEvent: KeyboardEvent;}>();\n  private termSnippetSubject = new Subject<()=>void>();\n  private afterViewInitSubject = new Subject<void>();\n  \n  private keyInputSubjectSubscription: Subscription;\n  private keyEventSubjectSubscription: Subscription;\n  private termSnippetSubscription: Subscription;\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  private displayOption: DisplayOption = {};\n  private dataSource: Observable<string>;\n  private dataSourceSubscription: Subscription;\n  terminalStyle: object = {};\n\n  @Input('dataSource')\n  set _dataSource(ds) {\n    if(this.dataSourceSubscription != null){\n      this.dataSourceSubscription.unsubscribe();\n    }\n    this.dataSource = ds;\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\n      this.write(data);\n    })\n  }\n  get _dataSource() {\n    return this.dataSource;\n  }\n\n  @Input('displayOption')\n  set _displayOption(opt: DisplayOption){\n    this.setDisplayOption(opt);\n  }\n\n  @Input('style')\n  set _style(opt: any){\n    this.setStyle(opt);\n  }\n\n  @Output('keyInput')\n  keyInputEmitter  = new EventEmitter<string>();\n\n  @Output('keyEvent')\n  keyEventEmitter  = new EventEmitter<{key: string; domEvent: KeyboardEvent;}>();\n\n  @ViewChild('terminal', { static: true }) \n  terminalDiv: ElementRef;\n\n  constructor() { \n    this.termSnippetSubscription = combineLatest(this.termSnippetSubject, this.afterViewInitSubject).subscribe(([snippet]) => {\n      snippet();\n    });\n  }\n\n  private observableSetup(){\n    this.term.onData((input) => {\n      this.keyInputSubject.next(input);\n    });\n    this.term.onKey(e => {\n      this.keyEventSubject.next(e);\n    })\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\n      this.keyInputEmitter.emit(data);\n    })\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\n      this.keyEventEmitter.emit(e);\n    });\n    this.afterViewInitSubject.next();\n  }\n\n  /**\n   * set block or inline-block to #terminal for fitting client or outer element\n   */\n  private setTerminalBlock(isBlock: boolean){\n    if(isBlock)\n      this.terminalStyle['display'] = 'block';\n    else\n      this.terminalStyle['display'] = 'inline-block';\n  }\n\n  /**\n   * set dimensions\n   */\n  private setTerminalDimensions(left: number, top: number, width: number, height: number) {\n    this.terminalStyle['left'] = left ? `${left}px` : undefined;\n    this.terminalStyle['top'] = top ? `${top}px` : undefined;\n    this.terminalStyle['width'] = width ? `${width}px` : undefined;\n    this.terminalStyle['height'] = height ? `${height}px` : undefined;\n  }\n  \n  /**\n   * remove dimensions\n   */\n  private removeTerminalDimensions(){\n    this.terminalStyle['left'] = undefined;\n    this.terminalStyle['top'] = undefined;\n    this.terminalStyle['width'] = undefined;\n    this.terminalStyle['height'] = undefined;\n  }\n\n  setStyle(styleObject: any){\n    Object.assign(this.terminalStyle, styleObject);\n  }\n\n  ngOnInit(){\n  }\n\n  /**\n   * When a dimension of div changes, fit a terminal in div.\n   */\n  ngAfterViewChecked() {\n    let dims = this.fitAddon.proposeDimensions();\n    if(dims === undefined || isNaN(dims.rows) || dims.rows == Infinity || isNaN(dims.cols) || dims.cols == Infinity){\n      this.term.resize(10, 10);\n    }else if(!this.displayOption.fixedGrid){\n      this.fitAddon.fit();\n    }else{\n      this.term.resize(this.displayOption.fixedGrid.cols, this.displayOption.fixedGrid.rows);\n      let xtermScreen = this.term.element.getElementsByClassName('xterm-screen')[0];\n      let scrollArea = this.term.element.getElementsByClassName('xterm-scroll-area')[0];\n      let terminal = this.term.element;\n      const contentWidth = xtermScreen.clientWidth;\n      const scrollWidth = terminal.clientWidth - scrollArea.clientWidth;\n      this.setTerminalDimensions(undefined, undefined, contentWidth + scrollWidth, undefined);\n    }\n  }\n\n  /**\n   * It creates new terminal in #terminal.\n   */\n  ngAfterViewInit() {\n    this.fitAddon = new FitAddon();\n    this.term = new Terminal();\n    this.term.open(this.terminalDiv.nativeElement);\n    this.term.loadAddon(this.fitAddon);\n    this.observableSetup();\n  }\n\n  /**\n   * clean all resources\n   */\n  ngOnDestroy(): void {\n    if(this.keyInputSubjectSubscription)\n      this.keyInputSubjectSubscription.unsubscribe();\n    if(this.dataSourceSubscription)\n      this.dataSourceSubscription.unsubscribe();\n    if(this.keyEventSubjectSubscription)\n      this.keyEventSubjectSubscription.unsubscribe();\n    if(this.termSnippetSubscription)\n    this.termSnippetSubscription.unsubscribe();\n    if(this.term)\n      this.term.dispose();\n  }\n\n  write(chars: string) {\n    this.term.write(chars);\n  }\n\n  setDisplayOption(opt: DisplayOption) {\n    if (opt) {\n      if (opt.fixedGrid != null) {\n        console.debug(\"resizable will be ignored.\");\n        this.setTerminalBlock(false);\n        this.removeTerminalDimensions();\n      } else {\n        this.setTerminalBlock(true);\n      }\n      this.displayOption = opt;\n    } else\n      console.warn(`A falsy option is not allowed`);\n  }\n\n  get keyInput(): Observable<string> {\n    return this.keyInputSubject;\n  }\n\n  get keyEventInput(): Observable<{key: string; domEvent: KeyboardEvent;}> {\n    return this.keyEventSubject;\n  }\n\n  get underlying(): Terminal {\n    return this.term;\n  }\n\n  get isDraggableOnEdgeActivated() {\n    return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\n  }\n\n  /**\n   * After user coordinate dimensions of terminal, it's called.\n   * @param left \n   * @param top \n   * @param width \n   * @param height \n   */\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\n    this.setTerminalDimensions(left, top, width, height);\n  }\n\n  /**\n   * Before onResizeEnd is called, it valiates dimensions to change.\n   * @param re dimension to be submitted from resizable stuff\n   */\n  validatorFactory(): (re: ResizeEvent) => boolean {\n    const comp = this;\n    return (re: ResizeEvent) =>{ \n      const displayOption = comp.displayOption;\n      if(displayOption.activateDraggableOnEdge){\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\n        if ((width < displayOption.activateDraggableOnEdge.minWidth) || (height < displayOption.activateDraggableOnEdge.minHeight)) {\n          return false;\n        } else return true;\n      }\n    }\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'global-style',\n  templateUrl: './global-style.component.html',\n  styleUrls: ['../../../../../node_modules/xterm/css/xterm.css'],  //global styles\n  encapsulation: ViewEncapsulation.None\n})\nexport class GlobalStyleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgTerminalComponent } from './ng-terminal.component';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { GlobalStyleComponent } from './global-style/global-style.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\n  imports: [\n    ResizableModule, CommonModule\n  ],\n  exports: [NgTerminalComponent]\n})\nexport class NgTerminalModule { }\n","/**\n *\n * It is a CSI sequences generator\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\n */\nlet CSI = '\\x9b'\nexport class FunctionsUsingCSI {\n    /**\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \n     * \n     * */\n    static insertBlank(count: number){\n        return `${CSI}${count}@`; \n    }\n    /**\n     *  CSI Ps SP @ */\n    /**\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \n     * \\x9b3A*/\n    static cursorUp(count: number){\n        return `${CSI}${count}A`;\n    }\n    /**\n     *  CSI Ps SP A */\n    /**\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\n     * \\x9b3B */\n    static cursorDown(count: number){\n        return `${CSI}${count}B`;\n    }\n    /**\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \n     * \\x9b3C */\n    static cursorForward(count: number){\n        return `${CSI}${count}C`;\n    }\n    /**\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \n     * \\x9b3D */\n    static cursorBackward(count: number){\n        return `${CSI}${count}D`;\n    }\n    /**\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \n     * \\x9b3E\n     * */\n    static cursorNextLine(count: number){\n        return `${CSI}${count}E`;\n    }\n    /**\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\n     * \\x9b3F\n     *  */\n    static cursorPrecedingLine(count: number){\n        return `${CSI}${count}F`;\n    }\n    /**\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n     *  \\x9b9G\n     *  */\n    static cursorColumn(count: number){\n        return `${CSI}${count}G`;\n    }\n    /**\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\n     * \\x9b2;2H\n     * */\n    static cursorPosition(row: number, col: number){\n        return `${CSI}${row};${col}H`;\n    }\n    /**\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\n    /**\n     *  CSI Ps J  Erase in Display (ED), VT100.\n     *      Ps = 0  -> Erase Below (default).\n     *      Ps = 1  -> Erase Above.\n     *      Ps = 2  -> Erase All.\n     *      Ps = 3  -> Erase Saved Lines (xterm).\n     * \\x9b2J\n     *  */\n    static eraseInDisplay(category: KindOfEraseInDisplay){\n        return `${CSI}${category}J`;\n    }\n\n    /**\n     *  CSI ? Ps J\n     *  Erase in Display (DECSED), VT220.\n     *    Ps = 0  -> Selective Erase Below (default).\n     *    Ps = 1  -> Selective Erase Above.\n     *    Ps = 2  -> Selective Erase All.\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\n     * \\x9b?2J \n     * */\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\n        return `${CSI}?${category}J`;\n    }\n    /**\n     *  CSI Ps K  \n     *   Erase in Line (EL), VT100.\n     *     Ps = 0  -> Erase to Right (default).\n     *     Ps = 1  -> Erase to Left.\n     *     Ps = 2  -> Erase All.\n     * \\x9b?1K\n     * */\n    static eraseInLine(category: KindOfEraseInLine){\n        return `${CSI}${category}K`;\n    }\n    /**\n     *  CSI ? Ps K \n     *    Erase in Line (DECSEL), VT220.\n     *      Ps = 0  -> Selective Erase to Right (default).\n     *      Ps = 1  -> Selective Erase to Left.\n     *      Ps = 2  -> Selective Erase All.\n     * \\x9b?1K\n     * */\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\n        return `${CSI}?${category}K`;\n    }\n    /**\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\n     * \\x9b2L\n     *  */\n    static insertLines(count: number){\n        return `${CSI}${count}L`;\n    }\n    /**\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\n     * \\x9b2M\n     *  */\n    static deleteLines(count: number){\n        return `${CSI}${count}M`;\n    }\n    /**\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\n     * \\x9b2P\n     *  */\n    static deleteCharacter(count: number){\n        return `${CSI}${count}P`;\n    }\n    /**\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\n     * \\x9b2S\n     *  */\n    static scrollUpLines(count: number){\n        return `${CSI}${count}S`;\n    }\n    /**\n     *  CSI ? Pi ; Pa ; Pv S */\n    /**\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \n     * \\x9b2T\n     * */\n    static scrollDownLines(count: number){\n        return `${CSI}${count}T`;\n    }\n    /**\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\n    /**\n     *  CSI > Ps ; Ps T */\n    /**\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\n     * \\x9b2X\n     *  */\n    static eraseCharacters(count: number){\n        return `${CSI}${count}X`;\n    }\n    /**\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\n    /**\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\n    /**\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\n    /**\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\n    /**\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\n    /**\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\n    /**\n     *  CSI = Ps c */\n    /**\n     *  CSI > Ps c */\n    /**\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\n    /**\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\n    /**\n     *  CSI Ps ; Ps f */\n    /**\n     *  CSI Ps g  Tab Clear (TBC). */\n    /**\n     *  CSI Pm h  Set Mode (SM). */\n    /**\n     *  CSI ? Pm h */\n    /**\n     *  CSI Pm i  Media Copy (MC). */\n    /**\n     *  CSI ? Pm i */\n    /**\n     *  CSI Pm l  Reset Mode (RM). */\n    /**\n     *  CSI ? Pm l */\n    /**\n     *  CSI Pm m  Character Attributes (SGR). */\n    /**\n     *  CSI > Ps ; Ps m */\n    /**\n     *  CSI Ps n  Device Status Report (DSR). */\n    /**\n     *  CSI > Ps n */\n    /**\n     *  CSI ? Ps n */\n    /**\n     *  CSI > Ps p */\n    /**\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\n    /**\n     *  CSI Ps ; Ps \" p */\n    /**\n     *  CSI Ps $ p */\n    /**\n     *  CSI ? Ps $ p */\n    /**\n     *  CSI # p */\n    /**\n     *  CSI Ps ; Ps # p */\n    /**\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\n    /**\n     *  CSI Ps SP q */\n    /**\n     *  CSI Ps \" q */\n    /**\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\n    /**\n     *  CSI Ps ; Ps r */\n    /**\n     *  CSI ? Pm r */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\n    /**\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\n    /**\n     *  CSI Pl ; Pr s */\n    /**\n     *  CSI ? Pm s */\n    /**\n     *  CSI Ps ; Ps ; Ps t */\n    /**\n     *  CSI > Ps ; Ps t */\n    /**\n     *  CSI Ps SP t */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\n    /**\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\n    /**\n     *  CSI Ps SP u */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\n    /**\n     *  CSI Ps $ w */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\n    /**\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\n    /**\n     *  CSI Ps * x */\n    /**\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\n    /**\n     *  CSI Ps # y */\n    /**\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\n    /**\n     *  CSI Ps ; Pu ' z */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\n    /**\n     *  CSI Pm ' { */\n    /**\n     *  CSI # { */\n    /**\n     *  CSI Ps ; Ps # { */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\n    /**\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\n    /**\n     *  CSI Ps $ | */\n    /**\n     *  CSI Ps ' | */\n    /**\n     *  CSI Ps * | */\n    /**\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\n    /**\n     *  CSI Pm ' } */\n    /**\n     *  CSI Pm ' ~ */\n}\nexport enum KindOfEraseInDisplay{\n    Below=0, Above=1, All=2, SavedLines=3\n}\nexport enum KindOfEraseInLine{\n    Right=0, Left=1, All=2\n}","import { Subscription, Observable } from 'rxjs';\nimport { Terminal } from 'xterm';\nimport { DisplayOption } from './display-option';\n\nexport interface NgTerminal {\n    /**\n     * write print charactors or control sequences to the xterm directly\n     * @param chars charactors to write\n     */\n    write(chars: string)\n    /**\n     * getter only provided\n     * A observable to emit printable characters when a user typed on the div for the xterm\n     * @deprecated since version 2.1.0\n     */\n    readonly keyInput: Observable<string>\n    \n    /**\n     * getter only provided\n     * A observable to emit keys and keyboard event when a user typed on the div for the xterm\n     */\n    readonly keyEventInput: Observable<{key: string; domEvent: KeyboardEvent;}>\n    /**\n     * getter only provided\n     * return the core object of the terminal where you can control everything directly\n     */\n    readonly underlying: Terminal\n    /**\n     * change row, col, draggable\n     */\n    setDisplayOption(opt: DisplayOption): void\n    \n    setStyle(styleObject: any): void;\n}\n","/**\n * options for dimensions of terminal.\n * fixedGrid has high priority than activateDraggableOnEdge's\n */\nexport interface DisplayOption{\n    fixedGrid?: {rows: number, cols: number};\n    activateDraggableOnEdge?: {\n        minWidth: number,\n        minHeight: number\n    }\n}"]}
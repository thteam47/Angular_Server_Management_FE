{"ast":null,"code":"/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\nimport { __awaiter, __extends, __generator } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ExportMenu } from \"./ExportMenu\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { Sprite } from \"../Sprite\";\nimport { Modal } from \"../elements/Modal\";\nimport { List } from \"../utils/List\";\nimport { Dictionary } from \"../utils/Dictionary\";\nimport { DateFormatter } from \"../formatters/DateFormatter\";\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { color } from \"../utils/Color\";\nimport { registry } from \"../Registry\";\nimport { options } from \"../Options\";\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\nimport * as $browser from \"../utils/Browser\";\nimport * as $object from \"../utils/Object\";\nimport * as $net from \"../utils/Net\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $log from \"../utils/Log\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $array from \"../utils/Array\";\nimport * as $math from \"../utils/Math\";\nimport * as $strings from \"../utils/Strings\"; // This is used to cache the pdfmake loading\n\nvar pdfmakePromise;\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\n\nfunction _pdfmake() {\n  return __awaiter(this, void 0, void 0, function () {\n    var a, pdfmake, vfs_fonts, global;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([import(\n          /* webpackChunkName: \"pdfmake\" */\n          \"pdfmake/build/pdfmake.js\"), import(\n          /* webpackChunkName: \"pdfmake\" */\n          \"../../pdfmake/vfs_fonts\")])];\n\n        case 1:\n          a = _a.sent();\n          pdfmake = a[0];\n          vfs_fonts = a[1];\n          global = window;\n          global.pdfMake = global.pdfMake || {};\n          global.pdfMake.vfs = vfs_fonts.default;\n          pdfmake.vfs = vfs_fonts.default;\n          return [2\n          /*return*/\n          , pdfmake];\n      }\n    });\n  });\n} // TODO better parsing\n\n\nvar fontFamilySrcRegexp = /src: ([^;]+);/; // TODO better checks\n\nfunction supportsBlobUri() {\n  return window.navigator.msSaveOrOpenBlob != null;\n} // TODO move into utils or something ?\n\n\nfunction blobToDataUri(blob) {\n  return new Promise(function (resolve, reject) {\n    // TODO handle abort ?\n    var f = new FileReader();\n\n    f.onload = function (e) {\n      resolve(f.result);\n    };\n\n    f.onerror = function (e) {\n      reject(e);\n    };\n\n    f.readAsDataURL(blob);\n  });\n}\n\nfunction getCssRules(s) {\n  return __awaiter(this, void 0, void 0, function () {\n    var sheet, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          sheet = s.sheet;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 2,, 4]);\n\n          return [2\n          /*return*/\n          , sheet.cssRules];\n\n        case 2:\n          e_1 = _a.sent();\n          return [4\n          /*yield*/\n          , new Promise(function (success, error) {\n            s.addEventListener(\"load\", function () {\n              success(sheet.cssRules);\n            }, true);\n            s.addEventListener(\"error\", function (e) {\n              error(e);\n            }, true);\n            setTimeout(function () {\n              error(new Error(\"Timeout while waiting for <style> to load\"));\n            }, 10000);\n          })];\n\n        case 3:\n          // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This loads a stylesheet by URL and then calls the function with it\n// TODO this should be moved into utils or something\n\n\nfunction loadStylesheet(doc, url, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response, e_2, s, rules;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , $net.load(url)];\n\n        case 1:\n          response = _a.sent();\n          return [3\n          /*break*/\n          , 3];\n\n        case 2:\n          e_2 = _a.sent();\n          console.error(\"Failed to load stylesheet\", url, e_2);\n          return [2\n          /*return*/\n          ];\n\n        case 3:\n          s = doc.createElement(\"style\");\n          s.textContent = response.response;\n\n          if (options.nonce != \"\") {\n            s.setAttribute(\"nonce\", options.nonce);\n          }\n\n          doc.head.appendChild(s);\n          _a.label = 4;\n\n        case 4:\n          _a.trys.push([4,, 7, 8]);\n\n          return [4\n          /*yield*/\n          , getCssRules(s)];\n\n        case 5:\n          rules = _a.sent();\n          return [4\n          /*yield*/\n          , eachStylesheet(doc, url, rules, f)];\n\n        case 6:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          doc.head.removeChild(s);\n          return [7\n          /*endfinally*/\n          ];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This calls a function for each CSSRule inside of a CSSStyleSheet.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\n\n\nfunction eachStylesheet(doc, topUrl, rules, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var promises, length, i, rule, url;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          promises = [];\n          length = rules.length;\n\n          for (i = 0; i < length; i++) {\n            rule = rules[i];\n\n            if (rule.type === CSSRule.IMPORT_RULE) {\n              url = rule.href;\n\n              if (url) {\n                url = $utils.joinUrl(topUrl, url);\n                promises.push(loadStylesheet(doc, url, f));\n              }\n            } else {\n              f(topUrl, rule);\n            }\n          }\n\n          if (!promises.length) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , Promise.all(promises)];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This calls a function for each CSSRule for all of the stylesheets in the page.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\n\n\nfunction eachStylesheets(f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var iframe, doc_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          iframe = document.createElement(\"iframe\"); // This causes it to use the same origin policy as the parent page\n\n          iframe.src = \"about:blank\"; // This tries to make it more accessible for screen readers\n\n          iframe.setAttribute(\"title\", \"\");\n          document.head.appendChild(iframe);\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1,, 3, 4]);\n\n          doc_1 = iframe.contentDocument; // TODO use $dom.getRoot instead of document ?\n\n          return [4\n          /*yield*/\n          , Promise.all($array.map(document.styleSheets, function (sheet) {\n            var url = sheet.href;\n\n            if (url == null) {\n              return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\n            } else {\n              url = $utils.joinUrl(location.href, url);\n              return loadStylesheet(doc_1, url, f);\n            }\n          }))];\n\n        case 2:\n          // TODO use $dom.getRoot instead of document ?\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          document.head.removeChild(iframe);\n          return [7\n          /*endfinally*/\n          ];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\n\n\nvar Export =\n/** @class */\nfunction (_super) {\n  __extends(Export, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Export(container) {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n\n\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds options for each format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._formatOptions = new Dictionary();\n    /**\r\n     * Extra [[Sprite]] elements to include in exports.\r\n     */\n\n    _this._extraSprites = [];\n    /**\r\n     * A list of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     */\n\n    _this._validateSprites = [];\n    /**\r\n     * Holds an array of data field names. If set, exported data fields will try\r\n     * to maintain this order.\r\n     *\r\n     * If not set (default), the export will try to maintain the same order as\r\n     * in source data, or as in `dataFields` (if set).\r\n     *\r\n     * @since 4.9.7\r\n     */\n\n    _this.dataFieldsOrder = [];\n    /**\r\n     * Indicates whether data fields were generated dynamically (`true`) or\r\n     * if they were pre-set by the user (`false`).\r\n     */\n\n    _this._dynamicDataFields = true;\n    /**\r\n     * Holds a list of objects that were temporarily removed from the DOM while\r\n     * exporting. Those most probably are tainted images, or foreign objects that\r\n     * would otherwise prevent SVG to be converted to canvas.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._removedObjects = new List();\n    /**\r\n     * Holds references to the objects that were temporarily hidden when export\r\n     * started, so that we can reveal them back when export ends.\r\n     */\n\n    _this._hiddenObjects = [];\n    /**\r\n     * Indicates if non-exportable objects are now hidden;\r\n     */\n\n    _this._objectsAlreadyHidden = false;\n    /**\r\n     * Exported files will be prefixed with whatever it is set here.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._filePrefix = \"amCharts\";\n    /**\r\n     * If you are using web fonts (such as Google Fonts), your chart might be\r\n     * using them as well.\r\n     *\r\n     * Normally, exporting to image will require to download these fonts so the\r\n     * are carried over to exported image.\r\n     *\r\n     * This setting can be used to disable or enable this functionality.\r\n     *\r\n     * @default true\r\n     */\n\n    _this.useWebFonts = true;\n    /**\r\n     * Many modern displays have use more actual pixels per displayed pixel. This\r\n     * results in sharper images on screen. Unfortunately, when exported to a\r\n     * bitmap image of the sam width/height size it will lose those extra pixels,\r\n     * resulting in somewhat blurry image.\r\n     *\r\n     * This is why we are going to export images larger than they are, so that we\r\n     * don't lose any details.\r\n     *\r\n     * If you'd rather export images without change in size, set this to `false`.\r\n     *\r\n     * @default true\r\n     */\n\n    _this.useRetina = true;\n    /**\r\n     * By default Export will try to use built-in method for transforming chart\r\n     * into an image for download, then fallback to external library (canvg) for\r\n     * conversion if failed.\r\n     *\r\n     * Setting this to `false` will force use of external library for all export\r\n     * operations.\r\n     *\r\n     * It might be useful to turn off simplified export if you are using strict\r\n     * content security policies, that disallow images with blobs as their\r\n     * source.\r\n     *\r\n     * @default true\r\n     * @since 4.2.5\r\n     */\n\n    _this.useSimplifiedExport = true;\n    /**\r\n     * If export operation takes longer than milliseconds in this second, we will\r\n     * show a modal saying export operation took longer than expected.\r\n     */\n\n    _this.timeoutDelay = 2000;\n    _this._exportRunning = false;\n    /**\r\n     * Indicator used by [[Component]].\r\n     *\r\n     * @ignore\r\n     */\n\n    _this._prevHasData = false;\n    _this._container = container;\n    _this.className = \"Export\"; // Set default options\n\n    _this._formatOptions.setKey(\"png\", {});\n\n    _this._formatOptions.setKey(\"jpg\", {\n      quality: 0.8\n    });\n\n    _this._formatOptions.setKey(\"gif\", {});\n\n    _this._formatOptions.setKey(\"svg\", {});\n\n    _this._formatOptions.setKey(\"pdf\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      align: \"left\",\n      addURL: true,\n      addColumnNames: true\n    });\n\n    _this._formatOptions.setKey(\"json\", {\n      indent: 2,\n      useLocale: true\n    });\n\n    _this._formatOptions.setKey(\"csv\", {\n      addColumnNames: true,\n      emptyAs: \"\",\n      addBOM: true\n    });\n\n    _this._formatOptions.setKey(\"xlsx\", {\n      addColumnNames: true,\n      useLocale: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"html\", {\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"pdfdata\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      addURL: true,\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"print\", {\n      delay: 500,\n      printMethod: \"iframe\"\n    }); // Add options adapter\n\n\n    _this.adapter.add(\"options\", function (arg) {\n      var formatOptions = _this._formatOptions.getKey(arg.type);\n\n      if (arg.options) {\n        arg.options = $object.merge(formatOptions, arg.options);\n      } else {\n        arg.options = formatOptions;\n      }\n\n      return arg;\n    });\n\n    _this.applyTheme();\n\n    _this.dispatchImmediately(\"inited\");\n\n    return _this;\n  }\n\n  Object.defineProperty(Export.prototype, \"menu\", {\n    /**\r\n     * @return ExportMenu instance\r\n     */\n    get: function () {\n      return this._menu;\n    },\n\n    /**\r\n     * An instance of [[ExportMenu]].\r\n     *\r\n     * To add an export menu to a chart, set this to a new instance of\r\n     * [[ExportMenu]].\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     \"menu\": {}\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @param menu  ExportMenu instance\r\n     */\n    set: function (menu) {\n      var _this = this;\n\n      if (this._menu) {\n        this.removeDispose(this._menu);\n      }\n\n      this._menu = menu; // Set container and language\n\n      this._menu.container = this.container;\n      this._menu.language = this._language; // Add adapter to check for browser support\n\n      this._menu.adapter.add(\"branch\", function (arg) {\n        arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\n        return arg;\n      }); // Add click events\n\n\n      this._menu.events.on(\"hit\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n\n        _this.menu.close();\n      });\n\n      this._menu.events.on(\"enter\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n\n        _this.menu.close();\n      });\n\n      this._menu.events.on(\"over\", function (ev) {\n        _this._disablePointers();\n      });\n\n      this._menu.events.on(\"out\", function (ev) {\n        setTimeout(function () {\n          _this._releasePointers();\n        }, 10);\n      }); // Dispatch event\n\n\n      this.dispatchImmediately(\"menucreated\"); // Prefix with Sprite's class name\n\n      this._menu.adapter.add(\"classPrefix\", function (obj) {\n        obj.classPrefix = options.classNamePrefix + obj.classPrefix;\n        return obj;\n      }); // Add menu to disposers so that it's destroyed when Export is disposed\n\n\n      this._disposers.push(this._menu);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if this specific menu item type is supported by current system.\r\n   *\r\n   * @param type  Menu item type\r\n   * @return `false` if not supported\r\n   */\n\n  Export.prototype.typeSupported = function (type) {\n    var supported = true;\n    var options = this.getFormatOptions(type);\n\n    if ($type.hasValue(options) && options.disabled) {\n      supported = false;\n    } else if (type === \"pdf\") {//supported = this.downloadSupport();\n    } else if (type === \"xlsx\") {\n      //supported = (this.downloadSupport() && this._hasData()) ? true : false;\n      supported = this._hasData() ? true : false;\n    } else if (type == \"print\" && !window.print) {\n      supported = false;\n    } else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\n      supported = false;\n    }\n\n    return this.adapter.apply(\"supported\", {\n      supported: supported,\n      type: type\n    }).supported;\n  };\n  /**\r\n   * Checks if data is available.\r\n   *\r\n   * @return Has data?\r\n   */\n\n\n  Export.prototype._hasData = function () {\n    return this.data && this.data.length;\n  };\n  /**\r\n   * Get function to handle export for particular format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype._getFunction = function (type) {\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n      case \"jpg\":\n        return this.getImage;\n\n      case \"svg\":\n        return this.getSVG;\n\n      case \"pdf\":\n      case \"pdfdata\":\n        return this.getPDF;\n\n      case \"xlsx\":\n        return this.getExcel;\n\n      case \"csv\":\n        return this.getCSV;\n\n      case \"json\":\n        return this.getJSON;\n\n      case \"html\":\n        return this.getHTML;\n\n      case \"print\":\n        return this.getPrint;\n\n      default:\n        return this.unsupported;\n    }\n  };\n  /**\r\n   * Initiates export procedure.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return `true` if export was successful\r\n   * @async\r\n   */\n\n\n  Export.prototype.export = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event_1, func, data, event_2, event_3;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check if it's a custom item, and do nothing or execute custom callback\n            if (type == \"custom\") {\n              this.handleCustom(options);\n              return [2\n              /*return*/\n              , true];\n            } // Set export running flag\n\n\n            this._exportRunning = true; // Dispatch event\n\n            if (this.events.isEnabled(\"exportstarted\")) {\n              event_1 = {\n                \"type\": \"exportstarted\",\n                \"target\": this,\n                \"format\": type,\n                \"options\": options\n              };\n              this.events.dispatchImmediately(\"exportstarted\", event_1);\n            } // Schedule a preloader\n\n\n            this.showPreloader(); // Schedule a timeout\n\n            if (this.timeoutDelay) {\n              this.hideTimeout();\n              this._timeoutTimeout = this.setTimeout(function () {\n                // Dispatch event\n                if (_this.events.isEnabled(\"exporttimedout\")) {\n                  var event_4 = {\n                    \"type\": \"exporttimedout\",\n                    \"target\": _this,\n                    \"format\": type,\n                    \"options\": options\n                  };\n\n                  _this.events.dispatchImmediately(\"exporttimedout\", event_4);\n                } // Show modal\n\n\n                _this.showTimeout();\n              }, this.timeoutDelay);\n            } // Hide items that should not be exported\n\n\n            this.hideNonExportableSprites();\n            func = this._getFunction(type); // Give chance for plugins to override both function and options\n\n            options = this.adapter.apply(\"options\", {\n              options: options,\n              type: type\n            }).options;\n            func = this.adapter.apply(\"exportFunction\", {\n              func: func,\n              type: type,\n              options: options\n            }).func;\n            return [4\n            /*yield*/\n            , func.call(this, type, options)];\n\n          case 1:\n            data = _a.sent(); // Release pointers\n\n            this._exportRunning = false;\n\n            this._releasePointers(); // Restore temporarily hidden elements\n\n\n            this.restoreNonExportableSprites();\n\n            if (data) {\n              // Dispatch event\n              if (this.events.isEnabled(\"exportfinished\")) {\n                event_2 = {\n                  \"type\": \"exportfinished\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"exportfinished\", event_2);\n              } // Hide preloader and timeout modals\n\n\n              this.hidePreloader();\n              this.hideTimeout();\n\n              if (this.menu) {\n                this.menu.close();\n              } // Download or print\n\n\n              if (type === \"print\") {\n                return [2\n                /*return*/\n                , this.print(data, options, this.adapter.apply(\"title\", {\n                  title: this.title,\n                  options: options\n                }).title)];\n              } else {\n                if (type == \"pdfdata\") {\n                  return [2\n                  /*return*/\n                  , this.download(data, this.filePrefix + \".pdf\")];\n                }\n\n                return [2\n                /*return*/\n                , this.download(data, this.filePrefix + \".\" + type, options && options.addBOM)];\n              }\n            } else {\n              // Throw exception?\n              // @todo\n              // Dispatch event\n              if (this.events.isEnabled(\"error\")) {\n                event_3 = {\n                  \"type\": \"error\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"error\", event_3);\n              }\n\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * A function that should handle unsupported export types.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.unsupported = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // TODO should this return `undefined`?\n        return [2\n        /*return*/\n        , \"\"];\n      });\n    });\n  };\n  /**\r\n   * Handles click on a \"custom\" menu item.\r\n   *\r\n   * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param options  Options\r\n   */\n\n\n  Export.prototype.handleCustom = function (options) {\n    if ($type.hasValue(options) && $type.hasValue(options.callback)) {\n      options.callback.call(options.callbackTarget || this, options);\n    }\n  };\n  /**\r\n   * Requests a Print of the chart.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getPrint = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.getImage(\"png\", options)];\n      });\n    });\n  };\n  /**\r\n   * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return String which can be embedded directly into a <style> element.\r\n   * @async\r\n   */\n\n\n  Export.prototype.getFontFamilies = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var DOMURL, blobs, promises, a;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            DOMURL = this.getDOMURL();\n            blobs = [];\n            promises = [];\n            return [4\n            /*yield*/\n            , eachStylesheets(function (topUrl, rule) {\n              if (rule.type === CSSRule.FONT_FACE_RULE) {\n                var cssText_1 = rule.cssText; // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\n\n                var src = fontFamilySrcRegexp.exec(cssText_1);\n\n                if (src !== null) {\n                  // TODO make this faster (don't create Promises for non-url stuff)\n                  var urls = src[1].split(/ *, */).map(function (url) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var a, after, fullUrl, response, url_1, e_3;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\n                            if (!(a === null)) return [3\n                            /*break*/\n                            , 1];\n                            return [2\n                            /*return*/\n                            , url];\n\n                          case 1:\n                            after = a[2];\n                            fullUrl = $utils.joinUrl(topUrl, a[1]);\n\n                            if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\n                              return [2\n                              /*return*/\n                              , null];\n                            }\n\n                            _a.label = 2;\n\n                          case 2:\n                            _a.trys.push([2, 7,, 8]);\n\n                            return [4\n                            /*yield*/\n                            , $net.load(fullUrl, undefined, {\n                              responseType: \"blob\"\n                            })];\n\n                          case 3:\n                            response = _a.sent();\n                            if (!supportsBlobUri()) return [3\n                            /*break*/\n                            , 4];\n                            url_1 = DOMURL.createObjectURL(response.blob);\n                            blobs.push(url_1);\n                            return [3\n                            /*break*/\n                            , 6];\n\n                          case 4:\n                            return [4\n                            /*yield*/\n                            , blobToDataUri(response.blob)];\n\n                          case 5:\n                            url_1 = _a.sent();\n                            _a.label = 6;\n\n                          case 6:\n                            // TODO should it should escape the URI ?\n                            return [2\n                            /*return*/\n                            , \"url(\\\"\" + url_1 + \"\\\")\" + after];\n\n                          case 7:\n                            e_3 = _a.sent();\n                            console.error(\"Failed to load font\", fullUrl, e_3);\n                            return [2\n                            /*return*/\n                            , null];\n\n                          case 8:\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                  promises.push(Promise.all(urls).then(function (a) {\n                    a = a.filter(function (x) {\n                      return x != null;\n                    });\n\n                    if (a.length === 0) {\n                      return \"\";\n                    } else {\n                      return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\n                    }\n                  }));\n                }\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 2:\n            a = _a.sent();\n            return [2\n            /*return*/\n            , {\n              blobs: blobs,\n              cssText: a.filter(function (x) {\n                return !!x;\n              }).join(\"\\n\")\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Produces image output from the element.\r\n   *\r\n   * Converts to a `Canvas` first, then produces an image to download.\r\n   *\r\n   * This is an asynchronous function. Rather than returning a result, it\r\n   * returns a Promise.\r\n   *\r\n   * You can use `await` notion from other async functions, or `then()`\r\n   * anywhere else.\r\n   *\r\n   * ```TypeScript\r\n   * let img;\r\n   *\r\n   * // Async\r\n   * img = await chart.exporting.getImage( \"png\" );\r\n   *\r\n   * // Sync\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   * ```JavaScript\r\n   * var img;\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   *\r\n   * @param  type           Image format\r\n   * @param  options        Options\r\n   * @param  includeExtras  Should extra sprites be included if set?\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.getImage = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri, e_4, data, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            } // Wait for required elements to be ready before proceeding\n\n\n            return [4\n            /*yield*/\n            , this.awaitValidSprites()];\n\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.simplifiedImageExport()];\n\n          case 2:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 10];\n            canvas = void 0;\n            _a.label = 3;\n\n          case 3:\n            _a.trys.push([3, 7,, 9]);\n\n            return [4\n            /*yield*/\n            , this.getCanvas(options)];\n\n          case 4:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.addExtras(canvas, options)];\n\n          case 5:\n            canvas = _a.sent();\n            _a.label = 6;\n\n          case 6:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality); // Get rid of the canvas\n\n            this.disposeCanvas(canvas);\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n\n          case 7:\n            e_4 = _a.sent();\n            console.error(e_4.message + \"\\n\" + e_4.stack);\n            $log.warn(\"Simple export failed, falling back to advanced export\");\n\n            if (canvas) {\n              this.disposeCanvas(canvas);\n            }\n\n            return [4\n            /*yield*/\n            , this.getImageAdvanced(type, options, includeExtras)];\n\n          case 8:\n            data = _a.sent();\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , data];\n\n          case 9:\n            return [3\n            /*break*/\n            , 12];\n\n          case 10:\n            return [4\n            /*yield*/\n            , this.getImageAdvanced(type, options, includeExtras)];\n\n          case 11:\n            data = _a.sent();\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , data];\n\n          case 12:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds extra elements to the canvas.\r\n   *\r\n   * @param  canvas   Original canvas\r\n   * @param  options  Options\r\n   */\n\n\n  Export.prototype.addExtras = function (canvas, options, advanced) {\n    return __awaiter(this, void 0, void 0, function () {\n      var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.extraSprites.length) return [3\n            /*break*/\n            , 2];\n            middleLeft_1 = 0;\n            middleTop_1 = 0;\n            middleWidth_1 = canvas.width;\n            middleHeight_1 = canvas.height;\n            extraRight_1 = 0;\n            extraBottom_1 = 0;\n            return [4\n            /*yield*/\n            , Promise.all($array.map(this.extraSprites, function (extraSprite) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var extra, extraCanvas, extraWidth, extraHeight;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (extraSprite instanceof Sprite) {\n                        extra = {\n                          sprite: extraSprite,\n                          position: \"bottom\"\n                        };\n                      } else {\n                        extra = extraSprite;\n                      } // Set defaults\n\n\n                      extra.position = extra.position || \"bottom\";\n                      extra.marginTop = extra.marginTop || 0;\n                      extra.marginRight = extra.marginRight || 0;\n                      extra.marginBottom = extra.marginBottom || 0;\n                      extra.marginLeft = extra.marginLeft || 0;\n                      if (!advanced) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , extra.sprite.exporting.getCanvasAdvanced(options)];\n\n                    case 1:\n                      extraCanvas = _a.sent();\n                      return [3\n                      /*break*/\n                      , 4];\n\n                    case 2:\n                      return [4\n                      /*yield*/\n                      , extra.sprite.exporting.getCanvas(options)];\n\n                    case 3:\n                      extraCanvas = _a.sent();\n                      _a.label = 4;\n\n                    case 4:\n                      extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n                      extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n\n                      if (extra.position == \"top\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        middleTop_1 += extraHeight;\n                      } else if (extra.position == \"right\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        extraRight_1 += extraWidth;\n                      } else if (extra.position == \"left\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        middleLeft_1 += extraWidth;\n                      } else if (extra.position === \"bottom\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        extraBottom_1 += extraHeight;\n                      }\n\n                      return [2\n                      /*return*/\n                      , {\n                        canvas: extraCanvas,\n                        position: extra.position,\n                        left: extra.marginLeft,\n                        top: extra.marginTop,\n                        width: extraWidth,\n                        height: extraHeight\n                      }];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            extras = _a.sent();\n            newCanvas = this.getDisposableCanvas();\n            newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\n            newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\n            ctx_1 = newCanvas.getContext(\"2d\");\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n\n            if (background) {\n              ctx_1.fillStyle = background.toString();\n              ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\n            }\n\n            left_1 = middleLeft_1;\n            top_1 = middleTop_1;\n            right_1 = left_1 + middleWidth_1;\n            bottom_1 = top_1 + middleHeight_1; // Radiates outwards from center\n\n            $array.each(extras, function (extra) {\n              if (extra.position == \"top\") {\n                top_1 -= extra.height;\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\n              } else if (extra.position == \"right\") {\n                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\n                right_1 += extra.width;\n              } else if (extra.position == \"left\") {\n                left_1 -= extra.width;\n                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\n              } else if (extra.position === \"bottom\") {\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\n                bottom_1 += extra.height;\n              }\n\n              _this.disposeCanvas(extra.canvas);\n            });\n            ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\n            return [2\n            /*return*/\n            , newCanvas];\n\n          case 2:\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]].\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n\n\n  Export.prototype.getCanvas = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            DOMURL = this.getDOMURL();\n            url = null;\n            blobs = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 4, 5]);\n\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options); // Create canvas and its 2D context\n\n            canvas = this.getDisposableCanvas(); // Set canvas width/height\n\n            canvas.style.width = width * scale + 'px';\n            canvas.style.height = height * scale + 'px';\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n            ctx = canvas.getContext(\"2d\"); // if (pixelRatio != 1) {\n            // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            // }\n            // Add background if necessary\n\n            if (background) {\n              ctx.fillStyle = background.toString();\n              ctx.fillRect(0, 0, width * scale, height * scale);\n            }\n\n            promises = [];\n\n            if (this.useWebFonts) {\n              // TODO what if one of the other things errors before it's been able to set `blobs` ?\n              promises.push(this.getFontFamilies().then(function (fonts) {\n                blobs = fonts.blobs;\n                return fonts.cssText;\n              }));\n            }\n\n            promises.push(this.imagesToDataURI(this.sprite.dom, options));\n            promises.push(this.prepForeignObjects(this.sprite.dom, options));\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 2:\n            a = _a.sent();\n            data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            svg = new Blob([data], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            return [4\n            /*yield*/\n            , this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\n\n          case 3:\n            img = _a.sent(); // Draw image on canvas\n\n            ctx.drawImage(img, 0, 0);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            if (url !== null) {\n              DOMURL.revokeObjectURL(url);\n            }\n\n            if (blobs !== null) {\n              $array.each(blobs, function (url) {\n                DOMURL.revokeObjectURL(url);\n              });\n            } // Restore replaced tainted images in DOM\n\n\n            this.restoreRemovedObjects();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]] using canvg.\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n\n\n  Export.prototype.getCanvasAdvanced = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            } // Convert external images to data uris\n\n\n            return [4\n            /*yield*/\n            , this.imagesToDataURI(this.sprite.dom, options)];\n\n          case 1:\n            // Convert external images to data uris\n            _a.sent();\n\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            return [4\n            /*yield*/\n            , this.canvg];\n\n          case 2:\n            canvg = _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\n            canvas = this.getDisposableCanvas(); // Set canvas width/height\n\n            canvas.style.width = width * pixelRatio * scale + 'px';\n            canvas.style.height = height * pixelRatio * scale + 'px';\n            canvas.width = width * pixelRatio * scale;\n            canvas.height = height * pixelRatio * scale;\n            config = {\n              //ignoreDimensions: true,\n              useCORS: true\n            };\n\n            if (pixelRatio != 1) {\n              config.ignoreDimensions = true;\n              config.scaleWidth = width * pixelRatio * scale;\n              config.scaleHeight = height * pixelRatio * scale;\n            }\n\n            return [4\n            /*yield*/\n            , canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n   * export an image using its functions.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Image format\r\n   * @param options  Options\r\n   * @return Data uri\r\n   */\n\n\n  Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n\n            return [4\n            /*yield*/\n            , this.getCanvasAdvanced(options)];\n\n          case 1:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.addExtras(canvas, options, true)];\n\n          case 2:\n            canvas = _a.sent();\n            _a.label = 3;\n\n          case 3:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality); // Get rid of the canvas\n\n            this.disposeCanvas(canvas);\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates a `<canvas>` element and returns it.\r\n   *\r\n   * @return Canvas element\r\n   */\n\n\n  Export.prototype.getDisposableCanvas = function () {\n    var canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"-10000px\";\n    document.body.appendChild(canvas);\n    return canvas;\n  };\n  /**\r\n   * Removes canvas.\r\n   *\r\n   * @param canvas  Canvas element\r\n   */\n\n\n  Export.prototype.disposeCanvas = function (canvas) {\n    document.body.removeChild(canvas);\n  };\n  /**\r\n   * Returns pixel ratio for retina displays.\r\n   *\r\n   * @return Pixel ratio\r\n   */\n\n\n  Export.prototype.getPixelRatio = function (options) {\n    // const scale = options && options.scale ? options.scale : 1;\n    // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\n    return this.useRetina ? $utils.getPixelRatio() : 1;\n  };\n  /**\r\n   * Calculates adjusted scale if image does not fit or is larger than min/max\r\n   * settings.\r\n   *\r\n   * @param   width    Width of the source image\r\n   * @param   height   Height of the source image\r\n   * @param   scale    Current scale\r\n   * @param   options  Options\r\n   * @return           Adjusted scale\r\n   */\n\n\n  Export.prototype.getAdjustedScale = function (width, height, scale, options) {\n    if (!options) {\n      return scale;\n    }\n\n    var adjWidth = width * scale;\n    var adjHeight = width * scale; // Check max restrictions\n\n    var widthScale;\n    var heightScale;\n\n    if (options.maxWidth && adjWidth > options.maxWidth) {\n      widthScale = options.maxWidth / width;\n    }\n\n    if (options.maxHeight && adjHeight > options.maxHeight) {\n      heightScale = options.maxHeight / height;\n    }\n\n    if (widthScale || heightScale) {\n      return $math.min(widthScale, heightScale);\n    } // Check min restrictions\n\n\n    if (options.minWidth && adjWidth < options.minWidth) {\n      widthScale = options.minWidth / width;\n    }\n\n    if (options.minHeight && adjHeight < options.minHeight) {\n      heightScale = options.minHeight / height;\n    }\n\n    if (widthScale || heightScale) {\n      return $math.max(widthScale, heightScale);\n    }\n\n    return scale;\n  };\n  /**\r\n   * Converts all `<image>` tags in SVG to use data uris instead of external\r\n   * URLs\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.imagesToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var images, promises, count, i, image, href;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            images = el.querySelectorAll(\"image\");\n            if (!images.length) return [3\n            /*break*/\n            , 2];\n            promises = []; // There are images, process each of them\n\n            for (count = images.length, i = 0; i < count; i++) {\n              image = images[i];\n              href = image.getAttributeNS(Export.XLINK, \"href\"); // no href?\n\n              if (!href) {\n                continue;\n              }\n\n              if (href.indexOf(\"data:image\") !== -1) {// Ignore image if it's already in Data URI format\n              } else {\n                // SVG or bitmap image?\n                if (href.indexOf(\".svg\") !== -1) {\n                  promises.push(this.svgToDataURI(image, options));\n                } else {\n                  promises.push(this.imageToDataURI(image, options));\n                }\n              }\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * `foreignObject` elements cannot be exported. This function hides them\r\n   * temprarily. In the future it might try to convert them to SVG to make them\r\n   * exportable.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.prepForeignObjects = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var objects, count, i;\n      return __generator(this, function (_a) {\n        objects = el.querySelectorAll(\"foreignObject\");\n\n        if (objects.length) {\n          // There are foreign objects, process each of them\n          for (count = objects.length, i = 0; i < count; i++) {\n            this.temporarilyRemoveObject(objects[i]);\n          }\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n   * external file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG element\r\n   * @param options  Options\r\n   */\n\n\n  Export.prototype.imageToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var img, canvas, uri, e_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\n\n          case 1:\n            // Create image\n            img = _a.sent();\n            canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height; // Draw new image on it via `toDataURL`\n\n            canvas.getContext(\"2d\").drawImage(img, 0, 0); // Replace image `href` with data uri\n            // If we got to this point it means image has loaded, however we might\n            // still get an error with `toDataURL()`\n\n            try {\n              uri = canvas.toDataURL();\n              el.setAttribute(\"href\", uri);\n              return [2\n              /*return*/\n              , uri];\n            } catch (e) {\n              // Give up and temporarily remove the element href temporarily\n              if (options.keepTainted !== false) {\n                /*this._removedObjects.push({\r\n                    \"element\": el,\r\n                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                });\r\n                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n                this.temporarilyRemoveObject(el);\n              }\n\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_5 = _a.sent(); // Give up and temporarily remove the element's href\n\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n   * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el        An SVG element\r\n   * @param options   Options\r\n   */\n\n\n  Export.prototype.svgToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var href, data, charset, uri, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            href = el.getAttributeNS(Export.XLINK, \"href\");\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , $net.load(href)];\n\n          case 2:\n            data = _a.sent();\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"base64\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"svgToDataURI\", {\n              data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\n              options: options\n            }).data;\n            el.setAttributeNS(Export.XLINK, \"href\", uri);\n            return [2\n            /*return*/\n            , uri];\n\n          case 3:\n            e_6 = _a.sent(); // Disable temporarily\n\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": href\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Temporarily removes element from DOM, and replaces it with a dummy\r\n   * placeholder, as well as stores it for later restoration.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el Node\r\n   */\n\n\n  Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\n    // Get parent\n    var parent = el.parentElement || el.parentNode; // Create a placeholder group element if it has not been passed in\n\n    if (!placeholder) {\n      placeholder = this.sprite.paper.add(\"g\").node;\n    }\n\n    parent.insertBefore(placeholder, el); // Check if we have a textContents we can replace with\n    // @todo Perhaps we should explore alternatives to creating text nodes\n    // i.e. creating a text version of the HTML-based Text, just for export\n    // purposes. Converting HTML into SVG is very complicated\n\n    if (el.textContent) {\n      /*let text = this.sprite.paper.add(\"text\").node;\r\n      text.textContent = el.textContent;\r\n      placeholder.appendChild(text);\r\n        // Copy properties from the removing element to the placeholder\r\n      $dom.copyAttributes(el, placeholder);*/\n    } // Remove the old element\n\n\n    parent.removeChild(el); // Log removed item\n\n    this._removedObjects.push({\n      \"element\": el,\n      \"placeholder\": placeholder\n    });\n  };\n  /**\r\n   * Restores all (possibly tainted or unsupported) objects that were\r\n   * temporarily removed when exporting.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.restoreRemovedObjects = function () {\n    var obj;\n\n    while (true) {\n      obj = this._removedObjects.pop();\n\n      if (!obj) {\n        break;\n      } //obj.element.setAttribute(\"href\", obj.originalHref);\n\n\n      var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\n      parent_1.insertBefore(obj.element, obj.placeholder); //parent.removeChild(obj.placeholder);\n    }\n  };\n  /**\r\n   * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n   * document does not contain any external images.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return `true` if simplified export can be used\r\n   */\n\n\n  Export.prototype.simplifiedImageExport = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.useSimplifiedExport === false) {\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache = registry.getCache(\"simplifiedImageExport\");\n\n            if (cache === false || cache === true) {\n              return [2\n              /*return*/\n              , cache];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            DOMURL = this.getDOMURL();\n            svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            img = void 0;\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.loadNewImage(url, 1, 1)];\n\n          case 3:\n            img = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_7 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 5:\n            ctx.drawImage(img, 0, 0);\n            DOMURL.revokeObjectURL(url);\n\n            try {\n              //let uri = canvas.toDataURL(\"image/png\");\n              registry.setCache(\"simplifiedImageExport\", true);\n              return [2\n              /*return*/\n              , true];\n            } catch (e) {\n              registry.setCache(\"simplifiedImageExport\", false);\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_8 = _a.sent();\n            registry.setCache(\"simplifiedImageExport\", false);\n            return [2\n            /*return*/\n            , false];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns a new `<image>` element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param url          URL of the image\r\n   * @param width        Width (px)\r\n   * @param height       Height (px)\r\n   * @param crossOrigin  Cross-Origin setting\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\n    return new Promise(function (success, error) {\n      // New image\n      var image;\n\n      if (width && height) {\n        image = new Image(width, height);\n      } else {\n        image = new Image();\n      } // Set crossorigin\n\n\n      if (crossOrigin) {\n        image.setAttribute(\"crossOrigin\", crossOrigin);\n      } // Report success on load\n\n\n      image.onload = function () {\n        success(image);\n      };\n\n      function onerror() {\n        // Error occurred. Just in case it's the crossOrigin issue, let's try\n        // stripping off this attribute and trying again\n        if (crossOrigin) {\n          // Retain old uri\n          var currentHref = image.src; // Set up another `onerror` to handle situations where image is not\n          // loadable at all (i.e. protected by CORS)\n\n          image.onerror = function () {\n            // Nope, no luck\n            error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n          }; // remove the `crossOrigin` attribute\n\n\n          image.removeAttribute(\"crossorigin\"); // retry\n\n          image.src = \"\";\n          image.src = currentHref;\n        } else {\n          error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n        }\n      } // Set image error handlers\n\n\n      image.onabort = onerror;\n      image.onerror = onerror; // Trigger load\n\n      image.src = url;\n    });\n  };\n  /**\r\n   * Returns current DOM URL.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return URL\r\n   */\n\n\n  Export.prototype.getDOMURL = function () {\n    return self.URL || self.webkitURL || self;\n  };\n  /**\r\n   * Returns an SVG representation of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.getSVG = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"svg\");\n            } // Wait for required elements to be ready before proceeding\n\n\n            return [4\n            /*yield*/\n            , this.awaitValidSprites()];\n\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"charset=utf-8\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"getSVG\", {\n              data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\n              options: options\n            }).data;\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n   * necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param svg       Input SVG\r\n   * @param options   Options\r\n   * @param width     Width of the SVG viewport\r\n   * @param height    Height of the SVG viewport\r\n   * @param font      Font family to use as a base\r\n   * @param fontSize  Font size to use as a base\r\n   * @return Output SVG\r\n   * @todo Add style params to existing <svg>\r\n   */\n\n\n  Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\n    // Construct width/height params\n    var dimParams = \"\";\n\n    if (width) {\n      dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\n    }\n\n    if (height) {\n      dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\n    } // Apply font settings\n\n\n    var styleParams = \"\";\n\n    if (font) {\n      styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\n    }\n\n    if (fontSize) {\n      styleParams += \"font-size: \" + fontSize + \";\";\n    } // Scale\n\n\n    if (scale) {\n      dimParams += \"viewBox=\\\"0 0 \" + width + \" \" + height + \"\\\" \";\n    } // Remove foreign objects temporarily\n\n\n    var fos = [];\n    var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\n\n    if (ms) {\n      for (var i = 0; i < ms.length; i++) {\n        svg = svg.replace(ms[i], $strings.PLACEHOLDER);\n        fos.push(ms[i]);\n      }\n    } // Add missing <svg> enclosure\n\n\n    if (!svg.match(/<svg/)) {\n      svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\n    } else {\n      if (dimParams !== \"\") {\n        // Clear current params\n        svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\n        svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\"); // Add new params\n\n        svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\n      }\n      /*if (styleParams !== \"\") {\r\n          // Clear current params\r\n          svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n          svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n            // Add new params\r\n          svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n      }*/\n\n    }\n\n    if (background) {\n      svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\"); //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\n    }\n\n    if ($browser.isInternetExplorer()) {\n      // IE can't handle exporting <feColorMatrix> for some reason\n      svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\n    } // Remove base uri-related stuff\n\n\n    var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\n    svg = svg.replace(reg, \"url(#\"); // Remove escaped quotes in url() parameters\n\n    svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\"); // Put foreignObjects back in\n\n    if (fos.length) {\n      for (var i = 0; i < fos.length; i++) {\n        svg = svg.replace($strings.PLACEHOLDER, fos[i]);\n      }\n    }\n\n    svg = this.adapter.apply(\"normalizeSVG\", {\n      data: svg,\n      options: options\n    }).data;\n    return svg;\n  };\n  /**\r\n   * Serializes an element and returns its contents.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element  An element to serialize\r\n   * @return A serialized XML\r\n   */\n\n\n  Export.prototype.serializeElement = function (element) {\n    return new XMLSerializer().serializeToString(element);\n  };\n  /**\r\n   * Returns a PDF containing chart image.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Account for header when calculating vertical fit\r\n   */\n\n\n  Export.prototype.getPDF = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      function addFont(font) {\n        var paths = {};\n        paths.normal = font.normal.path;\n        vfs[font.normal.path] = font.normal.bytes;\n\n        if (font.bold) {\n          paths.bold = font.bold.path;\n          vfs[font.bold.path] = font.bold.bytes;\n        } else {\n          paths.bold = font.normal.path;\n        }\n\n        if (font.italics) {\n          paths.italics = font.italics.path;\n          vfs[font.italics.path] = font.italics.bytes;\n        } else {\n          paths.italics = font.normal.path;\n        }\n\n        if (font.bolditalics) {\n          paths.bolditalics = font.bolditalics.path;\n          vfs[font.bolditalics.path] = font.bolditalics.bytes;\n        } else {\n          paths.bolditalics = font.normal.path;\n        }\n\n        fonts[font.name] = paths;\n      }\n\n      var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getImage(options.imageFormat || \"png\", options)];\n\n          case 1:\n            image = _d.sent();\n            return [4\n            /*yield*/\n            , this.pdfmake];\n\n          case 2:\n            pdfmake = _d.sent();\n            defaultMargins = [30, 30, 30, 30];\n            doc = {\n              pageSize: options.pageSize || \"A4\",\n              pageOrientation: options.pageOrientation || \"portrait\",\n              pageMargins: options.pageMargins || defaultMargins,\n              defaultStyle: {\n                font: options.font ? options.font.name : undefined\n              },\n              //header: <any>[],\n              content: []\n            };\n            title = this.adapter.apply(\"title\", {\n              title: this.title,\n              options: options\n            }).title;\n            extraMargin = 0;\n\n            if (title) {\n              doc.content.push({\n                text: title,\n                fontSize: options.fontSize || 14,\n                bold: true,\n                margin: [0, 0, 0, 15]\n              }); // Add some leftover margin for title\n\n              extraMargin += 50;\n            } // Add page URL?\n\n\n            if (options.addURL) {\n              doc.content.push({\n                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\n                fontSize: options.fontSize,\n                margin: [0, 0, 0, 15]\n              }); // Add some leftover margin for URL\n\n              extraMargin += 50;\n            } // Add image\n\n\n            if (type != \"pdfdata\") {\n              doc.content.push({\n                image: image,\n                alignment: options.align || \"left\",\n                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\n              });\n            }\n\n            if (!(type == \"pdfdata\" || options.addData)) return [3\n            /*break*/\n            , 4];\n            _b = (_a = doc.content).push;\n            _c = {};\n            return [4\n            /*yield*/\n            , this.getPDFData(\"pdf\", options)];\n\n          case 3:\n            _b.apply(_a, [(_c.table = _d.sent(), _c.fontSize = options.fontSize || 14, _c)]);\n\n            _d.label = 4;\n\n          case 4:\n            // Apply adapters\n            doc = this.adapter.apply(\"pdfmakeDocument\", {\n              doc: doc,\n              options: options\n            }).doc;\n            fonts = null;\n            vfs = null;\n\n            if (options.font) {\n              fonts = {};\n              vfs = {};\n              addFont(options.font);\n\n              if (options.extraFonts) {\n                $array.each(options.extraFonts, addFont);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , new Promise(function (success, error) {\n              pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\n                success(uri);\n              });\n            })];\n\n          case 5:\n            // Create PDF\n            return [2\n            /*return*/\n            , _d.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getPDFData = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var content, dataFields, data, dataFieldsOrder_1, len, i;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        content = {\n          \"body\": []\n        };\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"pdf\"\n        }).dataFields;\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"pdfdata\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\n          }, function (a, b) {\n            //console.log(a, b)\n            var ai = dataFieldsOrder_1.indexOf(a);\n            var bi = dataFieldsOrder_1.indexOf(b);\n\n            if (ai > bi) {\n              return 1;\n            } else if (ai < bi) {\n              return -1;\n            }\n\n            return 0;\n          });\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n            content.headerRows = 1;\n          }\n\n          for (len = data.length, i = 0; i < len; i++) {\n            content.body.push(this.getPDFDataRow(data[i], options, dataFields));\n          }\n        }\n\n        return [2\n        /*return*/\n        , this.adapter.apply(\"pdfmakeTable\", {\n          table: content,\n          options: options\n        }).table];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of data for use in PDF data table (pdfmake).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @since 4.7.0\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated Data line\r\n   */\n\n\n  Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"pdfdata\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      item = \"\" + item; // Add to item\n\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns fit dimensions for available page sizes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pageSize Page size\r\n   * @return `[width, height]` in pixels\r\n   */\n\n\n  Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\n    if (extraMargin === void 0) {\n      extraMargin = 0;\n    } // Check margins\n\n\n    var newMargins = [0, 0, 0, 0];\n\n    if (typeof margins == \"number\") {\n      newMargins = [margins, margins, margins, margins];\n    } else if (margins.length == 2) {\n      newMargins = [margins[0], margins[1], margins[0], margins[1]];\n    } else if (margins.length == 4) {\n      newMargins = margins;\n    } // Define available page sizes\n\n\n    var sizes = {\n      \"4A0\": [4767.87, 6740.79],\n      \"2A0\": [3370.39, 4767.87],\n      A0: [2383.94, 3370.39],\n      A1: [1683.78, 2383.94],\n      A2: [1190.55, 1683.78],\n      A3: [841.89, 1190.55],\n      A4: [595.28, 841.89],\n      A5: [419.53, 595.28],\n      A6: [297.64, 419.53],\n      A7: [209.76, 297.64],\n      A8: [147.40, 209.76],\n      A9: [104.88, 147.40],\n      A10: [73.70, 104.88],\n      B0: [2834.65, 4008.19],\n      B1: [2004.09, 2834.65],\n      B2: [1417.32, 2004.09],\n      B3: [1000.63, 1417.32],\n      B4: [708.66, 1000.63],\n      B5: [498.90, 708.66],\n      B6: [354.33, 498.90],\n      B7: [249.45, 354.33],\n      B8: [175.75, 249.45],\n      B9: [124.72, 175.75],\n      B10: [87.87, 124.72],\n      C0: [2599.37, 3676.54],\n      C1: [1836.85, 2599.37],\n      C2: [1298.27, 1836.85],\n      C3: [918.43, 1298.27],\n      C4: [649.13, 918.43],\n      C5: [459.21, 649.13],\n      C6: [323.15, 459.21],\n      C7: [229.61, 323.15],\n      C8: [161.57, 229.61],\n      C9: [113.39, 161.57],\n      C10: [79.37, 113.39],\n      RA0: [2437.80, 3458.27],\n      RA1: [1729.13, 2437.80],\n      RA2: [1218.90, 1729.13],\n      RA3: [864.57, 1218.90],\n      RA4: [609.45, 864.57],\n      SRA0: [2551.18, 3628.35],\n      SRA1: [1814.17, 2551.18],\n      SRA2: [1275.59, 1814.17],\n      SRA3: [907.09, 1275.59],\n      SRA4: [637.80, 907.09],\n      EXECUTIVE: [521.86, 756.00],\n      FOLIO: [612.00, 936.00],\n      LEGAL: [612.00, 1008.00],\n      LETTER: [612.00, 792.00],\n      TABLOID: [792.00, 1224.00]\n    }; // Calculate size\n\n    var fitSize = sizes[pageSize];\n    fitSize[0] -= newMargins[0] + newMargins[2];\n    fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n    return fitSize;\n  };\n  /**\r\n   * Returns an Excel file of chart's data.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Handle dates\r\n   * @todo Support for multi-sheet\r\n   */\n\n\n  Export.prototype.getExcel = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"xlsx\");\n            }\n\n            return [4\n            /*yield*/\n            , this.xlsx];\n\n          case 1:\n            XLSX = _a.sent();\n            wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\n              xlsx: XLSX,\n              options: {\n                bookType: \"xlsx\",\n                bookSST: false,\n                type: \"base64\"\n              }\n            }).options;\n            sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\n              xlsx: XLSX,\n              name: this.title || this.language.translate(\"Data\")\n            }).name);\n            wb = {\n              SheetNames: [sheetName],\n              Sheets: {}\n            };\n            data = [];\n            dataFields = this.adapter.apply(\"formatDataFields\", {\n              dataFields: this.dataFields,\n              format: \"xslx\"\n            }).dataFields; // Vertical or horizontal (default) layout\n\n            if (options.pivot) {\n              dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\n                dataFieldsOrder: this.dataFieldsOrder,\n                format: \"xlsx\"\n              }).dataFieldsOrder;\n              $object.eachOrdered(dataFields, function (key, val) {\n                var dataRow = [];\n\n                if (options.addColumnNames) {\n                  dataRow.push(val);\n                }\n\n                for (var len = _this.data.length, i = 0; i < len; i++) {\n                  var dataValue = _this.data[i][key];\n                  dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n                }\n\n                data.push(_this.getExcelRow(dataRow, options, undefined, true));\n              }, function (a, b) {\n                //console.log(a, b)\n                var ai = dataFieldsOrder_2.indexOf(a);\n                var bi = dataFieldsOrder_2.indexOf(b);\n\n                if (ai > bi) {\n                  return 1;\n                } else if (ai < bi) {\n                  return -1;\n                }\n\n                return 0;\n              });\n            } else {\n              // Add column names?\n              if (options.addColumnNames) {\n                data.push(this.getExcelRow(dataFields, options, undefined, true));\n              } // Add lines\n\n\n              for (len = this.data.length, i = 0; i < len; i++) {\n                data.push(this.getExcelRow(this.data[i], options, dataFields));\n              }\n            } // Create sheet and add data\n\n\n            wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data); // Apply adapters\n\n            wb = this.adapter.apply(\"xlsxWorkbook\", {\n              xlsx: XLSX,\n              workbook: wb,\n              options: options\n            }).workbook;\n            uri = this.adapter.apply(\"getExcel\", {\n              data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\n              options: options\n            }).data;\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * This is needed to work around Excel limitations.\r\n   *\r\n   * @param name  Source name\r\n   * @return Normalized name\r\n   */\n\n\n  Export.prototype.normalizeExcelSheetName = function (name) {\n    name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n    return $utils.truncateWithEllipsis(name, 31, \"...\", true);\n  };\n  /**\r\n   * Rertuns an array of values to be used as Excel row.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         Row data\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Array of values\r\n   */\n\n\n  Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"xlsx\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns chart's data formatted as CSV.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getCSV = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"csv\");\n        }\n\n        csv = \"\";\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"csv\"\n        }).dataFields;\n        br = \"\";\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"csv\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            csv += br + _this.getCSVRow(dataRow, options, undefined, true);\n            br = \"\\n\";\n          }, function (a, b) {\n            var ai = dataFieldsOrder_3.indexOf(a);\n            var bi = dataFieldsOrder_3.indexOf(b);\n\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else {\n          for (len = data.length, i = 0; i < len; i++) {\n            row = this.getCSVRow(data[i], options, dataFields);\n\n            if (options.reverse) {\n              csv = row + br + csv;\n            } else {\n              csv += br + row;\n            }\n\n            br = \"\\n\";\n          } // Add column names?\n\n\n          if (options.addColumnNames) {\n            csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n          }\n        }\n\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getCSV\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of CSV data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated CSV line\r\n   */\n\n\n  Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var separator = options.separator || \",\";\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"csv\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Check if we need to skip\n      // This is no longer required because we are iterating via dataFields anyway\n\n      /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n          return;\r\n      }*/\n      // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options); // Cast and escape doublequotes\n\n      item = \"\" + item;\n      item = item.replace(/\"/g, '\"\"'); // Enclose into double quotes\n\n      if (options.forceQuotes || item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0) {\n        item = \"\\\"\" + item + \"\\\"\";\n      } // Add to item\n\n\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items.join(separator);\n  };\n  /**\r\n   * Returns chart's data formatted as HTML table.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getHTML = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"html\");\n        }\n\n        html = \"<table>\";\n\n        if (options.tableClass) {\n          html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n        }\n\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"html\"\n        }).dataFields;\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"html\"\n          }).dataFieldsOrder;\n          html += \"\\n<tbody>\";\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\n          }, function (a, b) {\n            var ai = dataFieldsOrder_4.indexOf(a);\n            var bi = dataFieldsOrder_4.indexOf(b);\n\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n\n            return 0;\n          });\n          html += \"\\n</tbody>\";\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n          }\n\n          html += \"\\n<tbody>\";\n\n          for (len = data.length, i = 0; i < len; i++) {\n            html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n          }\n\n          html += \"\\n</tbody>\";\n        }\n\n        html += \"\\n</table>\";\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getHTML\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of HTML data.\r\n   *\r\n   * @since 4.7.0\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated HTML row\r\n   */\n\n\n  Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    }\n\n    if (headerRow === void 0) {\n      headerRow = false;\n    } // Init output\n\n\n    var html = \"\\t<tr>\";\n\n    if (options.rowClass) {\n      html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n    } // Data fields\n\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"html\"\n    }).dataFieldsOrder; // th or dh?\n\n    var tag = headerRow ? \"th\" : \"td\"; // Process each row item\n\n    var first = true;\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options); // Escape HTML entities\n\n      item = \"\" + item;\n      item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\n        return \"&#\" + i.charCodeAt(0) + \";\";\n      }); // Which tag to use\n\n      var useTag = tag;\n\n      if (options.pivot && first) {\n        useTag = \"th\";\n      } // Add cell\n\n\n      if (options.cellClass) {\n        html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n      } else {\n        html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n      }\n\n      first = false;\n    }, function (a, b) {\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    html += \"\\n\\t</tr>\";\n    return html;\n  };\n  /**\r\n   * Returns chart's data in JSON format.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getJSON = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"json\");\n        }\n\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"json\"\n        }).dataFields;\n\n        if (!this._dynamicDataFields) {\n          data = [];\n          sourceData = this.data;\n\n          _loop_1 = function (len, i) {\n            var value = sourceData[i];\n\n            if (typeof value == \"object\") {\n              var newValue_1 = {};\n              $object.each(value, function (field, item) {\n                if ($type.hasValue(dataFields[field])) {\n                  newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\n                }\n              });\n              data.push(newValue_1);\n            }\n          };\n\n          for (len = sourceData.length, i = 0; i < len; i++) {\n            _loop_1(len, i);\n          }\n        } else {\n          data = this.data;\n        }\n\n        json = JSON.stringify(data, function (key, value) {\n          if (typeof value == \"object\") {\n            $object.each(value, function (field, item) {\n              value[field] = _this.convertToSpecialFormat(field, item, options);\n            });\n          }\n\n          return value;\n        }, options.indent);\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getJSON\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Converts the value to proper date format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  field         Field name\r\n   * @param  value         Value\r\n   * @param  options       Options\r\n   * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n   * @return Formatted date value or unmodified value\r\n   */\n\n\n  Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\n    // Is this a timestamp or duration?\n    if (typeof value == \"number\") {\n      if (this.isDateField(field)) {\n        value = new Date(value);\n      } else if (this.isDurationField(field)) {\n        return this.durationFormatter.format(value, this.durationFormat);\n      } else if (this.isNumberField(field) && this.numberFormat) {\n        return this.numberFormatter.format(value, this.numberFormat);\n      }\n    }\n\n    if (value instanceof Date) {\n      if (options.useTimestamps) {\n        value = value.getTime();\n      } else if (options.useLocale) {\n        if (!keepOriginal) {\n          value = value.toLocaleString();\n        }\n      } else {\n        value = this.dateFormatter.format(value, this.dateFormat);\n      }\n    } else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\n      value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\n    }\n\n    return value;\n  };\n  /**\r\n   * Converts empty value based on `emptyAs` option.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.convertEmptyValue = function (field, value, options) {\n    return $type.hasValue(value) ? value : options.emptyAs;\n  };\n  /**\r\n   * Triggers download of the file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param uri       Data URI with file content\r\n   * @param fileName  File name\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.download = function (uri, fileName, addBOM) {\n    if (addBOM === void 0) {\n      addBOM = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\n      return __generator(this, function (_a) {\n        if (this.msBlobDownloadSupport()) {\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\")); // Check if we need to Base64-decode\n\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2\n              /*return*/\n              , false];\n            }\n          } else {\n            blob_1 = new Blob([uri], {\n              type: contentType\n            });\n            window.navigator.msSaveBlob(blob_1, fileName);\n            return [2\n            /*return*/\n            , true];\n          }\n\n          chars = new Array(uri.length);\n\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          window.navigator.msSaveBlob(blob, fileName);\n        } else if (this.blobDownloadSupport()) {\n          link_1 = document.createElement(\"a\");\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2\n              /*return*/\n              , false];\n            }\n          } else {\n            if (addBOM) {\n              uri = \"\\ufeff\" + uri;\n            }\n\n            blob_2 = new Blob([uri], {\n              type: contentType\n            });\n            url_2 = window.URL.createObjectURL(blob_2);\n            link_1.href = url_2;\n            link_1.download = fileName;\n            link_1.click();\n            setTimeout(function () {\n              document.body.removeChild(link_1);\n              window.URL.revokeObjectURL(url_2);\n            }, 100);\n            return [2\n            /*return*/\n            , true];\n          }\n\n          chars = new Array(uri.length);\n\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n\n          if (addBOM) {\n            chars = [0xEF, 0xBB, 0xBF].concat(chars);\n          }\n\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          url_3 = window.URL.createObjectURL(blob);\n          link_1.href = url_3;\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          link_1.click();\n          document.body.removeChild(link_1);\n          setTimeout(function () {\n            window.URL.revokeObjectURL(url_3);\n          }, 100);\n        } else if (this.linkDownloadSupport()) {\n          link = document.createElement(\"a\");\n          link.download = fileName;\n          link.href = uri;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else if (this.legacyIE()) {\n          parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\n\n          if (parts.length === 4) {\n            // Base64-encoded or text-based stuff?\n            if (parts[2] == \"base64\") {\n              // Base64-encoded - probably an image\n              if (parts[1].match(/^image\\//)) {\n                // Yep, an image. Let's create a temporary image placeholder,\n                // so that user can use do Save As.\n                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" + \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") + \"</p>\" + \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\n              }\n            } else {\n              contentType = void 0;\n\n              if (fileName.match(/\\.svg$/)) {\n                contentType = \"image/svg+xml\";\n              } else {\n                contentType = \"text/plain\";\n                fileName += \".txt\";\n              }\n\n              iframe = document.createElement(\"iframe\");\n              iframe.width = \"1px\";\n              iframe.height = \"1px\";\n              iframe.style.display = \"none\";\n              document.body.appendChild(iframe);\n              idoc = iframe.contentDocument;\n              idoc.open(contentType, \"replace\"); // TODO test this with various encodings (e.g. UTF)\n              //idoc.charset = parts[2].replace(/charset=/, \"\");\n\n              idoc.write(decodeURIComponent(parts[3]));\n              idoc.close();\n              idoc.execCommand(\"SaveAs\", true, fileName); // Destroy the iframe\n\n              document.body.removeChild(iframe);\n            }\n          }\n        } else {\n          /**\r\n           * Something else - perhaps a mobile.\r\n           * Let's just display it in the same page.\r\n           * (hey we don't like it either)\r\n           */\n          window.location.href = uri;\n        }\n\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n  /**\r\n   * Returns `true` if browser has any supported methods to trigger download\r\n   * of a binary file.\r\n   *\r\n   * @return Supports downloads?\r\n   */\n\n\n  Export.prototype.downloadSupport = function () {\n    //return !this.legacyIE();\n    return this.linkDownloadSupport() || this.msBlobDownloadSupport();\n  };\n  /**\r\n   * Checks if the browser supports \"download\" attribute on links.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.linkDownloadSupport = function () {\n    // Do we have this cached?\n    var cache = registry.getCache(\"linkDownloadSupport\");\n\n    if (cache === false || cache === true) {\n      return cache;\n    }\n\n    var a = document.createElement(\"a\");\n    var res = typeof a.download !== \"undefined\";\n    registry.setCache(\"linkDownloadSupport\", res);\n    return res;\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.blobDownloadSupport = function () {\n    return $type.hasValue(window.Blob);\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.msBlobDownloadSupport = function () {\n    return $type.hasValue(window.navigator.msSaveOrOpenBlob);\n  };\n  /**\r\n   * Checks if this is a legacy version of IE.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return IE9 or less?\r\n   */\n\n\n  Export.prototype.legacyIE = function () {\n    // Create a temporary <div> with conditional tags in it an an <i> tag.\n    // Count <i>s. If there are some, we have IE9 or late on our hands.\n    var div = document.createElement(\"div\");\n    div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\n    return div.getElementsByTagName(\"i\").length == 1;\n  };\n  /**\r\n   * Initiates print of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param data     Data URI for the image\r\n   * @param options  Options\r\n   * @param title    Optional title to use (uses window's title by default)\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.print = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.printMethod == \"css\") {\n          return [2\n          /*return*/\n          , this.printViaCSS(data, options, title)];\n        } else {\n          return [2\n          /*return*/\n          , this.printViaIframe(data, options, title)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  Export.prototype.printViaCSS = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var scroll, rule, originalTitle, img, isIOS;\n      return __generator(this, function (_a) {\n        scroll = document.documentElement.scrollTop || document.body.scrollTop;\n        rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\n          \"display\": \"none\",\n          \"position\": \"fixed\",\n          \"visibility\": \"hidden\",\n          \"opacity\": \"0\",\n          \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n        });\n\n        if (title && document && document.title) {\n          originalTitle = document.title;\n          document.title = title;\n        }\n\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.display = \"block\";\n        img.style.position = \"relative\";\n        img.style.visibility = \"visible\";\n        img.style.opacity = \"1\";\n        img.style.clipPath = \"none\";\n        document.body.appendChild(img); // Print\n\n        this.setTimeout(function () {\n          window.print();\n        }, 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        } // Delay function that resets back the document the way ot was before\n\n\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(img); // Reset back all elements\n\n          /*for (let len = items.length, i = 0; i < len; i++) {\r\n              let item = <HTMLElement>items[i];\r\n              if ($dom.isElement(item)) {\r\n                  item.style.display = states[i];\r\n              }\r\n          }*/\n\n          rule.dispose(); // Restore title\n\n          if (originalTitle) {\n            document.title = document.title;\n          } // Scroll back the document the way it was before\n\n\n          document.documentElement.scrollTop = document.body.scrollTop = scroll;\n        }, options.delay || 500);\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n\n  Export.prototype.printViaIframe = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var iframe, img, isIOS;\n      return __generator(this, function (_a) {\n        iframe = document.createElement(\"iframe\");\n        iframe.style.visibility = \"hidden\";\n        document.body.appendChild(iframe); // This is needed for FireFox\n\n        iframe.contentWindow.document.open();\n        iframe.contentWindow.document.close();\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.height = \"auto\";\n\n        if (title) {\n          iframe.contentWindow.document.title = title;\n        }\n\n        iframe.contentWindow.document.body.appendChild(img);\n\n        iframe.load = function () {\n          iframe.contentWindow.document.body.appendChild(img);\n        }; // Print\n\n\n        this.setTimeout(function () {\n          try {\n            if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\n              iframe.contentWindow.print();\n            }\n          } catch (e) {\n            iframe.contentWindow.print();\n          }\n        }, options.delay || 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        } // Delay function that resets back the document the way ot was before\n\n\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(iframe);\n        }, options.delay + 50 || 100);\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n  /**\r\n   * Finds a background color for the element. If element is transparent it goes\r\n   * up the DOM hierarchy to find a parent element that does.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element Element\r\n   * @return Color code\r\n   */\n\n\n  Export.prototype.findBackgroundColor = function (element) {\n    // Check if element has styles set\n    var opacity = 1,\n        currentColor = getComputedStyle(element, \"background-color\"); // Check opacity\n\n    if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n      opacity = 0;\n    }\n\n    if (opacity == 0) {\n      var parent_2 = element.parentElement; // || <Element>element.parentNode;\n      // Completely transparent. Look for a parent\n\n      if (parent_2) {\n        return this.findBackgroundColor(parent_2);\n      } else {\n        return color(\"#fff\");\n      }\n    } else {\n      return color(currentColor, opacity);\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"container\", {\n    /**\r\n     * @return Reference\r\n     */\n    get: function () {\n      return this.adapter.apply(\"container\", {\n        container: this._container\n      }).container;\n    },\n\n    /**\r\n     * A reference to a container to be used to place [[ExportMenu]] in.\r\n     *\r\n     * @param value Reference\r\n     */\n    set: function (value) {\n      this._container = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"sprite\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"sprite\", {\n        sprite: this._sprite\n      }).sprite;\n    },\n\n    /**\r\n     * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n     * internal elements.\r\n     *\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._sprite = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"extraSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"extraSprites\", {\n        extraSprites: this._extraSprites\n      }).extraSprites;\n    },\n\n    /**\r\n     * An array of extra [[Sprite]] elements to include in export.\r\n     *\r\n     * It can be used to export any external elements, or even other charts.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     *\r\n     * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n     *\r\n     * @since 4.2.0\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._extraSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"validateSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"validateSprites\", {\n        validateSprites: this._validateSprites\n      }).validateSprites;\n    },\n\n    /**\r\n     * An array of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     *\r\n     * If any of those elements is not completely ready when export is triggered,\r\n     * the export will wait until they are (their `validated` event triggers)\r\n     * before going through with the export opertaion.\r\n     *\r\n     * This is useful if you need to modify chart appearance for the export.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * // Add watermark\r\n     * let watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * // Add watermark\r\n     * var watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     *\r\n     * @since 4.6.8\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._validateSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"data\", {\n    /**\r\n     * @return Data\r\n     */\n    get: function () {\n      return this.adapter.apply(\"data\", {\n        data: this._data\n      }).data;\n    },\n\n    /**\r\n     * Data to export.\r\n     *\r\n     * @param value Data\r\n     */\n    set: function (value) {\n      this._data = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dataFields\", {\n    /**\r\n     * @return Field names `{ field: fieldName }`\r\n     */\n    get: function () {\n      if (!this._dataFields) {\n        this.generateDataFields();\n      }\n\n      return this.adapter.apply(\"dataFields\", {\n        dataFields: this._dataFields\n      }).dataFields;\n    },\n\n    /**\r\n     * Data fields in `{ field: fieldName }` format. Those are used for\r\n     * exporting in data formats to name the columns.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n     * @param value Field names\r\n     */\n    set: function (value) {\n      this._dataFields = value;\n      this._dynamicDataFields = false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Called after target chart's data updates.\r\n   *\r\n   * @ignore\r\n   */\n\n  Export.prototype.handleDataUpdated = function () {\n    if (this._dynamicDataFields) {\n      this._dataFields = undefined;\n    }\n\n    var hasData = this.data.length > 0;\n\n    if (this._prevHasData != hasData) {\n      this._prevHasData = hasData;\n\n      if (this.menu) {\n        this.menu.invalidate();\n      }\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"dateFormatter\", {\n    /**\r\n     * @return A DateFormatter instance\r\n     */\n    get: function () {\n      if (!this._dateFormatter) {\n        this._dateFormatter = new DateFormatter();\n        this._dateFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"dateFormatter\", {\n        dateFormatter: this._dateFormatter\n      }).dateFormatter;\n    },\n\n    /**\r\n     * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @param value DateFormatter instance\r\n     */\n    set: function (value) {\n      this._dateFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFormat\", {\n    /**\r\n     * @return Date format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dateFormat\", {\n        dateFormat: this._dateFormat\n      }).dateFormat;\n    },\n\n    /**\r\n     * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @param value Date format\r\n     */\n    set: function (value) {\n      this._dateFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFields\", {\n    /**\r\n     * @return Date field list\r\n     */\n    get: function () {\n      if (!this._dateFields) {\n        this._dateFields = new List();\n      }\n\n      return this.adapter.apply(\"dateFields\", {\n        dateFields: this._dateFields\n      }).dateFields;\n    },\n\n    /**\r\n     * A list of fields that hold date values.\r\n     *\r\n     * @param value Date field list\r\n     */\n    set: function (value) {\n      this._dateFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormatter\", {\n    /**\r\n     * @return A NumberFormatter instance\r\n     */\n    get: function () {\n      if (!this._numberFormatter) {\n        this._numberFormatter = new NumberFormatter();\n        this._numberFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"numberFormatter\", {\n        numberFormatter: this._numberFormatter\n      }).numberFormatter;\n    },\n\n    /**\r\n     * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value NumberFormatter instance\r\n     */\n    set: function (value) {\n      this._numberFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormat\", {\n    /**\r\n     * @return Number format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"numberFormat\", {\n        numberFormat: this._numberFormat\n      }).numberFormat;\n    },\n\n    /**\r\n     * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number format\r\n     */\n    set: function (value) {\n      this._numberFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFields\", {\n    /**\r\n     * @return Number field list\r\n     */\n    get: function () {\n      if (!this._numberFields) {\n        this._numberFields = new List();\n      }\n\n      return this.adapter.apply(\"numberFields\", {\n        numberFields: this._numberFields\n      }).numberFields;\n    },\n\n    /**\r\n     * A list of fields that hold number values.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number field list\r\n     */\n    set: function (value) {\n      this._numberFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormatter\", {\n    /**\r\n     * @return A DurationFormatter instance\r\n     */\n    get: function () {\n      if (!this._durationFormatter) {\n        this._durationFormatter = new DurationFormatter();\n        this._durationFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"durationFormatter\", {\n        durationFormatter: this._durationFormatter\n      }).durationFormatter;\n    },\n\n    /**\r\n     * A [[DurationFormatter]] to use when formatting duration values when\r\n     * exporting data.\r\n     *\r\n     * @param value  DurationFormatter instance\r\n     */\n    set: function (value) {\n      this._durationFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormat\", {\n    /**\r\n     * @return Duration format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"durationFormat\", {\n        durationFormat: this._durationFormat\n      }).durationFormat;\n    },\n\n    /**\r\n     * A format to use when formatting values from `durationFields`.\r\n     * Will use [[DurationFormatter]] format if not set.\r\n     *\r\n     * @param value Duration format\r\n     */\n    set: function (value) {\n      this._durationFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFields\", {\n    /**\r\n     * @return Duration field list\r\n     */\n    get: function () {\n      if (!this._durationFields) {\n        this._durationFields = new List();\n      }\n\n      return this.adapter.apply(\"durationFields\", {\n        durationFields: this._durationFields\n      }).durationFields;\n    },\n\n    /**\r\n     * A list of fields that hold duration values.\r\n     *\r\n     * @param value Duration field list\r\n     */\n    set: function (value) {\n      this._durationFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Generates data fields out of the first row of data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Export.prototype.generateDataFields = function () {\n    var _this = this;\n\n    this._dataFields = {};\n\n    if (this.data.length) {\n      $array.each(this.data, function (row) {\n        $object.each(row, function (key, value) {\n          if (!$type.hasValue(_this._dataFields[key])) {\n            _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\n              name: key,\n              field: key\n            }).name;\n          }\n        });\n      });\n    }\n  };\n  /**\r\n   * Cheks against `dateFields` property to determine if this field holds\r\n   * dates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n\n\n  Export.prototype.isDateField = function (field) {\n    return this.adapter.apply(\"isDateField\", {\n      isDateField: this.dateFields.contains(field),\n      field: field\n    }).isDateField;\n  };\n  /**\r\n   * Cheks against `numberFields` property to determine if this field holds\r\n   * numbers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a number field\r\n   */\n\n\n  Export.prototype.isNumberField = function (field) {\n    return this.adapter.apply(\"isNumberField\", {\n      isNumberField: this.numberFields.contains(field),\n      field: field\n    }).isNumberField;\n  };\n  /**\r\n   * Cheks against `durationFields` property to determine if this field holds\r\n   * durations.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n\n\n  Export.prototype.isDurationField = function (field) {\n    return this.adapter.apply(\"isDurationField\", {\n      isDurationField: this.durationFields.contains(field),\n      field: field\n    }).isDurationField;\n  };\n  /**\r\n   * Returns proper content type for the export type.\r\n   *\r\n   * @param type  Export format/type\r\n   * @return Proper content type, i.e. \"image/jpeg\"\r\n   */\n\n\n  Export.prototype.getContentType = function (type) {\n    var contentType = \"\";\n\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n        contentType = \"image/\" + type;\n        break;\n\n      case \"jpg\":\n        contentType = \"image/jpeg\";\n        break;\n\n      case \"svg\":\n        contentType = \"image/svg+xml\";\n        break;\n\n      case \"csv\":\n        contentType = \"text/csv\";\n        break;\n\n      case \"json\":\n        contentType = \"application/json\";\n        break;\n\n      case \"html\":\n        contentType = \"text/html\";\n        break;\n\n      case \"pdf\":\n      case \"pdfdata\":\n        contentType = \"application/pdf\";\n        break;\n\n      case \"xlsx\":\n        contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        break;\n    }\n\n    return this.adapter.apply(\"contentType\", {\n      contentType: contentType,\n      type: type\n    }).contentType;\n  };\n\n  Object.defineProperty(Export.prototype, \"filePrefix\", {\n    /**\r\n     * @return File prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"filePrefix\", {\n        filePrefix: this._filePrefix\n      }).filePrefix;\n    },\n\n    /**\r\n     * A file prefix to be used for all exported formats.\r\n     *\r\n     * Export will apply format-related extension to it. E.g. if this is set to\r\n     * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n     *\r\n     * @param value File prefix\r\n     */\n    set: function (value) {\n      this._filePrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"backgroundColor\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.adapter.apply(\"backgroundColor\", {\n        backgroundColor: this._backgroundColor\n      }).backgroundColor;\n    },\n\n    /**\r\n     * A background color to be used for exported images. If set, this will\r\n     * override the automatically acquired background color.\r\n     *\r\n     * @param value Color\r\n     */\n    set: function (value) {\n      this._backgroundColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"title\", {\n    /**\r\n     * @return Title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", {\n        title: this._title\n      }).title;\n    },\n\n    /**\r\n     * A title to be used when printing.\r\n     *\r\n     * @param value Title\r\n     */\n    set: function (value) {\n      this._title = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Add ability to change text\r\n   */\n\n  Export.prototype.showPreloader = function () {\n    var preloader = this.preloader;\n\n    if (preloader) {\n      preloader.progress = 0.5;\n      preloader.label.text = \"...\";\n    }\n  };\n  /**\r\n   * Hides preloader/exporting indicator\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hidePreloader = function () {\n    var preloader = this.preloader;\n\n    if (preloader) {\n      preloader.progress = 1;\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"preloader\", {\n    /**\r\n     * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n     * exported.\r\n     *\r\n     * @return Preloader\r\n     */\n    get: function () {\n      return this._sprite && this._sprite.parent && this._sprite.parent.preloader ? this._sprite.parent.preloader : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a modal saying export is taking longer than expected.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Export.prototype.showTimeout = function () {\n    this.showModal(this.adapter.apply(\"timeoutMessage\", {\n      message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\n    }).message);\n  };\n  /**\r\n   * Hides preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hideTimeout = function () {\n    if (this._timeoutTimeout) {\n      this.removeDispose(this._timeoutTimeout);\n      this._timeoutTimeout = null;\n    }\n\n    this.hideModal();\n  };\n\n  Object.defineProperty(Export.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      if (!this._language) {\n        this._language = new Language();\n      }\n\n      return this._language;\n    },\n\n    /**\r\n     * A [[Language]] instance to be used for translations.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      this._language = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"modal\", {\n    /**\r\n     * Returns (and creates) [[Modal]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Modal instance\r\n     */\n    get: function () {\n      if (!this._modal) {\n        this._modal = new Modal(); // Prefix with Sprite's class name\n\n        this._modal.adapter.add(\"classPrefix\", function (value) {\n          value = options.classNamePrefix + value;\n          return value;\n        });\n      }\n\n      return this._modal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows [[Modal]] with specific text.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text Modal contents\r\n   */\n\n  Export.prototype.showModal = function (text, title) {\n    // Hide previous modal and preloader\n    this.hideModal();\n    this.hidePreloader(); // Create modal\n\n    var modal = this.modal;\n    modal.container = this.sprite.svgContainer.SVGContainer;\n    modal.content = text;\n    modal.readerTitle = title;\n    modal.open();\n  };\n  /**\r\n   * Hides modal window if one's currently open.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hideModal = function () {\n    if (this._modal) {\n      this.modal.close();\n    }\n  };\n  /**\r\n   * Loads canvg dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of canvg\r\n   * @async\r\n   */\n\n\n  Export.prototype._canvg = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var canvg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"canvg\" */\n            \"../../canvg/index.js\")];\n\n          case 1:\n            canvg = _a.sent();\n\n            if (canvg.default != null) {\n              return [2\n              /*return*/\n              , canvg.default];\n            } else {\n              return [2\n              /*return*/\n              , canvg];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Export.prototype, \"canvg\", {\n    /**\r\n     * Returns canvg instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     */\n    get: function () {\n      return this._canvg();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"pdfmake\", {\n    /**\r\n     * Returns pdfmake instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      if (pdfmakePromise == null) {\n        pdfmakePromise = _pdfmake();\n      }\n\n      return pdfmakePromise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads xlsx dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of pdfmake\r\n   * @async\r\n   */\n\n  Export.prototype._xlsx = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"xlsx\" */\n            \"xlsx/dist/xlsx.core.min.js\")];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Export.prototype, \"xlsx\", {\n    /**\r\n     * Returns xlsx instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      return this._xlsx();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets options for a format.\r\n   */\n\n  Export.prototype.setFormatOptions = function (type, options) {\n    this._formatOptions.setKey(type, options);\n  };\n  /**\r\n   * Returns current options for a format.\r\n   */\n\n\n  Export.prototype.getFormatOptions = function (type) {\n    return this._formatOptions.getKey(type);\n  };\n\n  Object.defineProperty(Export.prototype, \"formatOptions\", {\n    /**\r\n     * A [[Dictionary]] object containing format-specific options.\r\n     *\r\n     * May be used to change specific option for the format:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     // ...\r\n     *     \"formatOptions\": {\r\n     *       \"csv\": {\r\n     *         \"disabled\": true\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.9.12\r\n     * @return  Options\r\n     */\n    get: function () {\n      return this._formatOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n\n  Export.prototype._disablePointers = function () {\n    if (!$type.hasValue(this._spriteInteractionsEnabled)) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n    }\n\n    this.sprite.interactionsEnabled = false;\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n\n\n  Export.prototype._releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n    }\n  };\n  /**\r\n   * Hides all elements that should not be included in the exported image.\r\n   */\n\n\n  Export.prototype.hideNonExportableSprites = function () {\n    var _this = this;\n\n    if (this._objectsAlreadyHidden) {\n      return;\n    }\n\n    var svgContainer = this.sprite.svgContainer;\n\n    if (svgContainer) {\n      $array.each(svgContainer.nonExportableSprites, function (item) {\n        if (!item.isHidden && !item.isHiding && item.visible) {\n          _this._hiddenObjects.push(item);\n        }\n\n        item.hide(0);\n      });\n    }\n\n    this._objectsAlreadyHidden = true;\n  };\n  /**\r\n   * Respores elements that were hidden before export.\r\n   */\n\n\n  Export.prototype.restoreNonExportableSprites = function () {\n    if (!this._objectsAlreadyHidden) {\n      return;\n    }\n\n    $array.each(this._hiddenObjects, function (item) {\n      item.show(0);\n    });\n    this._hiddenObjects = [];\n    this._objectsAlreadyHidden = false;\n  };\n  /**\r\n   * Checks if there are elements that absolutely need to be validated before\r\n   * export.\r\n   *\r\n   * If there are invalid elements, it will await for them to be validated.\r\n   *\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.awaitValidSprites = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n\n            if (this.validateSprites.length) {\n              $array.each(this.validateSprites, function (sprite, index) {\n                if (sprite.invalid) {\n                  promises.push(new Promise(function (resolve, reject) {\n                    sprite.events.once(\"validated\", function (ev) {\n                      resolve();\n                    });\n                  }));\n                }\n              });\n            }\n\n            if (!promises.length) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  Export.prototype.processConfig = function (config) {\n    registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\n\n    if (config) {\n      // Set up menu\n      if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\n        config.menu.type = \"ExportMenu\";\n      }\n\n      if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\n        this.dataFields = config.dataFields;\n        delete config.dataFields;\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * XLINK namespace definition.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.XLINK = \"http://www.w3.org/1999/xlink\";\n  return Export;\n}(Validatable);\n\nexport { Export };","map":{"version":3,"names":["__awaiter","__extends","__generator","ExportMenu","Adapter","Sprite","Modal","List","Dictionary","DateFormatter","DurationFormatter","NumberFormatter","Language","Validatable","color","registry","options","StyleRule","getComputedStyle","$browser","$object","$net","$dom","$type","$log","$utils","$array","$math","$strings","pdfmakePromise","_pdfmake","a","pdfmake","vfs_fonts","global","_a","label","Promise","all","sent","window","pdfMake","vfs","default","fontFamilySrcRegexp","supportsBlobUri","navigator","msSaveOrOpenBlob","blobToDataUri","blob","resolve","reject","f","FileReader","onload","e","result","onerror","readAsDataURL","getCssRules","s","sheet","e_1","trys","push","cssRules","success","error","addEventListener","setTimeout","Error","loadStylesheet","doc","url","response","e_2","rules","load","console","createElement","textContent","nonce","setAttribute","head","appendChild","eachStylesheet","removeChild","topUrl","promises","length","i","rule","type","CSSRule","IMPORT_RULE","href","joinUrl","eachStylesheets","iframe","doc_1","document","src","contentDocument","map","styleSheets","location","Export","_super","container","_this","call","adapter","_formatOptions","_extraSprites","_validateSprites","dataFieldsOrder","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","_exportRunning","_prevHasData","_container","className","setKey","quality","fontSize","imageFormat","align","addURL","addColumnNames","indent","useLocale","emptyAs","addBOM","delay","printMethod","add","arg","formatOptions","getKey","merge","applyTheme","dispatchImmediately","Object","defineProperty","prototype","get","_menu","set","menu","removeDispose","language","_language","branch","unsupported","typeSupported","events","on","ev","export","close","_disablePointers","_releasePointers","obj","classPrefix","classNamePrefix","_disposers","enumerable","configurable","supported","getFormatOptions","hasValue","disabled","_hasData","print","indexOf","apply","data","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","event_1","func","event_2","event_3","handleCustom","isEnabled","showPreloader","hideTimeout","_timeoutTimeout","event_4","showTimeout","hideNonExportableSprites","restoreNonExportableSprites","hidePreloader","title","download","filePrefix","callback","callbackTarget","getFontFamilies","DOMURL","blobs","getDOMURL","FONT_FACE_RULE","cssText_1","cssText","exec","urls","split","after","fullUrl","url_1","e_3","webFontFilter","match","undefined","responseType","createObjectURL","then","filter","x","replace","join","includeExtras","prehidden","canvas","uri","e_4","awaitValidSprites","simplifiedImageExport","getCanvas","addExtras","toDataURL","getContentType","disposeCanvas","message","stack","warn","getImageAdvanced","advanced","middleLeft_1","middleTop_1","middleWidth_1","middleHeight_1","extraRight_1","extraBottom_1","extras","newCanvas","ctx_1","background","left_1","top_1","right_1","bottom_1","extraSprites","width","height","extraSprite","extra","extraCanvas","extraWidth","extraHeight","sprite","position","marginTop","marginRight","marginBottom","marginLeft","exporting","getCanvasAdvanced","crop","max","left","top","getDisposableCanvas","getContext","backgroundColor","findBackgroundColor","dom","fillStyle","toString","fillRect","each","drawImage","font","scale","pixelRatio","ctx","svg","img","pixelWidth","pixelHeight","findFont","findFontSize","getPixelRatio","getAdjustedScale","style","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","paper","defs","Blob","loadNewImage","revokeObjectURL","restoreRemovedObjects","canvg","config","useCORS","ignoreDimensions","scaleWidth","scaleHeight","fromString","render","body","adjWidth","adjHeight","widthScale","heightScale","maxWidth","maxHeight","min","minWidth","minHeight","el","images","count","image","querySelectorAll","getAttributeNS","XLINK","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","e_5","keepTainted","charset","e_6","btoa","setAttributeNS","placeholder","parent","parentElement","parentNode","node","insertBefore","pop","parent_1","element","cache","e_7","e_8","getCache","setCache","crossOrigin","Image","currentHref","removeAttribute","onabort","self","URL","webkitURL","encodeURI","encodeURIComponent","dimParams","Math","round","styleParams","fos","ms","PLACEHOLDER","rgba","isInternetExplorer","reg","RegExp","escapeForRgex","getBaseURI","XMLSerializer","serializeToString","addFont","paths","normal","path","bytes","bold","italics","bolditalics","name","defaultMargins","extraMargin","_b","_c","_d","pageSize","pageOrientation","pageMargins","defaultStyle","content","text","margin","translate","alignment","fit","getPageSizeFit","addData","getPDFData","table","extraFonts","createPdf","getDataUrl","dataFields","dataFieldsOrder_1","len","format","pivot","eachOrdered","key","val","dataRow","dataValue","convertToSpecialFormat","getPDFDataRow","b","ai","bi","headerRows","row","asIs","items","value","convertEmptyValue","item","margins","newMargins","sizes","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","fitSize","XLSX","wbOptions","sheetName","wb","dataFieldsOrder_2","xlsx","bookType","bookSST","normalizeExcelSheetName","SheetNames","Sheets","getExcelRow","utils","aoa_to_sheet","workbook","write","truncateWithEllipsis","csv","br","dataFieldsOrder_3","getCSVRow","reverse","separator","forceQuotes","search","html","dataFieldsOrder_4","tableClass","getHTMLRow","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","sourceData","_loop_1","json","newValue_1","field","JSON","stringify","keepOriginal","isDateField","Date","isDurationField","durationFormatter","durationFormat","isNumberField","numberFormat","numberFormatter","useTimestamps","getTime","toLocaleString","dateFormatter","dateFormat","isString","parse","fileName","parts","contentType","decoded","blob_1","chars","charCode","link_1","blob_2","url_2","url_3","link","idoc","msBlobDownloadSupport","shift","decodeURIComponent","atob","msSaveBlob","Array","Uint8Array","blobDownloadSupport","click","concat","linkDownloadSupport","legacyIE","showModal","display","open","execCommand","downloadSupport","res","div","innerHTML","getElementsByTagName","printViaCSS","printViaIframe","scroll","originalTitle","isIOS","documentElement","scrollTop","getShadowRoot","visibility","opacity","clipPath","test","userAgent","MSStream","dispose","contentWindow","currentColor","parent_2","_sprite","validateSprites","_data","_dataFields","generateDataFields","handleDataUpdated","hasData","invalidate","_dateFormatter","_dateFormat","_dateFields","dateFields","_numberFormatter","_numberFormat","_numberFields","numberFields","_durationFormatter","_durationFormat","_durationFields","durationFields","contains","_backgroundColor","_title","preloader","progress","hideModal","_modal","modal","svgContainer","SVGContainer","readerTitle","_canvg","_xlsx","setFormatOptions","_spriteInteractionsEnabled","interactionsEnabled","nonExportableSprites","isHidden","isHiding","visible","hide","show","index","invalid","once","processConfig","registeredClasses","isObject"],"sources":["/home/unutu/go/src/github.com/thteam47/admin-portal/node_modules/@amcharts/amcharts4/.internal/core/export/Export.js"],"sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n// This is used to cache the pdfmake loading\r\nvar pdfmakePromise;\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nfunction _pdfmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var a, pdfmake, vfs_fonts, global;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.all([\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n                    ])];\r\n                case 1:\r\n                    a = _a.sent();\r\n                    pdfmake = a[0];\r\n                    vfs_fonts = a[1];\r\n                    global = window;\r\n                    global.pdfMake = global.pdfMake || {};\r\n                    global.pdfMake.vfs = vfs_fonts.default;\r\n                    pdfmake.vfs = vfs_fonts.default;\r\n                    return [2 /*return*/, pdfmake];\r\n            }\r\n        });\r\n    });\r\n}\r\n// TODO better parsing\r\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\r\n// TODO better checks\r\nfunction supportsBlobUri() {\r\n    return window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob) {\r\n    return new Promise(function (resolve, reject) {\r\n        // TODO handle abort ?\r\n        var f = new FileReader();\r\n        f.onload = function (e) { resolve(f.result); };\r\n        f.onerror = function (e) { reject(e); };\r\n        f.readAsDataURL(blob);\r\n    });\r\n}\r\nfunction getCssRules(s) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var sheet, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    sheet = s.sheet;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 2, , 4]);\r\n                    return [2 /*return*/, sheet.cssRules];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (success, error) {\r\n                            s.addEventListener(\"load\", function () {\r\n                                success(sheet.cssRules);\r\n                            }, true);\r\n                            s.addEventListener(\"error\", function (e) {\r\n                                error(e);\r\n                            }, true);\r\n                            setTimeout(function () {\r\n                                error(new Error(\"Timeout while waiting for <style> to load\"));\r\n                            }, 10000);\r\n                        })];\r\n                case 3: \r\n                // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n                return [2 /*return*/, _a.sent()];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nfunction loadStylesheet(doc, url, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response, e_2, s, rules;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, $net.load(url)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    e_2 = _a.sent();\r\n                    console.error(\"Failed to load stylesheet\", url, e_2);\r\n                    return [2 /*return*/];\r\n                case 3:\r\n                    s = doc.createElement(\"style\");\r\n                    s.textContent = response.response;\r\n                    if (options.nonce != \"\") {\r\n                        s.setAttribute(\"nonce\", options.nonce);\r\n                    }\r\n                    doc.head.appendChild(s);\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, , 7, 8]);\r\n                    return [4 /*yield*/, getCssRules(s)];\r\n                case 5:\r\n                    rules = _a.sent();\r\n                    return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    doc.head.removeChild(s);\r\n                    return [7 /*endfinally*/];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheet(doc, topUrl, rules, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var promises, length, i, rule, url;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    promises = [];\r\n                    length = rules.length;\r\n                    for (i = 0; i < length; i++) {\r\n                        rule = rules[i];\r\n                        if (rule.type === CSSRule.IMPORT_RULE) {\r\n                            url = rule.href;\r\n                            if (url) {\r\n                                url = $utils.joinUrl(topUrl, url);\r\n                                promises.push(loadStylesheet(doc, url, f));\r\n                            }\r\n                        }\r\n                        else {\r\n                            f(topUrl, rule);\r\n                        }\r\n                    }\r\n                    if (!promises.length) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, Promise.all(promises)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheets(f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var iframe, doc_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    iframe = document.createElement(\"iframe\");\r\n                    // This causes it to use the same origin policy as the parent page\r\n                    iframe.src = \"about:blank\";\r\n                    // This tries to make it more accessible for screen readers\r\n                    iframe.setAttribute(\"title\", \"\");\r\n                    document.head.appendChild(iframe);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, , 3, 4]);\r\n                    doc_1 = iframe.contentDocument;\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\r\n                            var url = sheet.href;\r\n                            if (url == null) {\r\n                                return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\r\n                            }\r\n                            else {\r\n                                url = $utils.joinUrl(location.href, url);\r\n                                return loadStylesheet(doc_1, url, f);\r\n                            }\r\n                        }))];\r\n                case 2:\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    document.head.removeChild(iframe);\r\n                    return [7 /*endfinally*/];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nvar Export = /** @class */ (function (_super) {\r\n    __extends(Export, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Export(container) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Holds options for each format.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._formatOptions = new Dictionary();\r\n        /**\r\n         * Extra [[Sprite]] elements to include in exports.\r\n         */\r\n        _this._extraSprites = [];\r\n        /**\r\n         * A list of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         */\r\n        _this._validateSprites = [];\r\n        /**\r\n         * Holds an array of data field names. If set, exported data fields will try\r\n         * to maintain this order.\r\n         *\r\n         * If not set (default), the export will try to maintain the same order as\r\n         * in source data, or as in `dataFields` (if set).\r\n         *\r\n         * @since 4.9.7\r\n         */\r\n        _this.dataFieldsOrder = [];\r\n        /**\r\n         * Indicates whether data fields were generated dynamically (`true`) or\r\n         * if they were pre-set by the user (`false`).\r\n         */\r\n        _this._dynamicDataFields = true;\r\n        /**\r\n         * Holds a list of objects that were temporarily removed from the DOM while\r\n         * exporting. Those most probably are tainted images, or foreign objects that\r\n         * would otherwise prevent SVG to be converted to canvas.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._removedObjects = new List();\r\n        /**\r\n         * Holds references to the objects that were temporarily hidden when export\r\n         * started, so that we can reveal them back when export ends.\r\n         */\r\n        _this._hiddenObjects = [];\r\n        /**\r\n         * Indicates if non-exportable objects are now hidden;\r\n         */\r\n        _this._objectsAlreadyHidden = false;\r\n        /**\r\n         * Exported files will be prefixed with whatever it is set here.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._filePrefix = \"amCharts\";\r\n        /**\r\n         * If you are using web fonts (such as Google Fonts), your chart might be\r\n         * using them as well.\r\n         *\r\n         * Normally, exporting to image will require to download these fonts so the\r\n         * are carried over to exported image.\r\n         *\r\n         * This setting can be used to disable or enable this functionality.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useWebFonts = true;\r\n        /**\r\n         * Many modern displays have use more actual pixels per displayed pixel. This\r\n         * results in sharper images on screen. Unfortunately, when exported to a\r\n         * bitmap image of the sam width/height size it will lose those extra pixels,\r\n         * resulting in somewhat blurry image.\r\n         *\r\n         * This is why we are going to export images larger than they are, so that we\r\n         * don't lose any details.\r\n         *\r\n         * If you'd rather export images without change in size, set this to `false`.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useRetina = true;\r\n        /**\r\n         * By default Export will try to use built-in method for transforming chart\r\n         * into an image for download, then fallback to external library (canvg) for\r\n         * conversion if failed.\r\n         *\r\n         * Setting this to `false` will force use of external library for all export\r\n         * operations.\r\n         *\r\n         * It might be useful to turn off simplified export if you are using strict\r\n         * content security policies, that disallow images with blobs as their\r\n         * source.\r\n         *\r\n         * @default true\r\n         * @since 4.2.5\r\n         */\r\n        _this.useSimplifiedExport = true;\r\n        /**\r\n         * If export operation takes longer than milliseconds in this second, we will\r\n         * show a modal saying export operation took longer than expected.\r\n         */\r\n        _this.timeoutDelay = 2000;\r\n        _this._exportRunning = false;\r\n        /**\r\n         * Indicator used by [[Component]].\r\n         *\r\n         * @ignore\r\n         */\r\n        _this._prevHasData = false;\r\n        _this._container = container;\r\n        _this.className = \"Export\";\r\n        // Set default options\r\n        _this._formatOptions.setKey(\"png\", {});\r\n        _this._formatOptions.setKey(\"jpg\", {\r\n            quality: 0.8\r\n        });\r\n        _this._formatOptions.setKey(\"gif\", {});\r\n        _this._formatOptions.setKey(\"svg\", {});\r\n        _this._formatOptions.setKey(\"pdf\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            align: \"left\",\r\n            addURL: true,\r\n            addColumnNames: true\r\n        });\r\n        _this._formatOptions.setKey(\"json\", {\r\n            indent: 2,\r\n            useLocale: true\r\n        });\r\n        _this._formatOptions.setKey(\"csv\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\",\r\n            addBOM: true\r\n        });\r\n        _this._formatOptions.setKey(\"xlsx\", {\r\n            addColumnNames: true,\r\n            useLocale: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"html\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"pdfdata\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            addURL: true,\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"print\", {\r\n            delay: 500,\r\n            printMethod: \"iframe\"\r\n        });\r\n        // Add options adapter\r\n        _this.adapter.add(\"options\", function (arg) {\r\n            var formatOptions = _this._formatOptions.getKey(arg.type);\r\n            if (arg.options) {\r\n                arg.options = $object.merge(formatOptions, arg.options);\r\n            }\r\n            else {\r\n                arg.options = formatOptions;\r\n            }\r\n            return arg;\r\n        });\r\n        _this.applyTheme();\r\n        _this.dispatchImmediately(\"inited\");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Export.prototype, \"menu\", {\r\n        /**\r\n         * @return ExportMenu instance\r\n         */\r\n        get: function () {\r\n            return this._menu;\r\n        },\r\n        /**\r\n         * An instance of [[ExportMenu]].\r\n         *\r\n         * To add an export menu to a chart, set this to a new instance of\r\n         * [[ExportMenu]].\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     \"menu\": {}\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param menu  ExportMenu instance\r\n         */\r\n        set: function (menu) {\r\n            var _this = this;\r\n            if (this._menu) {\r\n                this.removeDispose(this._menu);\r\n            }\r\n            this._menu = menu;\r\n            // Set container and language\r\n            this._menu.container = this.container;\r\n            this._menu.language = this._language;\r\n            // Add adapter to check for browser support\r\n            this._menu.adapter.add(\"branch\", function (arg) {\r\n                arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\r\n                return arg;\r\n            });\r\n            // Add click events\r\n            this._menu.events.on(\"hit\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"enter\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"over\", function (ev) {\r\n                _this._disablePointers();\r\n            });\r\n            this._menu.events.on(\"out\", function (ev) {\r\n                setTimeout(function () { _this._releasePointers(); }, 10);\r\n            });\r\n            // Dispatch event\r\n            this.dispatchImmediately(\"menucreated\");\r\n            // Prefix with Sprite's class name\r\n            this._menu.adapter.add(\"classPrefix\", function (obj) {\r\n                obj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n                return obj;\r\n            });\r\n            // Add menu to disposers so that it's destroyed when Export is disposed\r\n            this._disposers.push(this._menu);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if this specific menu item type is supported by current system.\r\n     *\r\n     * @param type  Menu item type\r\n     * @return `false` if not supported\r\n     */\r\n    Export.prototype.typeSupported = function (type) {\r\n        var supported = true;\r\n        var options = this.getFormatOptions(type);\r\n        if ($type.hasValue(options) && options.disabled) {\r\n            supported = false;\r\n        }\r\n        else if (type === \"pdf\") {\r\n            //supported = this.downloadSupport();\r\n        }\r\n        else if (type === \"xlsx\") {\r\n            //supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n            supported = this._hasData() ? true : false;\r\n        }\r\n        else if (type == \"print\" && !window.print) {\r\n            supported = false;\r\n        }\r\n        else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n            supported = false;\r\n        }\r\n        return this.adapter.apply(\"supported\", {\r\n            supported: supported,\r\n            type: type\r\n        }).supported;\r\n    };\r\n    /**\r\n     * Checks if data is available.\r\n     *\r\n     * @return Has data?\r\n     */\r\n    Export.prototype._hasData = function () {\r\n        return this.data && this.data.length;\r\n    };\r\n    /**\r\n     * Get function to handle export for particular format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype._getFunction = function (type) {\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n            case \"jpg\":\r\n                return this.getImage;\r\n            case \"svg\":\r\n                return this.getSVG;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                return this.getPDF;\r\n            case \"xlsx\":\r\n                return this.getExcel;\r\n            case \"csv\":\r\n                return this.getCSV;\r\n            case \"json\":\r\n                return this.getJSON;\r\n            case \"html\":\r\n                return this.getHTML;\r\n            case \"print\":\r\n                return this.getPrint;\r\n            default:\r\n                return this.unsupported;\r\n        }\r\n    };\r\n    /**\r\n     * Initiates export procedure.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return `true` if export was successful\r\n     * @async\r\n     */\r\n    Export.prototype.export = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event_1, func, data, event_2, event_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check if it's a custom item, and do nothing or execute custom callback\r\n                        if (type == \"custom\") {\r\n                            this.handleCustom(options);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        // Set export running flag\r\n                        this._exportRunning = true;\r\n                        // Dispatch event\r\n                        if (this.events.isEnabled(\"exportstarted\")) {\r\n                            event_1 = {\r\n                                \"type\": \"exportstarted\",\r\n                                \"target\": this,\r\n                                \"format\": type,\r\n                                \"options\": options\r\n                            };\r\n                            this.events.dispatchImmediately(\"exportstarted\", event_1);\r\n                        }\r\n                        // Schedule a preloader\r\n                        this.showPreloader();\r\n                        // Schedule a timeout\r\n                        if (this.timeoutDelay) {\r\n                            this.hideTimeout();\r\n                            this._timeoutTimeout = this.setTimeout(function () {\r\n                                // Dispatch event\r\n                                if (_this.events.isEnabled(\"exporttimedout\")) {\r\n                                    var event_4 = {\r\n                                        \"type\": \"exporttimedout\",\r\n                                        \"target\": _this,\r\n                                        \"format\": type,\r\n                                        \"options\": options\r\n                                    };\r\n                                    _this.events.dispatchImmediately(\"exporttimedout\", event_4);\r\n                                }\r\n                                // Show modal\r\n                                _this.showTimeout();\r\n                            }, this.timeoutDelay);\r\n                        }\r\n                        // Hide items that should not be exported\r\n                        this.hideNonExportableSprites();\r\n                        func = this._getFunction(type);\r\n                        // Give chance for plugins to override both function and options\r\n                        options = this.adapter.apply(\"options\", {\r\n                            options: options,\r\n                            type: type\r\n                        }).options;\r\n                        func = this.adapter.apply(\"exportFunction\", {\r\n                            func: func,\r\n                            type: type,\r\n                            options: options\r\n                        }).func;\r\n                        return [4 /*yield*/, func.call(this, type, options)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        // Release pointers\r\n                        this._exportRunning = false;\r\n                        this._releasePointers();\r\n                        // Restore temporarily hidden elements\r\n                        this.restoreNonExportableSprites();\r\n                        if (data) {\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"exportfinished\")) {\r\n                                event_2 = {\r\n                                    \"type\": \"exportfinished\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"exportfinished\", event_2);\r\n                            }\r\n                            // Hide preloader and timeout modals\r\n                            this.hidePreloader();\r\n                            this.hideTimeout();\r\n                            if (this.menu) {\r\n                                this.menu.close();\r\n                            }\r\n                            // Download or print\r\n                            if (type === \"print\") {\r\n                                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\r\n                                        title: this.title,\r\n                                        options: options\r\n                                    }).title)];\r\n                            }\r\n                            else {\r\n                                if (type == \"pdfdata\") {\r\n                                    return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\r\n                                }\r\n                                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type, (options && options.addBOM))];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Throw exception?\r\n                            // @todo\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"error\")) {\r\n                                event_3 = {\r\n                                    \"type\": \"error\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"error\", event_3);\r\n                            }\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that should handle unsupported export types.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.unsupported = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // TODO should this return `undefined`?\r\n                return [2 /*return*/, \"\"];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles click on a \"custom\" menu item.\r\n     *\r\n     * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.handleCustom = function (options) {\r\n        if ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n            options.callback.call(options.callbackTarget || this, options);\r\n        }\r\n    };\r\n    /**\r\n     * Requests a Print of the chart.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPrint = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.getImage(\"png\", options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return String which can be embedded directly into a <style> element.\r\n     * @async\r\n     */\r\n    Export.prototype.getFontFamilies = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var DOMURL, blobs, promises, a;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        DOMURL = this.getDOMURL();\r\n                        blobs = [];\r\n                        promises = [];\r\n                        return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\r\n                                if (rule.type === CSSRule.FONT_FACE_RULE) {\r\n                                    var cssText_1 = rule.cssText;\r\n                                    // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n                                    var src = fontFamilySrcRegexp.exec(cssText_1);\r\n                                    if (src !== null) {\r\n                                        // TODO make this faster (don't create Promises for non-url stuff)\r\n                                        var urls = src[1].split(/ *, */).map(function (url) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var a, after, fullUrl, response, url_1, e_3;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n                                                        if (!(a === null)) return [3 /*break*/, 1];\r\n                                                        return [2 /*return*/, url];\r\n                                                    case 1:\r\n                                                        after = a[2];\r\n                                                        fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n                                                        if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\r\n                                                            return [2 /*return*/, null];\r\n                                                        }\r\n                                                        _a.label = 2;\r\n                                                    case 2:\r\n                                                        _a.trys.push([2, 7, , 8]);\r\n                                                        return [4 /*yield*/, $net.load(fullUrl, undefined, { responseType: \"blob\" })];\r\n                                                    case 3:\r\n                                                        response = _a.sent();\r\n                                                        if (!supportsBlobUri()) return [3 /*break*/, 4];\r\n                                                        url_1 = DOMURL.createObjectURL(response.blob);\r\n                                                        blobs.push(url_1);\r\n                                                        return [3 /*break*/, 6];\r\n                                                    case 4: return [4 /*yield*/, blobToDataUri(response.blob)];\r\n                                                    case 5:\r\n                                                        url_1 = _a.sent();\r\n                                                        _a.label = 6;\r\n                                                    case 6: \r\n                                                    // TODO should it should escape the URI ?\r\n                                                    return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\r\n                                                    case 7:\r\n                                                        e_3 = _a.sent();\r\n                                                        console.error(\"Failed to load font\", fullUrl, e_3);\r\n                                                        return [2 /*return*/, null];\r\n                                                    case 8: return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); });\r\n                                        promises.push(Promise.all(urls).then(function (a) {\r\n                                            a = a.filter(function (x) { return x != null; });\r\n                                            if (a.length === 0) {\r\n                                                return \"\";\r\n                                            }\r\n                                            else {\r\n                                                return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n                                            }\r\n                                        }));\r\n                                    }\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                blobs: blobs,\r\n                                cssText: a.filter(function (x) { return !!x; }).join(\"\\n\")\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Produces image output from the element.\r\n     *\r\n     * Converts to a `Canvas` first, then produces an image to download.\r\n     *\r\n     * This is an asynchronous function. Rather than returning a result, it\r\n     * returns a Promise.\r\n     *\r\n     * You can use `await` notion from other async functions, or `then()`\r\n     * anywhere else.\r\n     *\r\n     * ```TypeScript\r\n     * let img;\r\n     *\r\n     * // Async\r\n     * img = await chart.exporting.getImage( \"png\" );\r\n     *\r\n     * // Sync\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     * ```JavaScript\r\n     * var img;\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     *\r\n     * @param  type           Image format\r\n     * @param  options        Options\r\n     * @param  includeExtras  Should extra sprites be included if set?\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getImage = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri, e_4, data, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.simplifiedImageExport()];\r\n                    case 2:\r\n                        if (!_a.sent()) return [3 /*break*/, 10];\r\n                        canvas = void 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 9]);\r\n                        return [4 /*yield*/, this.getCanvas(options)];\r\n                    case 4:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options)];\r\n                    case 5:\r\n                        canvas = _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                    case 7:\r\n                        e_4 = _a.sent();\r\n                        console.error(e_4.message + \"\\n\" + e_4.stack);\r\n                        $log.warn(\"Simple export failed, falling back to advanced export\");\r\n                        if (canvas) {\r\n                            this.disposeCanvas(canvas);\r\n                        }\r\n                        return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 8:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 9: return [3 /*break*/, 12];\r\n                    case 10: return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 11:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds extra elements to the canvas.\r\n     *\r\n     * @param  canvas   Original canvas\r\n     * @param  options  Options\r\n     */\r\n    Export.prototype.addExtras = function (canvas, options, advanced) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.extraSprites.length) return [3 /*break*/, 2];\r\n                        middleLeft_1 = 0;\r\n                        middleTop_1 = 0;\r\n                        middleWidth_1 = canvas.width;\r\n                        middleHeight_1 = canvas.height;\r\n                        extraRight_1 = 0;\r\n                        extraBottom_1 = 0;\r\n                        return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var extra, extraCanvas, extraWidth, extraHeight;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            if (extraSprite instanceof Sprite) {\r\n                                                extra = {\r\n                                                    sprite: extraSprite,\r\n                                                    position: \"bottom\"\r\n                                                };\r\n                                            }\r\n                                            else {\r\n                                                extra = extraSprite;\r\n                                            }\r\n                                            // Set defaults\r\n                                            extra.position = extra.position || \"bottom\";\r\n                                            extra.marginTop = extra.marginTop || 0;\r\n                                            extra.marginRight = extra.marginRight || 0;\r\n                                            extra.marginBottom = extra.marginBottom || 0;\r\n                                            extra.marginLeft = extra.marginLeft || 0;\r\n                                            if (!advanced) return [3 /*break*/, 2];\r\n                                            return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\r\n                                        case 1:\r\n                                            extraCanvas = _a.sent();\r\n                                            return [3 /*break*/, 4];\r\n                                        case 2: return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\r\n                                        case 3:\r\n                                            extraCanvas = _a.sent();\r\n                                            _a.label = 4;\r\n                                        case 4:\r\n                                            extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n                                            extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n                                            if (extra.position == \"top\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                middleTop_1 += extraHeight;\r\n                                            }\r\n                                            else if (extra.position == \"right\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                extraRight_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position == \"left\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                middleLeft_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position === \"bottom\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                extraBottom_1 += extraHeight;\r\n                                            }\r\n                                            return [2 /*return*/, {\r\n                                                    canvas: extraCanvas,\r\n                                                    position: extra.position,\r\n                                                    left: extra.marginLeft,\r\n                                                    top: extra.marginTop,\r\n                                                    width: extraWidth,\r\n                                                    height: extraHeight\r\n                                                }];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 1:\r\n                        extras = _a.sent();\r\n                        newCanvas = this.getDisposableCanvas();\r\n                        newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\r\n                        newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\r\n                        ctx_1 = newCanvas.getContext(\"2d\");\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        if (background) {\r\n                            ctx_1.fillStyle = background.toString();\r\n                            ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n                        }\r\n                        left_1 = middleLeft_1;\r\n                        top_1 = middleTop_1;\r\n                        right_1 = left_1 + middleWidth_1;\r\n                        bottom_1 = top_1 + middleHeight_1;\r\n                        // Radiates outwards from center\r\n                        $array.each(extras, function (extra) {\r\n                            if (extra.position == \"top\") {\r\n                                top_1 -= extra.height;\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\r\n                            }\r\n                            else if (extra.position == \"right\") {\r\n                                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\r\n                                right_1 += extra.width;\r\n                            }\r\n                            else if (extra.position == \"left\") {\r\n                                left_1 -= extra.width;\r\n                                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\r\n                            }\r\n                            else if (extra.position === \"bottom\") {\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\r\n                                bottom_1 += extra.height;\r\n                            }\r\n                            _this.disposeCanvas(extra.canvas);\r\n                        });\r\n                        ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\r\n                        return [2 /*return*/, newCanvas];\r\n                    case 2: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]].\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvas = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        DOMURL = this.getDOMURL();\r\n                        url = null;\r\n                        blobs = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 4, 5]);\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        // Create canvas and its 2D context\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = width * scale + 'px';\r\n                        canvas.style.height = height * scale + 'px';\r\n                        canvas.width = width * scale;\r\n                        canvas.height = height * scale;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        // if (pixelRatio != 1) {\r\n                        // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n                        // }\r\n                        // Add background if necessary\r\n                        if (background) {\r\n                            ctx.fillStyle = background.toString();\r\n                            ctx.fillRect(0, 0, width * scale, height * scale);\r\n                        }\r\n                        promises = [];\r\n                        if (this.useWebFonts) {\r\n                            // TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n                            promises.push(this.getFontFamilies().then(function (fonts) {\r\n                                blobs = fonts.blobs;\r\n                                return fonts.cssText;\r\n                            }));\r\n                        }\r\n                        promises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n                        promises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        svg = new Blob([data], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        return [4 /*yield*/, this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        // Draw image on canvas\r\n                        ctx.drawImage(img, 0, 0);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        if (url !== null) {\r\n                            DOMURL.revokeObjectURL(url);\r\n                        }\r\n                        if (blobs !== null) {\r\n                            $array.each(blobs, function (url) {\r\n                                DOMURL.revokeObjectURL(url);\r\n                            });\r\n                        }\r\n                        // Restore replaced tainted images in DOM\r\n                        this.restoreRemovedObjects();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]] using canvg.\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvasAdvanced = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        // Convert external images to data uris\r\n                        return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\r\n                    case 1:\r\n                        // Convert external images to data uris\r\n                        _a.sent();\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        return [4 /*yield*/, this.canvg];\r\n                    case 2:\r\n                        canvg = _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = (width * pixelRatio * scale) + 'px';\r\n                        canvas.style.height = (height * pixelRatio * scale) + 'px';\r\n                        canvas.width = width * pixelRatio * scale;\r\n                        canvas.height = height * pixelRatio * scale;\r\n                        config = {\r\n                            //ignoreDimensions: true,\r\n                            useCORS: true\r\n                        };\r\n                        if (pixelRatio != 1) {\r\n                            config.ignoreDimensions = true;\r\n                            config.scaleWidth = width * pixelRatio * scale;\r\n                            config.scaleHeight = height * pixelRatio * scale;\r\n                        }\r\n                        return [4 /*yield*/, canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n     * export an image using its functions.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Image format\r\n     * @param options  Options\r\n     * @return Data uri\r\n     */\r\n    Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        return [4 /*yield*/, this.getCanvasAdvanced(options)];\r\n                    case 1:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options, true)];\r\n                    case 2:\r\n                        canvas = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a `<canvas>` element and returns it.\r\n     *\r\n     * @return Canvas element\r\n     */\r\n    Export.prototype.getDisposableCanvas = function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        document.body.appendChild(canvas);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Removes canvas.\r\n     *\r\n     * @param canvas  Canvas element\r\n     */\r\n    Export.prototype.disposeCanvas = function (canvas) {\r\n        document.body.removeChild(canvas);\r\n    };\r\n    /**\r\n     * Returns pixel ratio for retina displays.\r\n     *\r\n     * @return Pixel ratio\r\n     */\r\n    Export.prototype.getPixelRatio = function (options) {\r\n        // const scale = options && options.scale ? options.scale : 1;\r\n        // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n        return this.useRetina ? $utils.getPixelRatio() : 1;\r\n    };\r\n    /**\r\n     * Calculates adjusted scale if image does not fit or is larger than min/max\r\n     * settings.\r\n     *\r\n     * @param   width    Width of the source image\r\n     * @param   height   Height of the source image\r\n     * @param   scale    Current scale\r\n     * @param   options  Options\r\n     * @return           Adjusted scale\r\n     */\r\n    Export.prototype.getAdjustedScale = function (width, height, scale, options) {\r\n        if (!options) {\r\n            return scale;\r\n        }\r\n        var adjWidth = width * scale;\r\n        var adjHeight = width * scale;\r\n        // Check max restrictions\r\n        var widthScale;\r\n        var heightScale;\r\n        if (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n            widthScale = options.maxWidth / width;\r\n        }\r\n        if (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n            heightScale = options.maxHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.min(widthScale, heightScale);\r\n        }\r\n        // Check min restrictions\r\n        if (options.minWidth && (adjWidth < options.minWidth)) {\r\n            widthScale = options.minWidth / width;\r\n        }\r\n        if (options.minHeight && (adjHeight < options.minHeight)) {\r\n            heightScale = options.minHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.max(widthScale, heightScale);\r\n        }\r\n        return scale;\r\n    };\r\n    /**\r\n     * Converts all `<image>` tags in SVG to use data uris instead of external\r\n     * URLs\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.imagesToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var images, promises, count, i, image, href;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        images = el.querySelectorAll(\"image\");\r\n                        if (!images.length) return [3 /*break*/, 2];\r\n                        promises = [];\r\n                        // There are images, process each of them\r\n                        for (count = images.length, i = 0; i < count; i++) {\r\n                            image = images[i];\r\n                            href = image.getAttributeNS(Export.XLINK, \"href\");\r\n                            // no href?\r\n                            if (!href) {\r\n                                continue;\r\n                            }\r\n                            if (href.indexOf(\"data:image\") !== -1) {\r\n                                // Ignore image if it's already in Data URI format\r\n                            }\r\n                            else {\r\n                                // SVG or bitmap image?\r\n                                if (href.indexOf(\".svg\") !== -1) {\r\n                                    promises.push(this.svgToDataURI(image, options));\r\n                                }\r\n                                else {\r\n                                    promises.push(this.imageToDataURI(image, options));\r\n                                }\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * `foreignObject` elements cannot be exported. This function hides them\r\n     * temprarily. In the future it might try to convert them to SVG to make them\r\n     * exportable.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.prepForeignObjects = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objects, count, i;\r\n            return __generator(this, function (_a) {\r\n                objects = el.querySelectorAll(\"foreignObject\");\r\n                if (objects.length) {\r\n                    // There are foreign objects, process each of them\r\n                    for (count = objects.length, i = 0; i < count; i++) {\r\n                        this.temporarilyRemoveObject(objects[i]);\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n     * external file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG element\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.imageToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var img, canvas, uri, e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\r\n                    case 1:\r\n                        // Create image\r\n                        img = _a.sent();\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        // Draw new image on it via `toDataURL`\r\n                        canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n                        // Replace image `href` with data uri\r\n                        // If we got to this point it means image has loaded, however we might\r\n                        // still get an error with `toDataURL()`\r\n                        try {\r\n                            uri = canvas.toDataURL();\r\n                            el.setAttribute(\"href\", uri);\r\n                            return [2 /*return*/, uri];\r\n                        }\r\n                        catch (e) {\r\n                            // Give up and temporarily remove the element href temporarily\r\n                            if (options.keepTainted !== false) {\r\n                                /*this._removedObjects.push({\r\n                                    \"element\": el,\r\n                                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                                });\r\n                                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                                this.temporarilyRemoveObject(el);\r\n                            }\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_5 = _a.sent();\r\n                        // Give up and temporarily remove the element's href\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n     * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el        An SVG element\r\n     * @param options   Options\r\n     */\r\n    Export.prototype.svgToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var href, data, charset, uri, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        href = el.getAttributeNS(Export.XLINK, \"href\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, $net.load(href)];\r\n                    case 2:\r\n                        data = _a.sent();\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"base64\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"svgToDataURI\", {\r\n                            data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n                            options: options\r\n                        }).data;\r\n                        el.setAttributeNS(Export.XLINK, \"href\", uri);\r\n                        return [2 /*return*/, uri];\r\n                    case 3:\r\n                        e_6 = _a.sent();\r\n                        // Disable temporarily\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": href\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Temporarily removes element from DOM, and replaces it with a dummy\r\n     * placeholder, as well as stores it for later restoration.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el Node\r\n     */\r\n    Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\r\n        // Get parent\r\n        var parent = el.parentElement || el.parentNode;\r\n        // Create a placeholder group element if it has not been passed in\r\n        if (!placeholder) {\r\n            placeholder = this.sprite.paper.add(\"g\").node;\r\n        }\r\n        parent.insertBefore(placeholder, el);\r\n        // Check if we have a textContents we can replace with\r\n        // @todo Perhaps we should explore alternatives to creating text nodes\r\n        // i.e. creating a text version of the HTML-based Text, just for export\r\n        // purposes. Converting HTML into SVG is very complicated\r\n        if (el.textContent) {\r\n            /*let text = this.sprite.paper.add(\"text\").node;\r\n            text.textContent = el.textContent;\r\n            placeholder.appendChild(text);\r\n\r\n            // Copy properties from the removing element to the placeholder\r\n            $dom.copyAttributes(el, placeholder);*/\r\n        }\r\n        // Remove the old element\r\n        parent.removeChild(el);\r\n        // Log removed item\r\n        this._removedObjects.push({\r\n            \"element\": el,\r\n            \"placeholder\": placeholder\r\n        });\r\n    };\r\n    /**\r\n     * Restores all (possibly tainted or unsupported) objects that were\r\n     * temporarily removed when exporting.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.restoreRemovedObjects = function () {\r\n        var obj;\r\n        while (true) {\r\n            obj = this._removedObjects.pop();\r\n            if (!obj) {\r\n                break;\r\n            }\r\n            //obj.element.setAttribute(\"href\", obj.originalHref);\r\n            var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n            parent_1.insertBefore(obj.element, obj.placeholder);\r\n            //parent.removeChild(obj.placeholder);\r\n        }\r\n    };\r\n    /**\r\n     * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n     * document does not contain any external images.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return `true` if simplified export can be used\r\n     */\r\n    Export.prototype.simplifiedImageExport = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.useSimplifiedExport === false) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        cache = registry.getCache(\"simplifiedImageExport\");\r\n                        if (cache === false || cache === true) {\r\n                            return [2 /*return*/, cache];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = 1;\r\n                        canvas.height = 1;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        DOMURL = this.getDOMURL();\r\n                        svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        img = void 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_7 = _a.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 5:\r\n                        ctx.drawImage(img, 0, 0);\r\n                        DOMURL.revokeObjectURL(url);\r\n                        try {\r\n                            //let uri = canvas.toDataURL(\"image/png\");\r\n                            registry.setCache(\"simplifiedImageExport\", true);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        catch (e) {\r\n                            registry.setCache(\"simplifiedImageExport\", false);\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_8 = _a.sent();\r\n                        registry.setCache(\"simplifiedImageExport\", false);\r\n                        return [2 /*return*/, false];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a new `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param url          URL of the image\r\n     * @param width        Width (px)\r\n     * @param height       Height (px)\r\n     * @param crossOrigin  Cross-Origin setting\r\n     * @return Promise\r\n     */\r\n    Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\r\n        return new Promise(function (success, error) {\r\n            // New image\r\n            var image;\r\n            if (width && height) {\r\n                image = new Image(width, height);\r\n            }\r\n            else {\r\n                image = new Image();\r\n            }\r\n            // Set crossorigin\r\n            if (crossOrigin) {\r\n                image.setAttribute(\"crossOrigin\", crossOrigin);\r\n            }\r\n            // Report success on load\r\n            image.onload = function () {\r\n                success(image);\r\n            };\r\n            function onerror() {\r\n                // Error occurred. Just in case it's the crossOrigin issue, let's try\r\n                // stripping off this attribute and trying again\r\n                if (crossOrigin) {\r\n                    // Retain old uri\r\n                    var currentHref = image.src;\r\n                    // Set up another `onerror` to handle situations where image is not\r\n                    // loadable at all (i.e. protected by CORS)\r\n                    image.onerror = function () {\r\n                        // Nope, no luck\r\n                        error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                    };\r\n                    // remove the `crossOrigin` attribute\r\n                    image.removeAttribute(\"crossorigin\");\r\n                    // retry\r\n                    image.src = \"\";\r\n                    image.src = currentHref;\r\n                }\r\n                else {\r\n                    error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                }\r\n            }\r\n            // Set image error handlers\r\n            image.onabort = onerror;\r\n            image.onerror = onerror;\r\n            // Trigger load\r\n            image.src = url;\r\n        });\r\n    };\r\n    /**\r\n     * Returns current DOM URL.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return URL\r\n     */\r\n    Export.prototype.getDOMURL = function () {\r\n        return self.URL || self.webkitURL || self;\r\n    };\r\n    /**\r\n     * Returns an SVG representation of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getSVG = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"svg\");\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"charset=utf-8\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"getSVG\", {\r\n                            data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n                            options: options\r\n                        }).data;\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n     * necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param svg       Input SVG\r\n     * @param options   Options\r\n     * @param width     Width of the SVG viewport\r\n     * @param height    Height of the SVG viewport\r\n     * @param font      Font family to use as a base\r\n     * @param fontSize  Font size to use as a base\r\n     * @return Output SVG\r\n     * @todo Add style params to existing <svg>\r\n     */\r\n    Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\r\n        // Construct width/height params\r\n        var dimParams = \"\";\r\n        if (width) {\r\n            dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        if (height) {\r\n            dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        // Apply font settings\r\n        var styleParams = \"\";\r\n        if (font) {\r\n            styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n        }\r\n        if (fontSize) {\r\n            styleParams += \"font-size: \" + fontSize + \";\";\r\n        }\r\n        // Scale\r\n        if (scale) {\r\n            dimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n        }\r\n        // Remove foreign objects temporarily\r\n        var fos = [];\r\n        var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n        if (ms) {\r\n            for (var i = 0; i < ms.length; i++) {\r\n                svg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n                fos.push(ms[i]);\r\n            }\r\n        }\r\n        // Add missing <svg> enclosure\r\n        if (!svg.match(/<svg/)) {\r\n            svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n        }\r\n        else {\r\n            if (dimParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }\r\n            /*if (styleParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }*/\r\n        }\r\n        if (background) {\r\n            svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n            //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n        }\r\n        if ($browser.isInternetExplorer()) {\r\n            // IE can't handle exporting <feColorMatrix> for some reason\r\n            svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n        }\r\n        // Remove base uri-related stuff\r\n        var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n        svg = svg.replace(reg, \"url(#\");\r\n        // Remove escaped quotes in url() parameters\r\n        svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n        // Put foreignObjects back in\r\n        if (fos.length) {\r\n            for (var i = 0; i < fos.length; i++) {\r\n                svg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n            }\r\n        }\r\n        svg = this.adapter.apply(\"normalizeSVG\", {\r\n            data: svg,\r\n            options: options\r\n        }).data;\r\n        return svg;\r\n    };\r\n    /**\r\n     * Serializes an element and returns its contents.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element  An element to serialize\r\n     * @return A serialized XML\r\n     */\r\n    Export.prototype.serializeElement = function (element) {\r\n        return new XMLSerializer().serializeToString(element);\r\n    };\r\n    /**\r\n     * Returns a PDF containing chart image.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Account for header when calculating vertical fit\r\n     */\r\n    Export.prototype.getPDF = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            function addFont(font) {\r\n                var paths = {};\r\n                paths.normal = font.normal.path;\r\n                vfs[font.normal.path] = font.normal.bytes;\r\n                if (font.bold) {\r\n                    paths.bold = font.bold.path;\r\n                    vfs[font.bold.path] = font.bold.bytes;\r\n                }\r\n                else {\r\n                    paths.bold = font.normal.path;\r\n                }\r\n                if (font.italics) {\r\n                    paths.italics = font.italics.path;\r\n                    vfs[font.italics.path] = font.italics.bytes;\r\n                }\r\n                else {\r\n                    paths.italics = font.normal.path;\r\n                }\r\n                if (font.bolditalics) {\r\n                    paths.bolditalics = font.bolditalics.path;\r\n                    vfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n                }\r\n                else {\r\n                    paths.bolditalics = font.normal.path;\r\n                }\r\n                fonts[font.name] = paths;\r\n            }\r\n            var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\r\n                    case 1:\r\n                        image = _d.sent();\r\n                        return [4 /*yield*/, this.pdfmake];\r\n                    case 2:\r\n                        pdfmake = _d.sent();\r\n                        defaultMargins = [30, 30, 30, 30];\r\n                        doc = {\r\n                            pageSize: options.pageSize || \"A4\",\r\n                            pageOrientation: options.pageOrientation || \"portrait\",\r\n                            pageMargins: options.pageMargins || defaultMargins,\r\n                            defaultStyle: {\r\n                                font: options.font ? options.font.name : undefined\r\n                            },\r\n                            //header: <any>[],\r\n                            content: []\r\n                        };\r\n                        title = this.adapter.apply(\"title\", {\r\n                            title: this.title,\r\n                            options: options\r\n                        }).title;\r\n                        extraMargin = 0;\r\n                        if (title) {\r\n                            doc.content.push({\r\n                                text: title,\r\n                                fontSize: options.fontSize || 14,\r\n                                bold: true,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for title\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add page URL?\r\n                        if (options.addURL) {\r\n                            doc.content.push({\r\n                                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n                                fontSize: options.fontSize,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for URL\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add image\r\n                        if (type != \"pdfdata\") {\r\n                            doc.content.push({\r\n                                image: image,\r\n                                alignment: options.align || \"left\",\r\n                                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n                            });\r\n                        }\r\n                        if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\r\n                        _b = (_a = doc.content).push;\r\n                        _c = {};\r\n                        return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\r\n                    case 3:\r\n                        _b.apply(_a, [(_c.table = _d.sent(),\r\n                                _c.fontSize = options.fontSize || 14,\r\n                                _c)]);\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        // Apply adapters\r\n                        doc = this.adapter.apply(\"pdfmakeDocument\", {\r\n                            doc: doc,\r\n                            options: options\r\n                        }).doc;\r\n                        fonts = null;\r\n                        vfs = null;\r\n                        if (options.font) {\r\n                            fonts = {};\r\n                            vfs = {};\r\n                            addFont(options.font);\r\n                            if (options.extraFonts) {\r\n                                $array.each(options.extraFonts, addFont);\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, new Promise(function (success, error) {\r\n                                pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\r\n                                    success(uri);\r\n                                });\r\n                            })];\r\n                    case 5: \r\n                    // Create PDF\r\n                    return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPDFData = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var content, dataFields, data, dataFieldsOrder_1, len, i;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                content = {\r\n                    \"body\": []\r\n                };\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"pdf\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"pdfdata\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\r\n                    }, function (a, b) {\r\n                        //console.log(a, b)\r\n                        var ai = dataFieldsOrder_1.indexOf(a);\r\n                        var bi = dataFieldsOrder_1.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return 1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n                        content.headerRows = 1;\r\n                    }\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        content.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n                    }\r\n                }\r\n                return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\r\n                        table: content,\r\n                        options: options\r\n                    }).table];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of data for use in PDF data table (pdfmake).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @since 4.7.0\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated Data line\r\n     */\r\n    Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"pdfdata\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            item = \"\" + item;\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns fit dimensions for available page sizes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pageSize Page size\r\n     * @return `[width, height]` in pixels\r\n     */\r\n    Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\r\n        if (extraMargin === void 0) { extraMargin = 0; }\r\n        // Check margins\r\n        var newMargins = [0, 0, 0, 0];\r\n        if (typeof margins == \"number\") {\r\n            newMargins = [margins, margins, margins, margins];\r\n        }\r\n        else if (margins.length == 2) {\r\n            newMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n        }\r\n        else if (margins.length == 4) {\r\n            newMargins = margins;\r\n        }\r\n        // Define available page sizes\r\n        var sizes = {\r\n            \"4A0\": [4767.87, 6740.79],\r\n            \"2A0\": [3370.39, 4767.87],\r\n            A0: [2383.94, 3370.39],\r\n            A1: [1683.78, 2383.94],\r\n            A2: [1190.55, 1683.78],\r\n            A3: [841.89, 1190.55],\r\n            A4: [595.28, 841.89],\r\n            A5: [419.53, 595.28],\r\n            A6: [297.64, 419.53],\r\n            A7: [209.76, 297.64],\r\n            A8: [147.40, 209.76],\r\n            A9: [104.88, 147.40],\r\n            A10: [73.70, 104.88],\r\n            B0: [2834.65, 4008.19],\r\n            B1: [2004.09, 2834.65],\r\n            B2: [1417.32, 2004.09],\r\n            B3: [1000.63, 1417.32],\r\n            B4: [708.66, 1000.63],\r\n            B5: [498.90, 708.66],\r\n            B6: [354.33, 498.90],\r\n            B7: [249.45, 354.33],\r\n            B8: [175.75, 249.45],\r\n            B9: [124.72, 175.75],\r\n            B10: [87.87, 124.72],\r\n            C0: [2599.37, 3676.54],\r\n            C1: [1836.85, 2599.37],\r\n            C2: [1298.27, 1836.85],\r\n            C3: [918.43, 1298.27],\r\n            C4: [649.13, 918.43],\r\n            C5: [459.21, 649.13],\r\n            C6: [323.15, 459.21],\r\n            C7: [229.61, 323.15],\r\n            C8: [161.57, 229.61],\r\n            C9: [113.39, 161.57],\r\n            C10: [79.37, 113.39],\r\n            RA0: [2437.80, 3458.27],\r\n            RA1: [1729.13, 2437.80],\r\n            RA2: [1218.90, 1729.13],\r\n            RA3: [864.57, 1218.90],\r\n            RA4: [609.45, 864.57],\r\n            SRA0: [2551.18, 3628.35],\r\n            SRA1: [1814.17, 2551.18],\r\n            SRA2: [1275.59, 1814.17],\r\n            SRA3: [907.09, 1275.59],\r\n            SRA4: [637.80, 907.09],\r\n            EXECUTIVE: [521.86, 756.00],\r\n            FOLIO: [612.00, 936.00],\r\n            LEGAL: [612.00, 1008.00],\r\n            LETTER: [612.00, 792.00],\r\n            TABLOID: [792.00, 1224.00]\r\n        };\r\n        // Calculate size\r\n        var fitSize = sizes[pageSize];\r\n        fitSize[0] -= newMargins[0] + newMargins[2];\r\n        fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n        return fitSize;\r\n    };\r\n    /**\r\n     * Returns an Excel file of chart's data.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Handle dates\r\n     * @todo Support for multi-sheet\r\n     */\r\n    Export.prototype.getExcel = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"xlsx\");\r\n                        }\r\n                        return [4 /*yield*/, this.xlsx];\r\n                    case 1:\r\n                        XLSX = _a.sent();\r\n                        wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n                            xlsx: XLSX,\r\n                            options: {\r\n                                bookType: \"xlsx\",\r\n                                bookSST: false,\r\n                                type: \"base64\",\r\n                            }\r\n                        }).options;\r\n                        sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n                            xlsx: XLSX,\r\n                            name: this.title || this.language.translate(\"Data\")\r\n                        }).name);\r\n                        wb = {\r\n                            SheetNames: [sheetName],\r\n                            Sheets: {}\r\n                        };\r\n                        data = [];\r\n                        dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                            dataFields: this.dataFields,\r\n                            format: \"xslx\"\r\n                        }).dataFields;\r\n                        // Vertical or horizontal (default) layout\r\n                        if (options.pivot) {\r\n                            dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                                dataFieldsOrder: this.dataFieldsOrder,\r\n                                format: \"xlsx\"\r\n                            }).dataFieldsOrder;\r\n                            $object.eachOrdered(dataFields, function (key, val) {\r\n                                var dataRow = [];\r\n                                if (options.addColumnNames) {\r\n                                    dataRow.push(val);\r\n                                }\r\n                                for (var len = _this.data.length, i = 0; i < len; i++) {\r\n                                    var dataValue = _this.data[i][key];\r\n                                    dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                                }\r\n                                data.push(_this.getExcelRow(dataRow, options, undefined, true));\r\n                            }, function (a, b) {\r\n                                //console.log(a, b)\r\n                                var ai = dataFieldsOrder_2.indexOf(a);\r\n                                var bi = dataFieldsOrder_2.indexOf(b);\r\n                                if (ai > bi) {\r\n                                    return 1;\r\n                                }\r\n                                else if (ai < bi) {\r\n                                    return -1;\r\n                                }\r\n                                return 0;\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Add column names?\r\n                            if (options.addColumnNames) {\r\n                                data.push(this.getExcelRow(dataFields, options, undefined, true));\r\n                            }\r\n                            // Add lines\r\n                            for (len = this.data.length, i = 0; i < len; i++) {\r\n                                data.push(this.getExcelRow(this.data[i], options, dataFields));\r\n                            }\r\n                        }\r\n                        // Create sheet and add data\r\n                        wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n                        // Apply adapters\r\n                        wb = this.adapter.apply(\"xlsxWorkbook\", {\r\n                            xlsx: XLSX,\r\n                            workbook: wb,\r\n                            options: options\r\n                        }).workbook;\r\n                        uri = this.adapter.apply(\"getExcel\", {\r\n                            data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n                            options: options\r\n                        }).data;\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This is needed to work around Excel limitations.\r\n     *\r\n     * @param name  Source name\r\n     * @return Normalized name\r\n     */\r\n    Export.prototype.normalizeExcelSheetName = function (name) {\r\n        name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n        return $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n    };\r\n    /**\r\n     * Rertuns an array of values to be used as Excel row.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         Row data\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Array of values\r\n     */\r\n    Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"xlsx\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as CSV.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getCSV = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"csv\");\r\n                }\r\n                csv = \"\";\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"csv\"\r\n                }).dataFields;\r\n                br = \"\";\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"csv\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        csv += br + _this.getCSVRow(dataRow, options, undefined, true);\r\n                        br = \"\\n\";\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_3.indexOf(a);\r\n                        var bi = dataFieldsOrder_3.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        row = this.getCSVRow(data[i], options, dataFields);\r\n                        if (options.reverse) {\r\n                            csv = row + br + csv;\r\n                        }\r\n                        else {\r\n                            csv += br + row;\r\n                        }\r\n                        br = \"\\n\";\r\n                    }\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n                    }\r\n                }\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getCSV\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of CSV data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated CSV line\r\n     */\r\n    Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var separator = options.separator || \",\";\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"csv\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Check if we need to skip\r\n            // This is no longer required because we are iterating via dataFields anyway\r\n            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n                return;\r\n            }*/\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Cast and escape doublequotes\r\n            item = \"\" + item;\r\n            item = item.replace(/\"/g, '\"\"');\r\n            // Enclose into double quotes\r\n            if (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n                item = \"\\\"\" + item + \"\\\"\";\r\n            }\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items.join(separator);\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as HTML table.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getHTML = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"html\");\r\n                }\r\n                html = \"<table>\";\r\n                if (options.tableClass) {\r\n                    html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"html\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"html\"\r\n                    }).dataFieldsOrder;\r\n                    html += \"\\n<tbody>\";\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_4.indexOf(a);\r\n                        var bi = dataFieldsOrder_4.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n                    }\r\n                    html += \"\\n<tbody>\";\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n                    }\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                html += \"\\n</table>\";\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getHTML\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of HTML data.\r\n     *\r\n     * @since 4.7.0\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated HTML row\r\n     */\r\n    Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        if (headerRow === void 0) { headerRow = false; }\r\n        // Init output\r\n        var html = \"\\t<tr>\";\r\n        if (options.rowClass) {\r\n            html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n        }\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"html\"\r\n        }).dataFieldsOrder;\r\n        // th or dh?\r\n        var tag = headerRow ? \"th\" : \"td\";\r\n        // Process each row item\r\n        var first = true;\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Escape HTML entities\r\n            item = \"\" + item;\r\n            item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\r\n                return \"&#\" + i.charCodeAt(0) + \";\";\r\n            });\r\n            // Which tag to use\r\n            var useTag = tag;\r\n            if (options.pivot && first) {\r\n                useTag = \"th\";\r\n            }\r\n            // Add cell\r\n            if (options.cellClass) {\r\n                html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            else {\r\n                html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            first = false;\r\n        }, function (a, b) {\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        html += \"\\n\\t</tr>\";\r\n        return html;\r\n    };\r\n    /**\r\n     * Returns chart's data in JSON format.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getJSON = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"json\");\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"json\"\r\n                }).dataFields;\r\n                if (!this._dynamicDataFields) {\r\n                    data = [];\r\n                    sourceData = this.data;\r\n                    _loop_1 = function (len, i) {\r\n                        var value = sourceData[i];\r\n                        if (typeof value == \"object\") {\r\n                            var newValue_1 = {};\r\n                            $object.each(value, function (field, item) {\r\n                                if ($type.hasValue(dataFields[field])) {\r\n                                    newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\r\n                                }\r\n                            });\r\n                            data.push(newValue_1);\r\n                        }\r\n                    };\r\n                    for (len = sourceData.length, i = 0; i < len; i++) {\r\n                        _loop_1(len, i);\r\n                    }\r\n                }\r\n                else {\r\n                    data = this.data;\r\n                }\r\n                json = JSON.stringify(data, function (key, value) {\r\n                    if (typeof value == \"object\") {\r\n                        $object.each(value, function (field, item) {\r\n                            value[field] = _this.convertToSpecialFormat(field, item, options);\r\n                        });\r\n                    }\r\n                    return value;\r\n                }, options.indent);\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getJSON\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts the value to proper date format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  field         Field name\r\n     * @param  value         Value\r\n     * @param  options       Options\r\n     * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n     * @return Formatted date value or unmodified value\r\n     */\r\n    Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\r\n        // Is this a timestamp or duration?\r\n        if (typeof value == \"number\") {\r\n            if (this.isDateField(field)) {\r\n                value = new Date(value);\r\n            }\r\n            else if (this.isDurationField(field)) {\r\n                return this.durationFormatter.format(value, this.durationFormat);\r\n            }\r\n            else if (this.isNumberField(field) && this.numberFormat) {\r\n                return this.numberFormatter.format(value, this.numberFormat);\r\n            }\r\n        }\r\n        if (value instanceof Date) {\r\n            if (options.useTimestamps) {\r\n                value = value.getTime();\r\n            }\r\n            else if (options.useLocale) {\r\n                if (!keepOriginal) {\r\n                    value = value.toLocaleString();\r\n                }\r\n            }\r\n            else {\r\n                value = this.dateFormatter.format(value, this.dateFormat);\r\n            }\r\n        }\r\n        else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n            value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Converts empty value based on `emptyAs` option.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.convertEmptyValue = function (field, value, options) {\r\n        return $type.hasValue(value) ? value : options.emptyAs;\r\n    };\r\n    /**\r\n     * Triggers download of the file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param uri       Data URI with file content\r\n     * @param fileName  File name\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.download = function (uri, fileName, addBOM) {\r\n        if (addBOM === void 0) { addBOM = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\r\n            return __generator(this, function (_a) {\r\n                if (this.msBlobDownloadSupport()) {\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    // Check if we need to Base64-decode\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        blob_1 = new Blob([uri], { type: contentType });\r\n                        window.navigator.msSaveBlob(blob_1, fileName);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    window.navigator.msSaveBlob(blob, fileName);\r\n                }\r\n                else if (this.blobDownloadSupport()) {\r\n                    link_1 = document.createElement(\"a\");\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (addBOM) {\r\n                            uri = \"\\ufeff\" + uri;\r\n                        }\r\n                        blob_2 = new Blob([uri], { type: contentType });\r\n                        url_2 = window.URL.createObjectURL(blob_2);\r\n                        link_1.href = url_2;\r\n                        link_1.download = fileName;\r\n                        link_1.click();\r\n                        setTimeout(function () {\r\n                            document.body.removeChild(link_1);\r\n                            window.URL.revokeObjectURL(url_2);\r\n                        }, 100);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    if (addBOM) {\r\n                        chars = [0xEF, 0xBB, 0xBF].concat(chars);\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    url_3 = window.URL.createObjectURL(blob);\r\n                    link_1.href = url_3;\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    link_1.click();\r\n                    document.body.removeChild(link_1);\r\n                    setTimeout(function () {\r\n                        window.URL.revokeObjectURL(url_3);\r\n                    }, 100);\r\n                }\r\n                else if (this.linkDownloadSupport()) {\r\n                    link = document.createElement(\"a\");\r\n                    link.download = fileName;\r\n                    link.href = uri;\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                }\r\n                else if (this.legacyIE()) {\r\n                    parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n                    if (parts.length === 4) {\r\n                        // Base64-encoded or text-based stuff?\r\n                        if (parts[2] == \"base64\") {\r\n                            // Base64-encoded - probably an image\r\n                            if (parts[1].match(/^image\\//)) {\r\n                                // Yep, an image. Let's create a temporary image placeholder,\r\n                                // so that user can use do Save As.\r\n                                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n                                    \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") +\r\n                                    \"</p>\" +\r\n                                    \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\r\n                            }\r\n                        }\r\n                        else {\r\n                            contentType = void 0;\r\n                            if (fileName.match(/\\.svg$/)) {\r\n                                contentType = \"image/svg+xml\";\r\n                            }\r\n                            else {\r\n                                contentType = \"text/plain\";\r\n                                fileName += \".txt\";\r\n                            }\r\n                            iframe = document.createElement(\"iframe\");\r\n                            iframe.width = \"1px\";\r\n                            iframe.height = \"1px\";\r\n                            iframe.style.display = \"none\";\r\n                            document.body.appendChild(iframe);\r\n                            idoc = iframe.contentDocument;\r\n                            idoc.open(contentType, \"replace\");\r\n                            // TODO test this with various encodings (e.g. UTF)\r\n                            //idoc.charset = parts[2].replace(/charset=/, \"\");\r\n                            idoc.write(decodeURIComponent(parts[3]));\r\n                            idoc.close();\r\n                            idoc.execCommand(\"SaveAs\", true, fileName);\r\n                            // Destroy the iframe\r\n                            document.body.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    /**\r\n                     * Something else - perhaps a mobile.\r\n                     * Let's just display it in the same page.\r\n                     * (hey we don't like it either)\r\n                     */\r\n                    window.location.href = uri;\r\n                }\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns `true` if browser has any supported methods to trigger download\r\n     * of a binary file.\r\n     *\r\n     * @return Supports downloads?\r\n     */\r\n    Export.prototype.downloadSupport = function () {\r\n        //return !this.legacyIE();\r\n        return this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n    };\r\n    /**\r\n     * Checks if the browser supports \"download\" attribute on links.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.linkDownloadSupport = function () {\r\n        // Do we have this cached?\r\n        var cache = registry.getCache(\"linkDownloadSupport\");\r\n        if (cache === false || cache === true) {\r\n            return cache;\r\n        }\r\n        var a = document.createElement(\"a\");\r\n        var res = typeof a.download !== \"undefined\";\r\n        registry.setCache(\"linkDownloadSupport\", res);\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.blobDownloadSupport = function () {\r\n        return $type.hasValue(window.Blob);\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.msBlobDownloadSupport = function () {\r\n        return $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n    };\r\n    /**\r\n     * Checks if this is a legacy version of IE.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return IE9 or less?\r\n     */\r\n    Export.prototype.legacyIE = function () {\r\n        // Create a temporary <div> with conditional tags in it an an <i> tag.\r\n        // Count <i>s. If there are some, we have IE9 or late on our hands.\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n        return div.getElementsByTagName(\"i\").length == 1;\r\n    };\r\n    /**\r\n     * Initiates print of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param data     Data URI for the image\r\n     * @param options  Options\r\n     * @param title    Optional title to use (uses window's title by default)\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.print = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (options.printMethod == \"css\") {\r\n                    return [2 /*return*/, this.printViaCSS(data, options, title)];\r\n                }\r\n                else {\r\n                    return [2 /*return*/, this.printViaIframe(data, options, title)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaCSS = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var scroll, rule, originalTitle, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n                rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n                    \"display\": \"none\",\r\n                    \"position\": \"fixed\",\r\n                    \"visibility\": \"hidden\",\r\n                    \"opacity\": \"0\",\r\n                    \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n                });\r\n                if (title && document && document.title) {\r\n                    originalTitle = document.title;\r\n                    document.title = title;\r\n                }\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.display = \"block\";\r\n                img.style.position = \"relative\";\r\n                img.style.visibility = \"visible\";\r\n                img.style.opacity = \"1\";\r\n                img.style.clipPath = \"none\";\r\n                document.body.appendChild(img);\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    window.print();\r\n                }, 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(img);\r\n                    // Reset back all elements\r\n                    /*for (let len = items.length, i = 0; i < len; i++) {\r\n                        let item = <HTMLElement>items[i];\r\n                        if ($dom.isElement(item)) {\r\n                            item.style.display = states[i];\r\n                        }\r\n                    }*/\r\n                    rule.dispose();\r\n                    // Restore title\r\n                    if (originalTitle) {\r\n                        document.title = document.title;\r\n                    }\r\n                    // Scroll back the document the way it was before\r\n                    document.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n                }, options.delay || 500);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaIframe = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var iframe, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                iframe = document.createElement(\"iframe\");\r\n                iframe.style.visibility = \"hidden\";\r\n                document.body.appendChild(iframe);\r\n                // This is needed for FireFox\r\n                iframe.contentWindow.document.open();\r\n                iframe.contentWindow.document.close();\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.height = \"auto\";\r\n                if (title) {\r\n                    iframe.contentWindow.document.title = title;\r\n                }\r\n                iframe.contentWindow.document.body.appendChild(img);\r\n                iframe.load = function () {\r\n                    iframe.contentWindow.document.body.appendChild(img);\r\n                };\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    try {\r\n                        if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                }, options.delay || 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(iframe);\r\n                }, options.delay + 50 || 100);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Finds a background color for the element. If element is transparent it goes\r\n     * up the DOM hierarchy to find a parent element that does.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element Element\r\n     * @return Color code\r\n     */\r\n    Export.prototype.findBackgroundColor = function (element) {\r\n        // Check if element has styles set\r\n        var opacity = 1, currentColor = getComputedStyle(element, \"background-color\");\r\n        // Check opacity\r\n        if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n            opacity = 0;\r\n        }\r\n        if (opacity == 0) {\r\n            var parent_2 = element.parentElement; // || <Element>element.parentNode;\r\n            // Completely transparent. Look for a parent\r\n            if (parent_2) {\r\n                return this.findBackgroundColor(parent_2);\r\n            }\r\n            else {\r\n                return color(\"#fff\");\r\n            }\r\n        }\r\n        else {\r\n            return color(currentColor, opacity);\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"container\", {\r\n        /**\r\n         * @return Reference\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"container\", {\r\n                container: this._container\r\n            }).container;\r\n        },\r\n        /**\r\n         * A reference to a container to be used to place [[ExportMenu]] in.\r\n         *\r\n         * @param value Reference\r\n         */\r\n        set: function (value) {\r\n            this._container = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"sprite\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"sprite\", {\r\n                sprite: this._sprite\r\n            }).sprite;\r\n        },\r\n        /**\r\n         * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n         * internal elements.\r\n         *\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._sprite = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"extraSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"extraSprites\", {\r\n                extraSprites: this._extraSprites\r\n            }).extraSprites;\r\n        },\r\n        /**\r\n         * An array of extra [[Sprite]] elements to include in export.\r\n         *\r\n         * It can be used to export any external elements, or even other charts.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         *\r\n         * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n         *\r\n         * @since 4.2.0\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._extraSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"validateSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"validateSprites\", {\r\n                validateSprites: this._validateSprites\r\n            }).validateSprites;\r\n        },\r\n        /**\r\n         * An array of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         *\r\n         * If any of those elements is not completely ready when export is triggered,\r\n         * the export will wait until they are (their `validated` event triggers)\r\n         * before going through with the export opertaion.\r\n         *\r\n         * This is useful if you need to modify chart appearance for the export.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Add watermark\r\n         * let watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         * ```JavaScript\r\n         * // Add watermark\r\n         * var watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         *\r\n         * @since 4.6.8\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._validateSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"data\", {\r\n        /**\r\n         * @return Data\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"data\", {\r\n                data: this._data\r\n            }).data;\r\n        },\r\n        /**\r\n         * Data to export.\r\n         *\r\n         * @param value Data\r\n         */\r\n        set: function (value) {\r\n            this._data = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dataFields\", {\r\n        /**\r\n         * @return Field names `{ field: fieldName }`\r\n         */\r\n        get: function () {\r\n            if (!this._dataFields) {\r\n                this.generateDataFields();\r\n            }\r\n            return this.adapter.apply(\"dataFields\", {\r\n                dataFields: this._dataFields\r\n            }).dataFields;\r\n        },\r\n        /**\r\n         * Data fields in `{ field: fieldName }` format. Those are used for\r\n         * exporting in data formats to name the columns.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n         * @param value Field names\r\n         */\r\n        set: function (value) {\r\n            this._dataFields = value;\r\n            this._dynamicDataFields = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called after target chart's data updates.\r\n     *\r\n     * @ignore\r\n     */\r\n    Export.prototype.handleDataUpdated = function () {\r\n        if (this._dynamicDataFields) {\r\n            this._dataFields = undefined;\r\n        }\r\n        var hasData = this.data.length > 0;\r\n        if (this._prevHasData != hasData) {\r\n            this._prevHasData = hasData;\r\n            if (this.menu) {\r\n                this.menu.invalidate();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return A DateFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._dateFormatter) {\r\n                this._dateFormatter = new DateFormatter();\r\n                this._dateFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"dateFormatter\", {\r\n                dateFormatter: this._dateFormatter\r\n            }).dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @param value DateFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"dateFormat\", {\r\n                dateFormat: this._dateFormat\r\n            }).dateFormat;\r\n        },\r\n        /**\r\n         * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._dateFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFields\", {\r\n        /**\r\n         * @return Date field list\r\n         */\r\n        get: function () {\r\n            if (!this._dateFields) {\r\n                this._dateFields = new List();\r\n            }\r\n            return this.adapter.apply(\"dateFields\", {\r\n                dateFields: this._dateFields\r\n            }).dateFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold date values.\r\n         *\r\n         * @param value Date field list\r\n         */\r\n        set: function (value) {\r\n            this._dateFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormatter\", {\r\n        /**\r\n         * @return A NumberFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._numberFormatter) {\r\n                this._numberFormatter = new NumberFormatter();\r\n                this._numberFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"numberFormatter\", {\r\n                numberFormatter: this._numberFormatter\r\n            }).numberFormatter;\r\n        },\r\n        /**\r\n         * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value NumberFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._numberFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormat\", {\r\n        /**\r\n         * @return Number format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"numberFormat\", {\r\n                numberFormat: this._numberFormat\r\n            }).numberFormat;\r\n        },\r\n        /**\r\n         * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number format\r\n         */\r\n        set: function (value) {\r\n            this._numberFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFields\", {\r\n        /**\r\n         * @return Number field list\r\n         */\r\n        get: function () {\r\n            if (!this._numberFields) {\r\n                this._numberFields = new List();\r\n            }\r\n            return this.adapter.apply(\"numberFields\", {\r\n                numberFields: this._numberFields\r\n            }).numberFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold number values.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number field list\r\n         */\r\n        set: function (value) {\r\n            this._numberFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormatter\", {\r\n        /**\r\n         * @return A DurationFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._durationFormatter) {\r\n                this._durationFormatter = new DurationFormatter();\r\n                this._durationFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"durationFormatter\", {\r\n                durationFormatter: this._durationFormatter\r\n            }).durationFormatter;\r\n        },\r\n        /**\r\n         * A [[DurationFormatter]] to use when formatting duration values when\r\n         * exporting data.\r\n         *\r\n         * @param value  DurationFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._durationFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormat\", {\r\n        /**\r\n         * @return Duration format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"durationFormat\", {\r\n                durationFormat: this._durationFormat\r\n            }).durationFormat;\r\n        },\r\n        /**\r\n         * A format to use when formatting values from `durationFields`.\r\n         * Will use [[DurationFormatter]] format if not set.\r\n         *\r\n         * @param value Duration format\r\n         */\r\n        set: function (value) {\r\n            this._durationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFields\", {\r\n        /**\r\n         * @return Duration field list\r\n         */\r\n        get: function () {\r\n            if (!this._durationFields) {\r\n                this._durationFields = new List();\r\n            }\r\n            return this.adapter.apply(\"durationFields\", {\r\n                durationFields: this._durationFields\r\n            }).durationFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold duration values.\r\n         *\r\n         * @param value Duration field list\r\n         */\r\n        set: function (value) {\r\n            this._durationFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates data fields out of the first row of data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.generateDataFields = function () {\r\n        var _this = this;\r\n        this._dataFields = {};\r\n        if (this.data.length) {\r\n            $array.each(this.data, function (row) {\r\n                $object.each(row, function (key, value) {\r\n                    if (!$type.hasValue(_this._dataFields[key])) {\r\n                        _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\r\n                            name: key,\r\n                            field: key\r\n                        }).name;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cheks against `dateFields` property to determine if this field holds\r\n     * dates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDateField = function (field) {\r\n        return this.adapter.apply(\"isDateField\", {\r\n            isDateField: this.dateFields.contains(field),\r\n            field: field\r\n        }).isDateField;\r\n    };\r\n    /**\r\n     * Cheks against `numberFields` property to determine if this field holds\r\n     * numbers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a number field\r\n     */\r\n    Export.prototype.isNumberField = function (field) {\r\n        return this.adapter.apply(\"isNumberField\", {\r\n            isNumberField: this.numberFields.contains(field),\r\n            field: field\r\n        }).isNumberField;\r\n    };\r\n    /**\r\n     * Cheks against `durationFields` property to determine if this field holds\r\n     * durations.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDurationField = function (field) {\r\n        return this.adapter.apply(\"isDurationField\", {\r\n            isDurationField: this.durationFields.contains(field),\r\n            field: field\r\n        }).isDurationField;\r\n    };\r\n    /**\r\n     * Returns proper content type for the export type.\r\n     *\r\n     * @param type  Export format/type\r\n     * @return Proper content type, i.e. \"image/jpeg\"\r\n     */\r\n    Export.prototype.getContentType = function (type) {\r\n        var contentType = \"\";\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n                contentType = \"image/\" + type;\r\n                break;\r\n            case \"jpg\":\r\n                contentType = \"image/jpeg\";\r\n                break;\r\n            case \"svg\":\r\n                contentType = \"image/svg+xml\";\r\n                break;\r\n            case \"csv\":\r\n                contentType = \"text/csv\";\r\n                break;\r\n            case \"json\":\r\n                contentType = \"application/json\";\r\n                break;\r\n            case \"html\":\r\n                contentType = \"text/html\";\r\n                break;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                contentType = \"application/pdf\";\r\n                break;\r\n            case \"xlsx\":\r\n                contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n                break;\r\n        }\r\n        return this.adapter.apply(\"contentType\", {\r\n            contentType: contentType,\r\n            type: type\r\n        }).contentType;\r\n    };\r\n    Object.defineProperty(Export.prototype, \"filePrefix\", {\r\n        /**\r\n         * @return File prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"filePrefix\", {\r\n                filePrefix: this._filePrefix\r\n            }).filePrefix;\r\n        },\r\n        /**\r\n         * A file prefix to be used for all exported formats.\r\n         *\r\n         * Export will apply format-related extension to it. E.g. if this is set to\r\n         * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n         *\r\n         * @param value File prefix\r\n         */\r\n        set: function (value) {\r\n            this._filePrefix = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"backgroundColor\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"backgroundColor\", {\r\n                backgroundColor: this._backgroundColor\r\n            }).backgroundColor;\r\n        },\r\n        /**\r\n         * A background color to be used for exported images. If set, this will\r\n         * override the automatically acquired background color.\r\n         *\r\n         * @param value Color\r\n         */\r\n        set: function (value) {\r\n            this._backgroundColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"title\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"title\", {\r\n                title: this._title\r\n            }).title;\r\n        },\r\n        /**\r\n         * A title to be used when printing.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            this._title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Add ability to change text\r\n     */\r\n    Export.prototype.showPreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 0.5;\r\n            preloader.label.text = \"...\";\r\n        }\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hidePreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"preloader\", {\r\n        /**\r\n         * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n         * exported.\r\n         *\r\n         * @return Preloader\r\n         */\r\n        get: function () {\r\n            return this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n                this._sprite.parent.preloader :\r\n                undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a modal saying export is taking longer than expected.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.showTimeout = function () {\r\n        this.showModal(this.adapter.apply(\"timeoutMessage\", {\r\n            message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n        }).message);\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideTimeout = function () {\r\n        if (this._timeoutTimeout) {\r\n            this.removeDispose(this._timeoutTimeout);\r\n            this._timeoutTimeout = null;\r\n        }\r\n        this.hideModal();\r\n    };\r\n    Object.defineProperty(Export.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (!this._language) {\r\n                this._language = new Language();\r\n            }\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance to be used for translations.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"modal\", {\r\n        /**\r\n         * Returns (and creates) [[Modal]].\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            if (!this._modal) {\r\n                this._modal = new Modal();\r\n                // Prefix with Sprite's class name\r\n                this._modal.adapter.add(\"classPrefix\", function (value) {\r\n                    value = options.classNamePrefix + value;\r\n                    return value;\r\n                });\r\n            }\r\n            return this._modal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows [[Modal]] with specific text.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text Modal contents\r\n     */\r\n    Export.prototype.showModal = function (text, title) {\r\n        // Hide previous modal and preloader\r\n        this.hideModal();\r\n        this.hidePreloader();\r\n        // Create modal\r\n        var modal = this.modal;\r\n        modal.container = this.sprite.svgContainer.SVGContainer;\r\n        modal.content = text;\r\n        modal.readerTitle = title;\r\n        modal.open();\r\n    };\r\n    /**\r\n     * Hides modal window if one's currently open.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideModal = function () {\r\n        if (this._modal) {\r\n            this.modal.close();\r\n        }\r\n    };\r\n    /**\r\n     * Loads canvg dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     * @async\r\n     */\r\n    Export.prototype._canvg = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var canvg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")];\r\n                    case 1:\r\n                        canvg = (_a.sent());\r\n                        if (canvg.default != null) {\r\n                            return [2 /*return*/, canvg.default];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, canvg];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"canvg\", {\r\n        /**\r\n         * Returns canvg instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of canvg\r\n         */\r\n        get: function () {\r\n            return this._canvg();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"pdfmake\", {\r\n        /**\r\n         * Returns pdfmake instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            if (pdfmakePromise == null) {\r\n                pdfmakePromise = _pdfmake();\r\n            }\r\n            return pdfmakePromise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads xlsx dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     * @async\r\n     */\r\n    Export.prototype._xlsx = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"xlsx\" */ \"xlsx/dist/xlsx.core.min.js\")];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"xlsx\", {\r\n        /**\r\n         * Returns xlsx instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            return this._xlsx();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets options for a format.\r\n     */\r\n    Export.prototype.setFormatOptions = function (type, options) {\r\n        this._formatOptions.setKey(type, options);\r\n    };\r\n    /**\r\n     * Returns current options for a format.\r\n     */\r\n    Export.prototype.getFormatOptions = function (type) {\r\n        return this._formatOptions.getKey(type);\r\n    };\r\n    Object.defineProperty(Export.prototype, \"formatOptions\", {\r\n        /**\r\n         * A [[Dictionary]] object containing format-specific options.\r\n         *\r\n         * May be used to change specific option for the format:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     // ...\r\n         *     \"formatOptions\": {\r\n         *       \"csv\": {\r\n         *         \"disabled\": true\r\n         *       }\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.9.12\r\n         * @return  Options\r\n         */\r\n        get: function () {\r\n            return this._formatOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Disables interactivity on parent chart.\r\n     */\r\n    Export.prototype._disablePointers = function () {\r\n        if (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n        }\r\n        this.sprite.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Releases temporarily disabled pointers on parent chart.\r\n     */\r\n    Export.prototype._releasePointers = function () {\r\n        if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n        }\r\n    };\r\n    /**\r\n     * Hides all elements that should not be included in the exported image.\r\n     */\r\n    Export.prototype.hideNonExportableSprites = function () {\r\n        var _this = this;\r\n        if (this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        var svgContainer = this.sprite.svgContainer;\r\n        if (svgContainer) {\r\n            $array.each(svgContainer.nonExportableSprites, function (item) {\r\n                if (!item.isHidden && !item.isHiding && item.visible) {\r\n                    _this._hiddenObjects.push(item);\r\n                }\r\n                item.hide(0);\r\n            });\r\n        }\r\n        this._objectsAlreadyHidden = true;\r\n    };\r\n    /**\r\n     * Respores elements that were hidden before export.\r\n     */\r\n    Export.prototype.restoreNonExportableSprites = function () {\r\n        if (!this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        $array.each(this._hiddenObjects, function (item) {\r\n            item.show(0);\r\n        });\r\n        this._hiddenObjects = [];\r\n        this._objectsAlreadyHidden = false;\r\n    };\r\n    /**\r\n     * Checks if there are elements that absolutely need to be validated before\r\n     * export.\r\n     *\r\n     * If there are invalid elements, it will await for them to be validated.\r\n     *\r\n     * @return Promise\r\n     */\r\n    Export.prototype.awaitValidSprites = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        if (this.validateSprites.length) {\r\n                            $array.each(this.validateSprites, function (sprite, index) {\r\n                                if (sprite.invalid) {\r\n                                    promises.push(new Promise(function (resolve, reject) {\r\n                                        sprite.events.once(\"validated\", function (ev) {\r\n                                            resolve();\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!promises.length) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Export.prototype.processConfig = function (config) {\r\n        registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n        if (config) {\r\n            // Set up menu\r\n            if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n                config.menu.type = \"ExportMenu\";\r\n            }\r\n            if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\r\n                this.dataFields = config.dataFields;\r\n                delete config.dataFields;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * XLINK namespace definition.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.XLINK = \"http://www.w3.org/1999/xlink\";\r\n    return Export;\r\n}(Validatable));\r\nexport { Export };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
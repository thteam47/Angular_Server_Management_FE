{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/sibling.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"src/app/services/user.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/progress-spinner\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\n\nfunction LoginComponent_mat_spinner_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 4);\n  }\n}\n\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.login();\n    });\n    i0.ɵɵelement(1, \"img\", 6);\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵtext(3, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(5, \"mat-label\");\n    i0.ɵɵtext(6, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 9);\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_3_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.hide = !ctx_r4.hide;\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 11);\n    i0.ɵɵtext(16, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"type\", ctx_r1.hide ? \"password\" : \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx_r1.hide);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.hide ? \"visibility_off\" : \"visibility\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.form.invalid);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, sibling, _snackBar, router, toastr, userService) {\n      this.fb = fb;\n      this.sibling = sibling;\n      this._snackBar = _snackBar;\n      this.router = router;\n      this.toastr = toastr;\n      this.userService = userService;\n      this.hide = true;\n      this.loading = false;\n      this.form = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n    }\n\n    login() {\n      const username = this.form.value.username;\n      const password = this.form.value.password;\n      const user = {\n        username: this.form.value.username,\n        password: this.form.value.password\n      };\n      this.userService.loginAdmin(user).subscribe(res => {\n        if (res.ok == true) {\n          localStorage.setItem('token', res.accessToken);\n          localStorage.setItem('role', res.role);\n          this.fakeLoading();\n          this.toastr.success('Login Succesfull');\n        }\n      }, err => {\n        this.error();\n        this.form.reset();\n      });\n    }\n\n    error() {\n      this._snackBar.open('Username or password incorrect', 'Again', {\n        duration: 3000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n\n    fakeLoading() {\n      this.loading = true;\n      setTimeout(() => {\n        this.router.navigate(['dashboard']);\n      }, 2000);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SiblingService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.UserService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"body\"], [1, \"login\"], [\"class\", \"spinner\", \"diameter\", \"50\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"diameter\", \"50\", 1, \"spinner\"], [3, \"formGroup\", \"ngSubmit\"], [\"src\", \"./assets/img/man.png\", \"width\", \"50%\"], [\"appearance\", \"fill\", 1, \"inputU\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"username\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"inputU\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, LoginComponent_mat_spinner_2_Template, 1, 0, \"mat-spinner\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 17, 6, \"form\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i7.NgIf, i8.MatSpinner, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.MatButton, i9.MatSuffix, i12.MatIcon],\n    styles: [\".body[_ngcontent-%COMP%]{display:flex;justify-content:center;height:100%;align-items:center;background-color:#f5f5f5}.login[_ngcontent-%COMP%]{width:100%;max-width:330px;text-align:center}.inputU[_ngcontent-%COMP%]{width:80%}button[_ngcontent-%COMP%]{height:45px}.spinner[_ngcontent-%COMP%]{margin:0 auto}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { AxisBreak } from \"./AxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\n\nvar CategoryAxisBreak = function (_super) {\n  __extends(CategoryAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CategoryAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CategoryAxisBreak\";\n    _this.properties.startLocation = 0.5;\n    _this.properties.endLocation = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\n    /**\r\n     * Pixel position of the break's start.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function () {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\n    /**\r\n     * Pixel position of the break's end.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function () {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\n    /**\r\n     * @return Start category\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startCategory\");\n    },\n\n    /**\r\n     * A category break starts on.\r\n     *\r\n     * @param value Start category\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\n    /**\r\n     * @return End category\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endCategory\");\n    },\n\n    /**\r\n     * A category break ends on.\r\n     *\r\n     * @param value  End category\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      var category = this.getPropertyValue(\"startCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"startValue\");\n      }\n    },\n\n    /**\r\n     * An index of start category.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      var category = this.getPropertyValue(\"endCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"endValue\");\n      }\n    },\n\n    /**\r\n     * An index of end category or a end value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startLocation\", {\n    /**\r\n     * @return Break start location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startLocation\");\n    },\n\n    /**\r\n     * Indicates where within starting category break should begin.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break start location\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endLocation\", {\n    /**\r\n     * @return Break end location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endLocation\");\n    },\n\n    /**\r\n     * Indicates where within ending category break should end.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break end location\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CategoryAxisBreak;\n}(AxisBreak);\n\nexport { CategoryAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak; //# sourceMappingURL=CategoryAxisBreak.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { FunctionsUsingCSI } from 'ng-terminal';\nimport { WebLinksAddon } from 'xterm-addon-web-links';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng-terminal\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/slide-toggle\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nconst _c0 = [\"term\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"ng-terminal\": a0\n  };\n};\n\nexport let SshterminalComponent = /*#__PURE__*/(() => {\n  class SshterminalComponent {\n    constructor() {\n      // constructor() { }\n      // ngOnInit(): void {\n      // }\n      // @ViewChild('term', { static: true }) child!: NgTerminal;\n      // ngAfterViewInit(){\n      //   this.child.keyEventInput.subscribe(e => {\n      //     console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n      //     const ev = e.domEvent;\n      //     const printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n      //     if (ev.keyCode === 13) {\n      //       this.child.write('\\r\\n$ ');\n      //     } else if (ev.keyCode === 8) {\n      //       if (this.child.underlying.buffer.active.cursorX > 2) {\n      //         this.child.write('\\b \\b');\n      //       }\n      //     } else if (printable) {\n      //       this.child.write(e.key);\n      //     }\n      //   })\n      // }\n      this.color = 'accent';\n      this.fixed = false;\n      this.disabled = false;\n      this.rowsControl = new FormControl();\n      this.colsControl = new FormControl();\n      this.inputControl = new FormControl();\n      this.displayOption = {};\n      this.displayOptionBounded = {}; //now it's not used\n\n      this.writeSubject = new Subject();\n    }\n\n    ngOnInit() {\n      this.rowsControl.setValue(10);\n      this.colsControl.setValue(40);\n    }\n\n    ngAfterViewInit() {\n      this.underlying = this.child.underlying;\n      this.underlying.setOption(\"fontSize\", 20);\n      this.underlying.loadAddon(new WebLinksAddon());\n      this.invalidate();\n      this.child.write('$ ');\n      this.child.keyInput.subscribe(input => {//do nothing because it will be replaced keyEventInput\n      });\n      this.child.keyEventInput.subscribe(e => {\n        console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n        const ev = e.domEvent;\n        const printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n        if (ev.keyCode === 13) {\n          this.child.write('\\n' + FunctionsUsingCSI.cursorColumn(1) + '$ '); // \\r\\n\n        } else if (ev.keyCode === 8) {\n          // Do not delete the prompt\n          if (this.child.underlying.buffer.active.cursorX > 2) {\n            this.child.write('\\b \\b');\n          }\n        } else if (printable) {\n          this.child.write(e.key);\n        }\n      });\n      this.rowsControl.valueChanges.subscribe(() => {\n        this.invalidate();\n      });\n      this.colsControl.valueChanges.subscribe(() => {\n        this.invalidate();\n      });\n    }\n\n    invalidate() {\n      if (this.resizable) this.displayOption.activateDraggableOnEdge = {\n        minWidth: 100,\n        minHeight: 100\n      };else this.displayOption.activateDraggableOnEdge = undefined;\n      if (this.fixed) this.displayOption.fixedGrid = {\n        rows: this.rowsControl.value,\n        cols: this.colsControl.value\n      };else this.displayOption.fixedGrid = undefined;\n      this.child.setDisplayOption(this.displayOption);\n    }\n\n    resizableChange(event) {\n      this.resizable = event.checked;\n\n      if (this.resizable) {\n        this.child.setStyle({\n          \"border\": \"4px solid #85858a\"\n        });\n        this.fixed = false;\n      }\n\n      this.invalidate();\n    }\n\n    fixedChange(event) {\n      this.fixed = event.checked;\n\n      if (this.fixed) {\n        this.child.setStyle({\n          \"border\": \"unset\"\n        });\n        this.resizable = false;\n      }\n\n      this.invalidate();\n    }\n\n    write() {\n      this.writeSubject.next(eval(`'${this.inputControl.value}'`));\n    }\n\n    onKeyInput(event) {\n      this.keyInput = event;\n    }\n\n    get displayOptionForLiveUpdate() {\n      return JSON.parse(JSON.stringify(this.displayOption));\n    }\n\n  }\n\n  SshterminalComponent.ɵfac = function SshterminalComponent_Factory(t) {\n    return new (t || SshterminalComponent)();\n  };\n\n  SshterminalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SshterminalComponent,\n    selectors: [[\"app-sshterminal\"]],\n    viewQuery: function SshterminalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.child = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 17,\n    consts: [[3, \"dataSource\", \"displayOption\", \"ngClass\", \"keyInput\"], [\"term\", \"\"], [2, \"padding-left\", \"1em\", \"padding-top\", \"0.3em\", \"margin-top\", \"0.7em\", \"padding-bottom\", \"1em\"], [2, \"display\", \"inline-block\", \"vertical-align\", \"top\", \"margin-bottom\", \"0.8em\"], [1, \"example-margin\", 3, \"checked\", \"color\", \"disabled\", \"change\"], [\"matInput\", \"\", \"placeholder\", \"rows\", \"type\", \"number\", 3, \"formControl\"], [\"matInput\", \"\", \"placeholder\", \"cols\", \"type\", \"number\", 3, \"formControl\"], [2, \"font-size\", \"0.8em\", \"font-weight\", \"bold\"], [\"matInput\", \"\", \"placeholder\", \"Type here\", \"value\", \"\", 3, \"formControl\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function SshterminalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng-terminal\", 0, 1);\n        i0.ɵɵlistener(\"keyInput\", function SshterminalComponent_Template_ng_terminal_keyInput_0_listener($event) {\n          return ctx.onKeyInput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"Display Opiton\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"mat-slide-toggle\", 4);\n        i0.ɵɵlistener(\"change\", function SshterminalComponent_Template_mat_slide_toggle_change_8_listener($event) {\n          return ctx.resizableChange($event);\n        });\n        i0.ɵɵtext(9, \" Resizable \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelementStart(11, \"mat-slide-toggle\", 4);\n        i0.ɵɵlistener(\"change\", function SshterminalComponent_Template_mat_slide_toggle_change_11_listener($event) {\n          return ctx.fixedChange($event);\n        });\n        i0.ɵɵtext(12, \" Fixed row and col \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\");\n        i0.ɵɵelementStart(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\");\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"h3\");\n        i0.ɵɵtext(19, \"Examples of data binding\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\");\n        i0.ɵɵelementStart(21, \"span\", 7);\n        i0.ɵɵtext(22, \"[dataSource]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\");\n        i0.ɵɵelementStart(24, \"mat-form-field\");\n        i0.ɵɵelement(25, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function SshterminalComponent_Template_button_click_26_listener() {\n          return ctx.write();\n        });\n        i0.ɵɵtext(27, \"Write\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵelementStart(29, \"span\", 7);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"dataSource\", ctx.writeSubject)(\"displayOption\", ctx.displayOptionBounded)(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, ctx.displayOption.activateDraggableOnEdge == undefined && ctx.displayOption.fixedGrid == undefined));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mat-elevation-z1\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"checked\", ctx.resizable)(\"color\", ctx.color)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.fixed)(\"color\", ctx.color)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.rowsControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.colsControl);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"(keyInput): \", ctx.keyInput, \"\");\n      }\n    },\n    directives: [i1.NgTerminalComponent, i2.NgClass, i3.MatSlideToggle, i4.MatFormField, i5.MatInput, i6.NumberValueAccessor, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlDirective, i7.MatButton],\n    styles: [\".ng-terminal[_ngcontent-%COMP%]{display:block;height:50vh}\"]\n  });\n  return SshterminalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
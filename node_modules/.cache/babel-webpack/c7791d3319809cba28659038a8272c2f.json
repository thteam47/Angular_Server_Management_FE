{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { BaseObject } from \"../../Base\";\nimport { registry } from \"../../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A base class for color modifiers.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nvar ColorModifier = function (_super) {\n  __extends(ColorModifier, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColorModifier() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ColorModifier\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Modifies color value.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Original color\r\n   * @return Modified\r\n   */\n\n\n  ColorModifier.prototype.modify = function (value) {\n    return value;\n  };\n\n  return ColorModifier;\n}(BaseObject);\n\nexport { ColorModifier };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ColorModifier\"] = ColorModifier; //# sourceMappingURL=ColorModifier.js.map","map":null,"metadata":{},"sourceType":"module"}
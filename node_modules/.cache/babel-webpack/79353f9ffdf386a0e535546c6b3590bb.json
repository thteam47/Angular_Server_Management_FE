{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, NgModule, InjectionToken, Injectable, Inject, SecurityContext, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\nconst _c0 = [\"toast-component\", \"\"];\n\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nclass ToastContainerDirective {\n  constructor(el) {\n    this.el = el;\n  }\n\n  getContainerElement() {\n    return this.el.nativeElement;\n  }\n\n}\n\nToastContainerDirective.ɵfac = function ToastContainerDirective_Factory(t) {\n  return new (t || ToastContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nToastContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ToastContainerDirective,\n  selectors: [[\"\", \"toastContainer\", \"\"]],\n  exportAs: [\"toastContainer\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[toastContainer]',\n      exportAs: 'toastContainer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass ToastContainerModule {}\n\nToastContainerModule.ɵfac = function ToastContainerModule_Factory(t) {\n  return new (t || ToastContainerModule)();\n};\n\nToastContainerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastContainerModule\n});\nToastContainerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastContainerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ToastContainerDirective],\n      exports: [ToastContainerDirective]\n    }]\n  }], null, null);\n})();\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\n\n\nclass ComponentPortal {\n  constructor(component, injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n\n\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n\n\n  detach() {\n    const host = this._attachedHost;\n\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n\n\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n\n\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\n\n\nclass BasePortalHost {\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n\n    if (this._disposeFn) {\n      this._disposeFn();\n\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n\n}\n/**\n * Everything a toast needs to launch\n */\n\n\nclass ToastPackage {\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this._onTap = new Subject();\n    this._onAction = new Subject();\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n\n\n  triggerTap() {\n    this._onTap.next();\n\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n\n\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n\n  onAction() {\n    return this._onAction.asObservable();\n  }\n\n}\n\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing',\n  payload: null\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n/**\n * Reference to a toast opened via the Toastr service.\n */\n\nclass ToastRef {\n  constructor(_overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Count of duplicates of this toast */\n\n    this.duplicatesCount = 0;\n    /** Subject for notifying the user that the toast has finished closing. */\n\n    this._afterClosed = new Subject();\n    /** triggered when toast is activated */\n\n    this._activate = new Subject();\n    /** notifies the toast that it should close before the timeout */\n\n    this._manualClose = new Subject();\n    /** notifies the toast that it should reset the timeouts */\n\n    this._resetTimeout = new Subject();\n    /** notifies the toast that it should count a duplicate toast */\n\n    this._countDuplicate = new Subject();\n  }\n\n  manualClose() {\n    this._manualClose.next();\n\n    this._manualClose.complete();\n  }\n\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n\n\n  close() {\n    this._overlayRef.detach();\n\n    this._afterClosed.next();\n\n    this._manualClose.next();\n\n    this._afterClosed.complete();\n\n    this._manualClose.complete();\n\n    this._activate.complete();\n\n    this._resetTimeout.complete();\n\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n\n\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n\n\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n\n\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n\n}\n/** Custom injector type specifically for instantiating components with a toast. */\n\n\nclass ToastInjector {\n  constructor(_toastPackage, _parentInjector) {\n    this._toastPackage = _toastPackage;\n    this._parentInjector = _parentInjector;\n  }\n\n  get(token, notFoundValue, flags) {\n    if (token === ToastPackage) {\n      return this._toastPackage;\n    }\n\n    return this._parentInjector.get(token, notFoundValue, flags);\n  }\n\n}\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\n\n\nclass DomPortalHost extends BasePortalHost {\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n\n\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n\n    let componentRef; // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n\n    componentRef = componentFactory.create(portal.injector); // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n\n      componentRef.destroy();\n    }); // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n\n\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n\n}\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\n\n\nclass OverlayRef {\n  constructor(_portalHost) {\n    this._portalHost = _portalHost;\n  }\n\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n\n\n  detach() {\n    return this._portalHost.detach();\n  }\n\n}\n/** Container inside which all toasts will render. */\n\n\nclass OverlayContainer {\n  constructor(_document) {\n    this._document = _document;\n  }\n\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n\n\n  getContainerElement() {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n\n    return this._containerElement;\n  }\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body\n   * and 'aria-live=\"polite\"'\n   */\n\n\n  _createContainer() {\n    const container = this._document.createElement('div');\n\n    container.classList.add('overlay-container');\n    container.setAttribute('aria-live', 'polite');\n\n    this._document.body.appendChild(container);\n\n    this._containerElement = container;\n  }\n\n}\n\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) {\n  return new (t || OverlayContainer)(i0.ɵɵinject(DOCUMENT));\n};\n\nOverlayContainer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OverlayContainer,\n  factory: OverlayContainer.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayContainer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n\n\nclass Overlay {\n  constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n    this._overlayContainer = _overlayContainer;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._document = _document; // Namespace panes by overlay container\n\n    this._paneElements = new Map();\n  }\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n\n\n  create(positionClass, overlayContainer) {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass = '', overlayContainer) {\n    if (!this._paneElements.get(overlayContainer)) {\n      this._paneElements.set(overlayContainer, {});\n    }\n\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n\n    return this._paneElements.get(overlayContainer)[positionClass];\n  }\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n\n\n  _createPaneElement(positionClass, overlayContainer) {\n    const pane = this._document.createElement('div');\n\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n\n    return pane;\n  }\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n\n\n  _createPortalHost(pane) {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n\n\n  _createOverlayRef(pane) {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n\n}\n\nOverlay.ɵfac = function Overlay_Factory(t) {\n  return new (t || Overlay)(i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(DOCUMENT));\n};\n\nOverlay.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Overlay,\n  factory: Overlay.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Overlay, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: OverlayContainer\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass ToastrService {\n  constructor(token, overlay, _injector, sanitizer, ngZone) {\n    this.overlay = overlay;\n    this._injector = _injector;\n    this.sanitizer = sanitizer;\n    this.ngZone = ngZone;\n    this.currentlyActive = 0;\n    this.toasts = [];\n    this.index = 0;\n    this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n    }\n  }\n  /** show toast */\n\n\n  show(message, title, override = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n\n\n  success(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n\n\n  error(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n\n\n  info(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n\n\n  warning(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n\n\n  clear(toastId) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n\n\n  remove(toastId) {\n    const found = this._findToast(toastId);\n\n    if (!found) {\n      return false;\n    }\n\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Determines if toast message is already shown\n   */\n\n\n  findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n    const {\n      includeTitleDuplicates\n    } = this.toastrConfig;\n\n    for (const toast of this.toasts) {\n      const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n\n      if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n        toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n        return toast;\n      }\n    }\n\n    return null;\n  }\n  /** create a clone of global config and apply individual settings */\n\n\n  applyConfig(override = {}) {\n    return Object.assign(Object.assign({}, this.toastrConfig), override);\n  }\n  /**\n   * Find toast object by id\n   */\n\n\n  _findToast(toastId) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return {\n          index: i,\n          activeToast: this.toasts[i]\n        };\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n\n\n  _preBuildNotification(toastType, message, title, config) {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n\n    return this._buildNotification(toastType, message, title, config);\n  }\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n\n\n  _buildNotification(toastType, message, title, config) {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    } // max opened and auto dismiss = true\n    // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n    // a timeout at all\n\n\n    const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n\n    if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n      return duplicate;\n    }\n\n    this.previousToastMessage = message;\n    let keepInactive = false;\n\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage = message;\n\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins = {\n      toastId: this.index,\n      title: title || '',\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal\n    };\n\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      setTimeout(() => {\n        ins.toastRef.activate();\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n\n}\n\nToastrService.ɵfac = function ToastrService_Factory(t) {\n  return new (t || ToastrService)(i0.ɵɵinject(TOAST_CONFIG), i0.ɵɵinject(Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i0.NgZone));\n};\n\nToastrService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastrService,\n  factory: ToastrService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TOAST_CONFIG]\n      }]\n    }, {\n      type: Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i2.DomSanitizer\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nclass Toast {\n  constructor(toastrService, toastPackage, ngZone) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.ngZone = ngZone;\n    /** width of progress bar */\n\n    this.width = -1;\n    /** a combination of toast type and options.toastClass */\n\n    this.toastClasses = '';\n    /** controls animation */\n\n    this.state = {\n      value: 'inactive',\n      params: {\n        easeTime: this.toastPackage.config.easeTime,\n        easing: 'ease-in'\n      }\n    };\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  /** hides component when waiting to be displayed */\n\n\n  get displayStyle() {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n\n    return;\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n\n\n  activateToast() {\n    this.state = Object.assign(Object.assign({}, this.state), {\n      value: 'active'\n    });\n\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n\n\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = Object.assign(Object.assign({}, this.state), {\n      value: 'active'\n    });\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n\n\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.state = Object.assign(Object.assign({}, this.state), {\n      value: 'removed'\n    });\n    this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n  }\n\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    this.toastPackage.triggerTap();\n\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0; // disable progressBar\n\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state.value === 'removed') {\n      return;\n    }\n\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  outsideTimeout(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n\n  outsideInterval(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n\n  runInsideAngular(func) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n\n}\n\nToast.ɵfac = function Toast_Factory(t) {\n  return new (t || Toast)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nToast.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Toast,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 5,\n  hostBindings: function Toast_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.state);\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n  template: function Toast_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, Toast_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, Toast_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, Toast_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  directives: [i3.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('flyInOut', [state('inactive', style({\n      opacity: 0\n    })), state('active', style({\n      opacity: 1\n    })), state('removed', style({\n      opacity: 0\n    })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n      animations: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])],\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    state: [{\n      type: HostBinding,\n      args: ['@flyInOut']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: Toast\n});\n\nclass ToastrModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n\n}\n\nToastrModule.ɵfac = function ToastrModule_Factory(t) {\n  return new (t || ToastrModule)();\n};\n\nToastrModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastrModule\n});\nToastrModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [Toast],\n      exports: [Toast],\n      entryComponents: [Toast]\n    }]\n  }], null, null);\n})();\n\nclass ToastrComponentlessModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoComponentGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n\n}\n\nToastrComponentlessModule.ɵfac = function ToastrComponentlessModule_Factory(t) {\n  return new (t || ToastrComponentlessModule)();\n};\n\nToastrComponentlessModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastrComponentlessModule\n});\nToastrComponentlessModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrComponentlessModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nclass ToastNoAnimation {\n  constructor(toastrService, toastPackage, appRef) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.appRef = appRef;\n    /** width of progress bar */\n\n    this.width = -1;\n    /** a combination of toast type and options.toastClass */\n\n    this.toastClasses = '';\n    /** controls animation */\n\n    this.state = 'inactive';\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  /** hides component when waiting to be displayed */\n\n\n  get displayStyle() {\n    if (this.state === 'inactive') {\n      return 'none';\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n\n\n  activateToast() {\n    this.state = 'active';\n\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n\n\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = 'active';\n    this.options.timeOut = this.originalTimeout;\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n    this.width = -1;\n\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n\n\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n  }\n\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n\n    this.toastPackage.triggerTap();\n\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0; // disable progressBar\n\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n}\n\nToastNoAnimation.ɵfac = function ToastNoAnimation_Factory(t) {\n  return new (t || ToastNoAnimation)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n};\n\nToastNoAnimation.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToastNoAnimation,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 4,\n  hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n  template: function ToastNoAnimation_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  directives: [i3.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastNoAnimation, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: ToastNoAnimation\n});\n\nclass ToastNoAnimationModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastNoAnimationModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoAnimationsGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n\n}\n\nToastNoAnimationModule.ɵfac = function ToastNoAnimationModule_Factory(t) {\n  return new (t || ToastNoAnimationModule)();\n};\n\nToastNoAnimationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastNoAnimationModule\n});\nToastNoAnimationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastNoAnimationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [ToastNoAnimation],\n      exports: [ToastNoAnimation],\n      entryComponents: [ToastNoAnimation]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };","map":{"version":3,"names":["i0","Directive","NgModule","InjectionToken","Injectable","Inject","SecurityContext","Component","HostBinding","HostListener","trigger","state","style","transition","animate","Subject","i3","DOCUMENT","CommonModule","i2","ToastContainerDirective","constructor","el","getContainerElement","nativeElement","ɵfac","ElementRef","ɵdir","type","args","selector","exportAs","ToastContainerModule","ɵmod","ɵinj","declarations","exports","ComponentPortal","component","injector","attach","host","newestOnTop","_attachedHost","detach","undefined","isAttached","setAttachedHost","BasePortalHost","portal","_attachedPortal","attachComponentPortal","_disposeFn","setDisposeFn","fn","ToastPackage","toastId","config","message","title","toastType","toastRef","_onTap","_onAction","afterClosed","subscribe","complete","triggerTap","next","tapToDismiss","onTap","asObservable","triggerAction","action","onAction","DefaultNoComponentGlobalConfig","maxOpened","autoDismiss","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","includeTitleDuplicates","iconClasses","error","info","success","warning","closeButton","disableTimeOut","timeOut","extendedTimeOut","enableHtml","progressBar","toastClass","positionClass","titleClass","messageClass","easing","easeTime","onActivateTick","progressAnimation","payload","TOAST_CONFIG","ToastRef","_overlayRef","duplicatesCount","_afterClosed","_activate","_manualClose","_resetTimeout","_countDuplicate","manualClose","manualClosed","timeoutReset","countDuplicate","close","isInactive","isStopped","activate","afterActivate","onDuplicate","resetTimeout","ToastInjector","_toastPackage","_parentInjector","get","token","notFoundValue","flags","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","resolveComponentFactory","componentRef","create","attachView","hostView","detachView","destroy","insertBefore","_getComponentRootNode","firstChild","appendChild","rootNodes","OverlayRef","_portalHost","OverlayContainer","_document","ngOnDestroy","_containerElement","parentNode","removeChild","_createContainer","container","createElement","classList","add","setAttribute","body","ɵprov","providedIn","decorators","Overlay","_overlayContainer","_paneElements","Map","overlayContainer","_createOverlayRef","getPaneElement","set","_createPaneElement","pane","id","_createPortalHost","ComponentFactoryResolver","ApplicationRef","ToastrService","overlay","_injector","sanitizer","ngZone","currentlyActive","toasts","index","toastrConfig","Object","assign","default","show","override","_preBuildNotification","applyConfig","clear","toast","remove","found","_findToast","activeToast","splice","length","p","findDuplicate","resetOnDuplicate","hasDuplicateTitle","i","run","_buildNotification","toastComponent","Error","duplicate","previousToastMessage","keepInactive","overlayRef","sanitizedMessage","sanitize","HTML","toastPackage","toastInjector","componentInstance","instance","ins","onShown","onHidden","setTimeout","push","Injector","DomSanitizer","NgZone","Toast","toastrService","width","toastClasses","value","params","options","originalTimeout","sub","activateToast","sub1","sub2","sub3","count","displayStyle","unsubscribe","clearInterval","intervalId","clearTimeout","timeout","outsideTimeout","hideTime","Date","getTime","outsideInterval","updateProgress","now","remaining","tapToast","stickAround","delayedHideToast","func","runOutsideAngular","runInsideAngular","setInterval","ɵcmp","NgIf","opacity","template","animations","preserveWhitespaces","DefaultGlobalConfig","ToastrModule","forRoot","ngModule","providers","provide","useValue","imports","entryComponents","ToastrComponentlessModule","ToastNoAnimation","appRef","tick","DefaultNoAnimationsGlobalConfig","ToastNoAnimationModule"],"sources":["/home/unutu/go/src/github.com/thteam47/admin-portal/node_modules/ngx-toastr/fesm2015/ngx-toastr.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, NgModule, InjectionToken, Injectable, Inject, SecurityContext, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\n\nclass ToastContainerDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    getContainerElement() {\n        return this.el.nativeElement;\n    }\n}\nToastContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nToastContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.2\", type: ToastContainerDirective, selector: \"[toastContainer]\", exportAs: [\"toastContainer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toastContainer]',\n                    exportAs: 'toastContainer',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\nclass ToastContainerModule {\n}\nToastContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerModule, declarations: [ToastContainerDirective], exports: [ToastContainerDirective] });\nToastContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastContainerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ToastContainerDirective],\n                    exports: [ToastContainerDirective],\n                }]\n        }] });\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this._onTap = new Subject();\n        this._onAction = new Subject();\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n    payload: null\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Count of duplicates of this toast */\n        this.duplicatesCount = 0;\n        /** Subject for notifying the user that the toast has finished closing. */\n        this._afterClosed = new Subject();\n        /** triggered when toast is activated */\n        this._activate = new Subject();\n        /** notifies the toast that it should close before the timeout */\n        this._manualClose = new Subject();\n        /** notifies the toast that it should reset the timeouts */\n        this._resetTimeout = new Subject();\n        /** notifies the toast that it should count a duplicate toast */\n        this._countDuplicate = new Subject();\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n/** Custom injector type specifically for instantiating components with a toast. */\nclass ToastInjector {\n    constructor(_toastPackage, _parentInjector) {\n        this._toastPackage = _toastPackage;\n        this._parentInjector = _parentInjector;\n    }\n    get(token, notFoundValue, flags) {\n        if (token === ToastPackage) {\n            return this._toastPackage;\n        }\n        return this._parentInjector.get(token, notFoundValue, flags);\n    }\n}\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n    constructor(_document) {\n        this._document = _document;\n    }\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body\n     * and 'aria-live=\"polite\"'\n     */\n    _createContainer() {\n        const container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        container.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._document = _document;\n        // Namespace panes by overlay container\n        this._paneElements = new Map();\n    }\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n        const pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: Overlay, deps: [{ token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: Overlay, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\nclass ToastrService {\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.currentlyActive = 0;\n        this.toasts = [];\n        this.index = 0;\n        this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n        }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n        // Call every toastRef manualClose function\n        for (const toast of this.toasts) {\n            if (toastId !== undefined) {\n                if (toast.toastId === toastId) {\n                    toast.toastRef.manualClose();\n                    return;\n                }\n            }\n            else {\n                toast.toastRef.manualClose();\n            }\n        }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n        const found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n            const p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n        const { includeTitleDuplicates } = this.toastrConfig;\n        for (const toast of this.toasts) {\n            const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n            if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n        return Object.assign(Object.assign({}, this.toastrConfig), override);\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n        for (let i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n        if (config.onActivateTick) {\n            return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n        }\n        return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n        // a timeout at all\n        const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n        if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n            this.toastrConfig.preventDuplicates &&\n            duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        let keepInactive = false;\n        if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        let sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        const toastRef = new ToastRef(overlayRef);\n        const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        const toastInjector = new ToastInjector(toastPackage, this._injector);\n        const component = new ComponentPortal(config.toastComponent, toastInjector);\n        const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n        toastRef.componentInstance = portal.instance;\n        const ins = {\n            toastId: this.index,\n            title: title || '',\n            message: message || '',\n            toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal,\n        };\n        if (!keepInactive) {\n            this.currentlyActive = this.currentlyActive + 1;\n            setTimeout(() => {\n                ins.toastRef.activate();\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    }\n}\nToastrService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrService, deps: [{ token: TOAST_CONFIG }, { token: Overlay }, { token: i0.Injector }, { token: i2.DomSanitizer }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nToastrService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [TOAST_CONFIG]\n                    }] }, { type: Overlay }, { type: i0.Injector }, { type: i2.DomSanitizer }, { type: i0.NgZone }];\n    } });\n\nclass Toast {\n    constructor(toastrService, toastPackage, ngZone) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = {\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in'\n            }\n        };\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state.value === 'inactive') {\n            return 'none';\n        }\n        return;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.outsideTimeout(() => this.remove(), this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        this.outsideTimeout(() => this.remove(), this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'removed' });\n        this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state.value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    outsideTimeout(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.timeout = setTimeout(() => func(), timeout);\n        }\n    }\n    outsideInterval(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.intervalId = setInterval(() => func(), timeout);\n        }\n    }\n    runInsideAngular(func) {\n        if (this.ngZone) {\n            this.ngZone.run(() => func());\n        }\n        else {\n            func();\n        }\n    }\n}\nToast.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: Toast, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nToast.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.2\", type: Toast, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"@flyInOut\": \"this.state\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('flyInOut', [\n            state('inactive', style({ opacity: 0 })),\n            state('active', style({ opacity: 1 })),\n            state('removed', style({ opacity: 0 })),\n            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: Toast, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                    animations: [\n                        trigger('flyInOut', [\n                            state('inactive', style({ opacity: 0 })),\n                            state('active', style({ opacity: 1 })),\n                            state('removed', style({ opacity: 0 })),\n                            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n                        ])\n                    ],\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.NgZone }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], state: [{\n                type: HostBinding,\n                args: ['@flyInOut']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: Toast });\nclass ToastrModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastrModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrModule, declarations: [Toast], imports: [CommonModule], exports: [Toast] });\nToastrModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [Toast],\n                    exports: [Toast],\n                    entryComponents: [Toast],\n                }]\n        }] });\nclass ToastrComponentlessModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrComponentlessModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrComponentlessModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastrComponentlessModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrComponentlessModule, imports: [CommonModule] });\nToastrComponentlessModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrComponentlessModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastrComponentlessModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                }]\n        }] });\n\nclass ToastNoAnimation {\n    constructor(toastrService, toastPackage, appRef) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = 'inactive';\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state === 'inactive') {\n            return 'none';\n        }\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = 'active';\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.timeout = setTimeout(() => {\n                this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = 'active';\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = 'removed';\n        this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n        if (this.state === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n}\nToastNoAnimation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimation, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Component });\nToastNoAnimation.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.2\", type: ToastNoAnimation, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimation, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.ApplicationRef }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: ToastNoAnimation });\nclass ToastNoAnimationModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastNoAnimationModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastNoAnimationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastNoAnimationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimationModule, declarations: [ToastNoAnimation], imports: [CommonModule], exports: [ToastNoAnimation] });\nToastNoAnimationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: ToastNoAnimationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [ToastNoAnimation],\n                    exports: [ToastNoAnimation],\n                    entryComponents: [ToastNoAnimation],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
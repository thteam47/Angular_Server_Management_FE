{"ast":null,"code":"/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\nimport { __awaiter, __extends, __generator } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ExportMenu } from \"./ExportMenu\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { Sprite } from \"../Sprite\";\nimport { Modal } from \"../elements/Modal\";\nimport { List } from \"../utils/List\";\nimport { Dictionary } from \"../utils/Dictionary\";\nimport { DateFormatter } from \"../formatters/DateFormatter\";\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { color } from \"../utils/Color\";\nimport { registry } from \"../Registry\";\nimport { options } from \"../Options\";\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\nimport * as $browser from \"../utils/Browser\";\nimport * as $object from \"../utils/Object\";\nimport * as $net from \"../utils/Net\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $log from \"../utils/Log\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $array from \"../utils/Array\";\nimport * as $math from \"../utils/Math\";\nimport * as $strings from \"../utils/Strings\"; // This is used to cache the pdfmake loading\n\nvar pdfmakePromise;\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\n\nfunction _pdfmake() {\n  return __awaiter(this, void 0, void 0, function () {\n    var a, pdfmake, vfs_fonts, global;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([import(\n          /* webpackChunkName: \"pdfmake\" */\n          \"pdfmake/build/pdfmake.js\"), import(\n          /* webpackChunkName: \"pdfmake\" */\n          \"../../pdfmake/vfs_fonts\")])];\n\n        case 1:\n          a = _a.sent();\n          pdfmake = a[0];\n          vfs_fonts = a[1];\n          global = window;\n          global.pdfMake = global.pdfMake || {};\n          global.pdfMake.vfs = vfs_fonts.default;\n          pdfmake.vfs = vfs_fonts.default;\n          return [2\n          /*return*/\n          , pdfmake];\n      }\n    });\n  });\n} // TODO better parsing\n\n\nvar fontFamilySrcRegexp = /src: ([^;]+);/; // TODO better checks\n\nfunction supportsBlobUri() {\n  return window.navigator.msSaveOrOpenBlob != null;\n} // TODO move into utils or something ?\n\n\nfunction blobToDataUri(blob) {\n  return new Promise(function (resolve, reject) {\n    // TODO handle abort ?\n    var f = new FileReader();\n\n    f.onload = function (e) {\n      resolve(f.result);\n    };\n\n    f.onerror = function (e) {\n      reject(e);\n    };\n\n    f.readAsDataURL(blob);\n  });\n}\n\nfunction getCssRules(s) {\n  return __awaiter(this, void 0, void 0, function () {\n    var sheet, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          sheet = s.sheet;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 2,, 4]);\n\n          return [2\n          /*return*/\n          , sheet.cssRules];\n\n        case 2:\n          e_1 = _a.sent();\n          return [4\n          /*yield*/\n          , new Promise(function (success, error) {\n            s.addEventListener(\"load\", function () {\n              success(sheet.cssRules);\n            }, true);\n            s.addEventListener(\"error\", function (e) {\n              error(e);\n            }, true);\n            setTimeout(function () {\n              error(new Error(\"Timeout while waiting for <style> to load\"));\n            }, 10000);\n          })];\n\n        case 3:\n          // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This loads a stylesheet by URL and then calls the function with it\n// TODO this should be moved into utils or something\n\n\nfunction loadStylesheet(doc, url, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response, e_2, s, rules;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , $net.load(url)];\n\n        case 1:\n          response = _a.sent();\n          return [3\n          /*break*/\n          , 3];\n\n        case 2:\n          e_2 = _a.sent();\n          console.error(\"Failed to load stylesheet\", url, e_2);\n          return [2\n          /*return*/\n          ];\n\n        case 3:\n          s = doc.createElement(\"style\");\n          s.textContent = response.response;\n\n          if (options.nonce != \"\") {\n            s.setAttribute(\"nonce\", options.nonce);\n          }\n\n          doc.head.appendChild(s);\n          _a.label = 4;\n\n        case 4:\n          _a.trys.push([4,, 7, 8]);\n\n          return [4\n          /*yield*/\n          , getCssRules(s)];\n\n        case 5:\n          rules = _a.sent();\n          return [4\n          /*yield*/\n          , eachStylesheet(doc, url, rules, f)];\n\n        case 6:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          doc.head.removeChild(s);\n          return [7\n          /*endfinally*/\n          ];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This calls a function for each CSSRule inside of a CSSStyleSheet.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\n\n\nfunction eachStylesheet(doc, topUrl, rules, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var promises, length, i, rule, url;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          promises = [];\n          length = rules.length;\n\n          for (i = 0; i < length; i++) {\n            rule = rules[i];\n\n            if (rule.type === CSSRule.IMPORT_RULE) {\n              url = rule.href;\n\n              if (url) {\n                url = $utils.joinUrl(topUrl, url);\n                promises.push(loadStylesheet(doc, url, f));\n              }\n            } else {\n              f(topUrl, rule);\n            }\n          }\n\n          if (!promises.length) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , Promise.all(promises)];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // This calls a function for each CSSRule for all of the stylesheets in the page.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\n\n\nfunction eachStylesheets(f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var iframe, doc_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          iframe = document.createElement(\"iframe\"); // This causes it to use the same origin policy as the parent page\n\n          iframe.src = \"about:blank\"; // This tries to make it more accessible for screen readers\n\n          iframe.setAttribute(\"title\", \"\");\n          document.head.appendChild(iframe);\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1,, 3, 4]);\n\n          doc_1 = iframe.contentDocument; // TODO use $dom.getRoot instead of document ?\n\n          return [4\n          /*yield*/\n          , Promise.all($array.map(document.styleSheets, function (sheet) {\n            var url = sheet.href;\n\n            if (url == null) {\n              return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\n            } else {\n              url = $utils.joinUrl(location.href, url);\n              return loadStylesheet(doc_1, url, f);\n            }\n          }))];\n\n        case 2:\n          // TODO use $dom.getRoot instead of document ?\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          document.head.removeChild(iframe);\n          return [7\n          /*endfinally*/\n          ];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\n\n\nvar Export =\n/** @class */\nfunction (_super) {\n  __extends(Export, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Export(container) {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n\n\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds options for each format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._formatOptions = new Dictionary();\n    /**\r\n     * Extra [[Sprite]] elements to include in exports.\r\n     */\n\n    _this._extraSprites = [];\n    /**\r\n     * A list of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     */\n\n    _this._validateSprites = [];\n    /**\r\n     * Holds an array of data field names. If set, exported data fields will try\r\n     * to maintain this order.\r\n     *\r\n     * If not set (default), the export will try to maintain the same order as\r\n     * in source data, or as in `dataFields` (if set).\r\n     *\r\n     * @since 4.9.7\r\n     */\n\n    _this.dataFieldsOrder = [];\n    /**\r\n     * Indicates whether data fields were generated dynamically (`true`) or\r\n     * if they were pre-set by the user (`false`).\r\n     */\n\n    _this._dynamicDataFields = true;\n    /**\r\n     * Holds a list of objects that were temporarily removed from the DOM while\r\n     * exporting. Those most probably are tainted images, or foreign objects that\r\n     * would otherwise prevent SVG to be converted to canvas.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._removedObjects = new List();\n    /**\r\n     * Holds references to the objects that were temporarily hidden when export\r\n     * started, so that we can reveal them back when export ends.\r\n     */\n\n    _this._hiddenObjects = [];\n    /**\r\n     * Indicates if non-exportable objects are now hidden;\r\n     */\n\n    _this._objectsAlreadyHidden = false;\n    /**\r\n     * Exported files will be prefixed with whatever it is set here.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this._filePrefix = \"amCharts\";\n    /**\r\n     * If you are using web fonts (such as Google Fonts), your chart might be\r\n     * using them as well.\r\n     *\r\n     * Normally, exporting to image will require to download these fonts so the\r\n     * are carried over to exported image.\r\n     *\r\n     * This setting can be used to disable or enable this functionality.\r\n     *\r\n     * @default true\r\n     */\n\n    _this.useWebFonts = true;\n    /**\r\n     * Many modern displays have use more actual pixels per displayed pixel. This\r\n     * results in sharper images on screen. Unfortunately, when exported to a\r\n     * bitmap image of the sam width/height size it will lose those extra pixels,\r\n     * resulting in somewhat blurry image.\r\n     *\r\n     * This is why we are going to export images larger than they are, so that we\r\n     * don't lose any details.\r\n     *\r\n     * If you'd rather export images without change in size, set this to `false`.\r\n     *\r\n     * @default true\r\n     */\n\n    _this.useRetina = true;\n    /**\r\n     * By default Export will try to use built-in method for transforming chart\r\n     * into an image for download, then fallback to external library (canvg) for\r\n     * conversion if failed.\r\n     *\r\n     * Setting this to `false` will force use of external library for all export\r\n     * operations.\r\n     *\r\n     * It might be useful to turn off simplified export if you are using strict\r\n     * content security policies, that disallow images with blobs as their\r\n     * source.\r\n     *\r\n     * @default true\r\n     * @since 4.2.5\r\n     */\n\n    _this.useSimplifiedExport = true;\n    /**\r\n     * If export operation takes longer than milliseconds in this second, we will\r\n     * show a modal saying export operation took longer than expected.\r\n     */\n\n    _this.timeoutDelay = 2000;\n    _this._exportRunning = false;\n    /**\r\n     * Indicator used by [[Component]].\r\n     *\r\n     * @ignore\r\n     */\n\n    _this._prevHasData = false;\n    _this._container = container;\n    _this.className = \"Export\"; // Set default options\n\n    _this._formatOptions.setKey(\"png\", {});\n\n    _this._formatOptions.setKey(\"jpg\", {\n      quality: 0.8\n    });\n\n    _this._formatOptions.setKey(\"gif\", {});\n\n    _this._formatOptions.setKey(\"svg\", {});\n\n    _this._formatOptions.setKey(\"pdf\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      align: \"left\",\n      addURL: true,\n      addColumnNames: true\n    });\n\n    _this._formatOptions.setKey(\"json\", {\n      indent: 2,\n      useLocale: true\n    });\n\n    _this._formatOptions.setKey(\"csv\", {\n      addColumnNames: true,\n      emptyAs: \"\",\n      addBOM: true\n    });\n\n    _this._formatOptions.setKey(\"xlsx\", {\n      addColumnNames: true,\n      useLocale: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"html\", {\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"pdfdata\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      addURL: true,\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n\n    _this._formatOptions.setKey(\"print\", {\n      delay: 500,\n      printMethod: \"iframe\"\n    }); // Add options adapter\n\n\n    _this.adapter.add(\"options\", function (arg) {\n      var formatOptions = _this._formatOptions.getKey(arg.type);\n\n      if (arg.options) {\n        arg.options = $object.merge(formatOptions, arg.options);\n      } else {\n        arg.options = formatOptions;\n      }\n\n      return arg;\n    });\n\n    _this.applyTheme();\n\n    _this.dispatchImmediately(\"inited\");\n\n    return _this;\n  }\n\n  Object.defineProperty(Export.prototype, \"menu\", {\n    /**\r\n     * @return ExportMenu instance\r\n     */\n    get: function () {\n      return this._menu;\n    },\n\n    /**\r\n     * An instance of [[ExportMenu]].\r\n     *\r\n     * To add an export menu to a chart, set this to a new instance of\r\n     * [[ExportMenu]].\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     \"menu\": {}\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @param menu  ExportMenu instance\r\n     */\n    set: function (menu) {\n      var _this = this;\n\n      if (this._menu) {\n        this.removeDispose(this._menu);\n      }\n\n      this._menu = menu; // Set container and language\n\n      this._menu.container = this.container;\n      this._menu.language = this._language; // Add adapter to check for browser support\n\n      this._menu.adapter.add(\"branch\", function (arg) {\n        arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\n        return arg;\n      }); // Add click events\n\n\n      this._menu.events.on(\"hit\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n\n        _this.menu.close();\n      });\n\n      this._menu.events.on(\"enter\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n\n        _this.menu.close();\n      });\n\n      this._menu.events.on(\"over\", function (ev) {\n        _this._disablePointers();\n      });\n\n      this._menu.events.on(\"out\", function (ev) {\n        setTimeout(function () {\n          _this._releasePointers();\n        }, 10);\n      }); // Dispatch event\n\n\n      this.dispatchImmediately(\"menucreated\"); // Prefix with Sprite's class name\n\n      this._menu.adapter.add(\"classPrefix\", function (obj) {\n        obj.classPrefix = options.classNamePrefix + obj.classPrefix;\n        return obj;\n      }); // Add menu to disposers so that it's destroyed when Export is disposed\n\n\n      this._disposers.push(this._menu);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if this specific menu item type is supported by current system.\r\n   *\r\n   * @param type  Menu item type\r\n   * @return `false` if not supported\r\n   */\n\n  Export.prototype.typeSupported = function (type) {\n    var supported = true;\n    var options = this.getFormatOptions(type);\n\n    if ($type.hasValue(options) && options.disabled) {\n      supported = false;\n    } else if (type === \"pdf\") {//supported = this.downloadSupport();\n    } else if (type === \"xlsx\") {\n      //supported = (this.downloadSupport() && this._hasData()) ? true : false;\n      supported = this._hasData() ? true : false;\n    } else if (type == \"print\" && !window.print) {\n      supported = false;\n    } else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\n      supported = false;\n    }\n\n    return this.adapter.apply(\"supported\", {\n      supported: supported,\n      type: type\n    }).supported;\n  };\n  /**\r\n   * Checks if data is available.\r\n   *\r\n   * @return Has data?\r\n   */\n\n\n  Export.prototype._hasData = function () {\n    return this.data && this.data.length;\n  };\n  /**\r\n   * Get function to handle export for particular format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype._getFunction = function (type) {\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n      case \"jpg\":\n        return this.getImage;\n\n      case \"svg\":\n        return this.getSVG;\n\n      case \"pdf\":\n      case \"pdfdata\":\n        return this.getPDF;\n\n      case \"xlsx\":\n        return this.getExcel;\n\n      case \"csv\":\n        return this.getCSV;\n\n      case \"json\":\n        return this.getJSON;\n\n      case \"html\":\n        return this.getHTML;\n\n      case \"print\":\n        return this.getPrint;\n\n      default:\n        return this.unsupported;\n    }\n  };\n  /**\r\n   * Initiates export procedure.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return `true` if export was successful\r\n   * @async\r\n   */\n\n\n  Export.prototype.export = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event_1, func, data, event_2, event_3;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check if it's a custom item, and do nothing or execute custom callback\n            if (type == \"custom\") {\n              this.handleCustom(options);\n              return [2\n              /*return*/\n              , true];\n            } // Set export running flag\n\n\n            this._exportRunning = true; // Dispatch event\n\n            if (this.events.isEnabled(\"exportstarted\")) {\n              event_1 = {\n                \"type\": \"exportstarted\",\n                \"target\": this,\n                \"format\": type,\n                \"options\": options\n              };\n              this.events.dispatchImmediately(\"exportstarted\", event_1);\n            } // Schedule a preloader\n\n\n            this.showPreloader(); // Schedule a timeout\n\n            if (this.timeoutDelay) {\n              this.hideTimeout();\n              this._timeoutTimeout = this.setTimeout(function () {\n                // Dispatch event\n                if (_this.events.isEnabled(\"exporttimedout\")) {\n                  var event_4 = {\n                    \"type\": \"exporttimedout\",\n                    \"target\": _this,\n                    \"format\": type,\n                    \"options\": options\n                  };\n\n                  _this.events.dispatchImmediately(\"exporttimedout\", event_4);\n                } // Show modal\n\n\n                _this.showTimeout();\n              }, this.timeoutDelay);\n            } // Hide items that should not be exported\n\n\n            this.hideNonExportableSprites();\n            func = this._getFunction(type); // Give chance for plugins to override both function and options\n\n            options = this.adapter.apply(\"options\", {\n              options: options,\n              type: type\n            }).options;\n            func = this.adapter.apply(\"exportFunction\", {\n              func: func,\n              type: type,\n              options: options\n            }).func;\n            return [4\n            /*yield*/\n            , func.call(this, type, options)];\n\n          case 1:\n            data = _a.sent(); // Release pointers\n\n            this._exportRunning = false;\n\n            this._releasePointers(); // Restore temporarily hidden elements\n\n\n            this.restoreNonExportableSprites();\n\n            if (data) {\n              // Dispatch event\n              if (this.events.isEnabled(\"exportfinished\")) {\n                event_2 = {\n                  \"type\": \"exportfinished\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"exportfinished\", event_2);\n              } // Hide preloader and timeout modals\n\n\n              this.hidePreloader();\n              this.hideTimeout();\n\n              if (this.menu) {\n                this.menu.close();\n              } // Download or print\n\n\n              if (type === \"print\") {\n                return [2\n                /*return*/\n                , this.print(data, options, this.adapter.apply(\"title\", {\n                  title: this.title,\n                  options: options\n                }).title)];\n              } else {\n                if (type == \"pdfdata\") {\n                  return [2\n                  /*return*/\n                  , this.download(data, this.filePrefix + \".pdf\")];\n                }\n\n                return [2\n                /*return*/\n                , this.download(data, this.filePrefix + \".\" + type, options && options.addBOM)];\n              }\n            } else {\n              // Throw exception?\n              // @todo\n              // Dispatch event\n              if (this.events.isEnabled(\"error\")) {\n                event_3 = {\n                  \"type\": \"error\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"error\", event_3);\n              }\n\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * A function that should handle unsupported export types.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.unsupported = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // TODO should this return `undefined`?\n        return [2\n        /*return*/\n        , \"\"];\n      });\n    });\n  };\n  /**\r\n   * Handles click on a \"custom\" menu item.\r\n   *\r\n   * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param options  Options\r\n   */\n\n\n  Export.prototype.handleCustom = function (options) {\n    if ($type.hasValue(options) && $type.hasValue(options.callback)) {\n      options.callback.call(options.callbackTarget || this, options);\n    }\n  };\n  /**\r\n   * Requests a Print of the chart.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getPrint = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.getImage(\"png\", options)];\n      });\n    });\n  };\n  /**\r\n   * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return String which can be embedded directly into a <style> element.\r\n   * @async\r\n   */\n\n\n  Export.prototype.getFontFamilies = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var DOMURL, blobs, promises, a;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            DOMURL = this.getDOMURL();\n            blobs = [];\n            promises = [];\n            return [4\n            /*yield*/\n            , eachStylesheets(function (topUrl, rule) {\n              if (rule.type === CSSRule.FONT_FACE_RULE) {\n                var cssText_1 = rule.cssText; // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\n\n                var src = fontFamilySrcRegexp.exec(cssText_1);\n\n                if (src !== null) {\n                  // TODO make this faster (don't create Promises for non-url stuff)\n                  var urls = src[1].split(/ *, */).map(function (url) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var a, after, fullUrl, response, url_1, e_3;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\n                            if (!(a === null)) return [3\n                            /*break*/\n                            , 1];\n                            return [2\n                            /*return*/\n                            , url];\n\n                          case 1:\n                            after = a[2];\n                            fullUrl = $utils.joinUrl(topUrl, a[1]);\n\n                            if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\n                              return [2\n                              /*return*/\n                              , null];\n                            }\n\n                            _a.label = 2;\n\n                          case 2:\n                            _a.trys.push([2, 7,, 8]);\n\n                            return [4\n                            /*yield*/\n                            , $net.load(fullUrl, undefined, {\n                              responseType: \"blob\"\n                            })];\n\n                          case 3:\n                            response = _a.sent();\n                            if (!supportsBlobUri()) return [3\n                            /*break*/\n                            , 4];\n                            url_1 = DOMURL.createObjectURL(response.blob);\n                            blobs.push(url_1);\n                            return [3\n                            /*break*/\n                            , 6];\n\n                          case 4:\n                            return [4\n                            /*yield*/\n                            , blobToDataUri(response.blob)];\n\n                          case 5:\n                            url_1 = _a.sent();\n                            _a.label = 6;\n\n                          case 6:\n                            // TODO should it should escape the URI ?\n                            return [2\n                            /*return*/\n                            , \"url(\\\"\" + url_1 + \"\\\")\" + after];\n\n                          case 7:\n                            e_3 = _a.sent();\n                            console.error(\"Failed to load font\", fullUrl, e_3);\n                            return [2\n                            /*return*/\n                            , null];\n\n                          case 8:\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                  promises.push(Promise.all(urls).then(function (a) {\n                    a = a.filter(function (x) {\n                      return x != null;\n                    });\n\n                    if (a.length === 0) {\n                      return \"\";\n                    } else {\n                      return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\n                    }\n                  }));\n                }\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 2:\n            a = _a.sent();\n            return [2\n            /*return*/\n            , {\n              blobs: blobs,\n              cssText: a.filter(function (x) {\n                return !!x;\n              }).join(\"\\n\")\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Produces image output from the element.\r\n   *\r\n   * Converts to a `Canvas` first, then produces an image to download.\r\n   *\r\n   * This is an asynchronous function. Rather than returning a result, it\r\n   * returns a Promise.\r\n   *\r\n   * You can use `await` notion from other async functions, or `then()`\r\n   * anywhere else.\r\n   *\r\n   * ```TypeScript\r\n   * let img;\r\n   *\r\n   * // Async\r\n   * img = await chart.exporting.getImage( \"png\" );\r\n   *\r\n   * // Sync\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   * ```JavaScript\r\n   * var img;\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   *\r\n   * @param  type           Image format\r\n   * @param  options        Options\r\n   * @param  includeExtras  Should extra sprites be included if set?\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.getImage = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri, e_4, data, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            } // Wait for required elements to be ready before proceeding\n\n\n            return [4\n            /*yield*/\n            , this.awaitValidSprites()];\n\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.simplifiedImageExport()];\n\n          case 2:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 10];\n            canvas = void 0;\n            _a.label = 3;\n\n          case 3:\n            _a.trys.push([3, 7,, 9]);\n\n            return [4\n            /*yield*/\n            , this.getCanvas(options)];\n\n          case 4:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.addExtras(canvas, options)];\n\n          case 5:\n            canvas = _a.sent();\n            _a.label = 6;\n\n          case 6:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality); // Get rid of the canvas\n\n            this.disposeCanvas(canvas);\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n\n          case 7:\n            e_4 = _a.sent();\n            console.error(e_4.message + \"\\n\" + e_4.stack);\n            $log.warn(\"Simple export failed, falling back to advanced export\");\n\n            if (canvas) {\n              this.disposeCanvas(canvas);\n            }\n\n            return [4\n            /*yield*/\n            , this.getImageAdvanced(type, options, includeExtras)];\n\n          case 8:\n            data = _a.sent();\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , data];\n\n          case 9:\n            return [3\n            /*break*/\n            , 12];\n\n          case 10:\n            return [4\n            /*yield*/\n            , this.getImageAdvanced(type, options, includeExtras)];\n\n          case 11:\n            data = _a.sent();\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , data];\n\n          case 12:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds extra elements to the canvas.\r\n   *\r\n   * @param  canvas   Original canvas\r\n   * @param  options  Options\r\n   */\n\n\n  Export.prototype.addExtras = function (canvas, options, advanced) {\n    return __awaiter(this, void 0, void 0, function () {\n      var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.extraSprites.length) return [3\n            /*break*/\n            , 2];\n            middleLeft_1 = 0;\n            middleTop_1 = 0;\n            middleWidth_1 = canvas.width;\n            middleHeight_1 = canvas.height;\n            extraRight_1 = 0;\n            extraBottom_1 = 0;\n            return [4\n            /*yield*/\n            , Promise.all($array.map(this.extraSprites, function (extraSprite) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var extra, extraCanvas, extraWidth, extraHeight;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (extraSprite instanceof Sprite) {\n                        extra = {\n                          sprite: extraSprite,\n                          position: \"bottom\"\n                        };\n                      } else {\n                        extra = extraSprite;\n                      } // Set defaults\n\n\n                      extra.position = extra.position || \"bottom\";\n                      extra.marginTop = extra.marginTop || 0;\n                      extra.marginRight = extra.marginRight || 0;\n                      extra.marginBottom = extra.marginBottom || 0;\n                      extra.marginLeft = extra.marginLeft || 0;\n                      if (!advanced) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , extra.sprite.exporting.getCanvasAdvanced(options)];\n\n                    case 1:\n                      extraCanvas = _a.sent();\n                      return [3\n                      /*break*/\n                      , 4];\n\n                    case 2:\n                      return [4\n                      /*yield*/\n                      , extra.sprite.exporting.getCanvas(options)];\n\n                    case 3:\n                      extraCanvas = _a.sent();\n                      _a.label = 4;\n\n                    case 4:\n                      extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n                      extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n\n                      if (extra.position == \"top\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        middleTop_1 += extraHeight;\n                      } else if (extra.position == \"right\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        extraRight_1 += extraWidth;\n                      } else if (extra.position == \"left\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        middleLeft_1 += extraWidth;\n                      } else if (extra.position === \"bottom\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        extraBottom_1 += extraHeight;\n                      }\n\n                      return [2\n                      /*return*/\n                      , {\n                        canvas: extraCanvas,\n                        position: extra.position,\n                        left: extra.marginLeft,\n                        top: extra.marginTop,\n                        width: extraWidth,\n                        height: extraHeight\n                      }];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            extras = _a.sent();\n            newCanvas = this.getDisposableCanvas();\n            newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\n            newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\n            ctx_1 = newCanvas.getContext(\"2d\");\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n\n            if (background) {\n              ctx_1.fillStyle = background.toString();\n              ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\n            }\n\n            left_1 = middleLeft_1;\n            top_1 = middleTop_1;\n            right_1 = left_1 + middleWidth_1;\n            bottom_1 = top_1 + middleHeight_1; // Radiates outwards from center\n\n            $array.each(extras, function (extra) {\n              if (extra.position == \"top\") {\n                top_1 -= extra.height;\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\n              } else if (extra.position == \"right\") {\n                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\n                right_1 += extra.width;\n              } else if (extra.position == \"left\") {\n                left_1 -= extra.width;\n                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\n              } else if (extra.position === \"bottom\") {\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\n                bottom_1 += extra.height;\n              }\n\n              _this.disposeCanvas(extra.canvas);\n            });\n            ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\n            return [2\n            /*return*/\n            , newCanvas];\n\n          case 2:\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]].\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n\n\n  Export.prototype.getCanvas = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            DOMURL = this.getDOMURL();\n            url = null;\n            blobs = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 4, 5]);\n\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options); // Create canvas and its 2D context\n\n            canvas = this.getDisposableCanvas(); // Set canvas width/height\n\n            canvas.style.width = width * scale + 'px';\n            canvas.style.height = height * scale + 'px';\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n            ctx = canvas.getContext(\"2d\"); // if (pixelRatio != 1) {\n            // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            // }\n            // Add background if necessary\n\n            if (background) {\n              ctx.fillStyle = background.toString();\n              ctx.fillRect(0, 0, width * scale, height * scale);\n            }\n\n            promises = [];\n\n            if (this.useWebFonts) {\n              // TODO what if one of the other things errors before it's been able to set `blobs` ?\n              promises.push(this.getFontFamilies().then(function (fonts) {\n                blobs = fonts.blobs;\n                return fonts.cssText;\n              }));\n            }\n\n            promises.push(this.imagesToDataURI(this.sprite.dom, options));\n            promises.push(this.prepForeignObjects(this.sprite.dom, options));\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 2:\n            a = _a.sent();\n            data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            svg = new Blob([data], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            return [4\n            /*yield*/\n            , this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\n\n          case 3:\n            img = _a.sent(); // Draw image on canvas\n\n            ctx.drawImage(img, 0, 0);\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            if (url !== null) {\n              DOMURL.revokeObjectURL(url);\n            }\n\n            if (blobs !== null) {\n              $array.each(blobs, function (url) {\n                DOMURL.revokeObjectURL(url);\n              });\n            } // Restore replaced tainted images in DOM\n\n\n            this.restoreRemovedObjects();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]] using canvg.\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n\n\n  Export.prototype.getCanvasAdvanced = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            } // Convert external images to data uris\n\n\n            return [4\n            /*yield*/\n            , this.imagesToDataURI(this.sprite.dom, options)];\n\n          case 1:\n            // Convert external images to data uris\n            _a.sent();\n\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            return [4\n            /*yield*/\n            , this.canvg];\n\n          case 2:\n            canvg = _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\n            canvas = this.getDisposableCanvas(); // Set canvas width/height\n\n            canvas.style.width = width * pixelRatio * scale + 'px';\n            canvas.style.height = height * pixelRatio * scale + 'px';\n            canvas.width = width * pixelRatio * scale;\n            canvas.height = height * pixelRatio * scale;\n            config = {\n              //ignoreDimensions: true,\n              useCORS: true\n            };\n\n            if (pixelRatio != 1) {\n              config.ignoreDimensions = true;\n              config.scaleWidth = width * pixelRatio * scale;\n              config.scaleHeight = height * pixelRatio * scale;\n            }\n\n            return [4\n            /*yield*/\n            , canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n   * export an image using its functions.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Image format\r\n   * @param options  Options\r\n   * @return Data uri\r\n   */\n\n\n  Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n\n            return [4\n            /*yield*/\n            , this.getCanvasAdvanced(options)];\n\n          case 1:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.addExtras(canvas, options, true)];\n\n          case 2:\n            canvas = _a.sent();\n            _a.label = 3;\n\n          case 3:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality); // Get rid of the canvas\n\n            this.disposeCanvas(canvas);\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates a `<canvas>` element and returns it.\r\n   *\r\n   * @return Canvas element\r\n   */\n\n\n  Export.prototype.getDisposableCanvas = function () {\n    var canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"-10000px\";\n    document.body.appendChild(canvas);\n    return canvas;\n  };\n  /**\r\n   * Removes canvas.\r\n   *\r\n   * @param canvas  Canvas element\r\n   */\n\n\n  Export.prototype.disposeCanvas = function (canvas) {\n    document.body.removeChild(canvas);\n  };\n  /**\r\n   * Returns pixel ratio for retina displays.\r\n   *\r\n   * @return Pixel ratio\r\n   */\n\n\n  Export.prototype.getPixelRatio = function (options) {\n    // const scale = options && options.scale ? options.scale : 1;\n    // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\n    return this.useRetina ? $utils.getPixelRatio() : 1;\n  };\n  /**\r\n   * Calculates adjusted scale if image does not fit or is larger than min/max\r\n   * settings.\r\n   *\r\n   * @param   width    Width of the source image\r\n   * @param   height   Height of the source image\r\n   * @param   scale    Current scale\r\n   * @param   options  Options\r\n   * @return           Adjusted scale\r\n   */\n\n\n  Export.prototype.getAdjustedScale = function (width, height, scale, options) {\n    if (!options) {\n      return scale;\n    }\n\n    var adjWidth = width * scale;\n    var adjHeight = width * scale; // Check max restrictions\n\n    var widthScale;\n    var heightScale;\n\n    if (options.maxWidth && adjWidth > options.maxWidth) {\n      widthScale = options.maxWidth / width;\n    }\n\n    if (options.maxHeight && adjHeight > options.maxHeight) {\n      heightScale = options.maxHeight / height;\n    }\n\n    if (widthScale || heightScale) {\n      return $math.min(widthScale, heightScale);\n    } // Check min restrictions\n\n\n    if (options.minWidth && adjWidth < options.minWidth) {\n      widthScale = options.minWidth / width;\n    }\n\n    if (options.minHeight && adjHeight < options.minHeight) {\n      heightScale = options.minHeight / height;\n    }\n\n    if (widthScale || heightScale) {\n      return $math.max(widthScale, heightScale);\n    }\n\n    return scale;\n  };\n  /**\r\n   * Converts all `<image>` tags in SVG to use data uris instead of external\r\n   * URLs\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.imagesToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var images, promises, count, i, image, href;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            images = el.querySelectorAll(\"image\");\n            if (!images.length) return [3\n            /*break*/\n            , 2];\n            promises = []; // There are images, process each of them\n\n            for (count = images.length, i = 0; i < count; i++) {\n              image = images[i];\n              href = image.getAttributeNS(Export.XLINK, \"href\"); // no href?\n\n              if (!href) {\n                continue;\n              }\n\n              if (href.indexOf(\"data:image\") !== -1) {// Ignore image if it's already in Data URI format\n              } else {\n                // SVG or bitmap image?\n                if (href.indexOf(\".svg\") !== -1) {\n                  promises.push(this.svgToDataURI(image, options));\n                } else {\n                  promises.push(this.imageToDataURI(image, options));\n                }\n              }\n            }\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * `foreignObject` elements cannot be exported. This function hides them\r\n   * temprarily. In the future it might try to convert them to SVG to make them\r\n   * exportable.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.prepForeignObjects = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var objects, count, i;\n      return __generator(this, function (_a) {\n        objects = el.querySelectorAll(\"foreignObject\");\n\n        if (objects.length) {\n          // There are foreign objects, process each of them\n          for (count = objects.length, i = 0; i < count; i++) {\n            this.temporarilyRemoveObject(objects[i]);\n          }\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\r\n   * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n   * external file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG element\r\n   * @param options  Options\r\n   */\n\n\n  Export.prototype.imageToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var img, canvas, uri, e_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\n\n          case 1:\n            // Create image\n            img = _a.sent();\n            canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height; // Draw new image on it via `toDataURL`\n\n            canvas.getContext(\"2d\").drawImage(img, 0, 0); // Replace image `href` with data uri\n            // If we got to this point it means image has loaded, however we might\n            // still get an error with `toDataURL()`\n\n            try {\n              uri = canvas.toDataURL();\n              el.setAttribute(\"href\", uri);\n              return [2\n              /*return*/\n              , uri];\n            } catch (e) {\n              // Give up and temporarily remove the element href temporarily\n              if (options.keepTainted !== false) {\n                /*this._removedObjects.push({\r\n                    \"element\": el,\r\n                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                });\r\n                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n                this.temporarilyRemoveObject(el);\n              }\n\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_5 = _a.sent(); // Give up and temporarily remove the element's href\n\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n   * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el        An SVG element\r\n   * @param options   Options\r\n   */\n\n\n  Export.prototype.svgToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var href, data, charset, uri, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            href = el.getAttributeNS(Export.XLINK, \"href\");\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , $net.load(href)];\n\n          case 2:\n            data = _a.sent();\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"base64\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"svgToDataURI\", {\n              data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\n              options: options\n            }).data;\n            el.setAttributeNS(Export.XLINK, \"href\", uri);\n            return [2\n            /*return*/\n            , uri];\n\n          case 3:\n            e_6 = _a.sent(); // Disable temporarily\n\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": href\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Temporarily removes element from DOM, and replaces it with a dummy\r\n   * placeholder, as well as stores it for later restoration.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el Node\r\n   */\n\n\n  Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\n    // Get parent\n    var parent = el.parentElement || el.parentNode; // Create a placeholder group element if it has not been passed in\n\n    if (!placeholder) {\n      placeholder = this.sprite.paper.add(\"g\").node;\n    }\n\n    parent.insertBefore(placeholder, el); // Check if we have a textContents we can replace with\n    // @todo Perhaps we should explore alternatives to creating text nodes\n    // i.e. creating a text version of the HTML-based Text, just for export\n    // purposes. Converting HTML into SVG is very complicated\n\n    if (el.textContent) {\n      /*let text = this.sprite.paper.add(\"text\").node;\r\n      text.textContent = el.textContent;\r\n      placeholder.appendChild(text);\r\n        // Copy properties from the removing element to the placeholder\r\n      $dom.copyAttributes(el, placeholder);*/\n    } // Remove the old element\n\n\n    parent.removeChild(el); // Log removed item\n\n    this._removedObjects.push({\n      \"element\": el,\n      \"placeholder\": placeholder\n    });\n  };\n  /**\r\n   * Restores all (possibly tainted or unsupported) objects that were\r\n   * temporarily removed when exporting.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.restoreRemovedObjects = function () {\n    var obj;\n\n    while (true) {\n      obj = this._removedObjects.pop();\n\n      if (!obj) {\n        break;\n      } //obj.element.setAttribute(\"href\", obj.originalHref);\n\n\n      var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\n      parent_1.insertBefore(obj.element, obj.placeholder); //parent.removeChild(obj.placeholder);\n    }\n  };\n  /**\r\n   * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n   * document does not contain any external images.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return `true` if simplified export can be used\r\n   */\n\n\n  Export.prototype.simplifiedImageExport = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.useSimplifiedExport === false) {\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache = registry.getCache(\"simplifiedImageExport\");\n\n            if (cache === false || cache === true) {\n              return [2\n              /*return*/\n              , cache];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            DOMURL = this.getDOMURL();\n            svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            img = void 0;\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.loadNewImage(url, 1, 1)];\n\n          case 3:\n            img = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_7 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 5:\n            ctx.drawImage(img, 0, 0);\n            DOMURL.revokeObjectURL(url);\n\n            try {\n              //let uri = canvas.toDataURL(\"image/png\");\n              registry.setCache(\"simplifiedImageExport\", true);\n              return [2\n              /*return*/\n              , true];\n            } catch (e) {\n              registry.setCache(\"simplifiedImageExport\", false);\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_8 = _a.sent();\n            registry.setCache(\"simplifiedImageExport\", false);\n            return [2\n            /*return*/\n            , false];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns a new `<image>` element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param url          URL of the image\r\n   * @param width        Width (px)\r\n   * @param height       Height (px)\r\n   * @param crossOrigin  Cross-Origin setting\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\n    return new Promise(function (success, error) {\n      // New image\n      var image;\n\n      if (width && height) {\n        image = new Image(width, height);\n      } else {\n        image = new Image();\n      } // Set crossorigin\n\n\n      if (crossOrigin) {\n        image.setAttribute(\"crossOrigin\", crossOrigin);\n      } // Report success on load\n\n\n      image.onload = function () {\n        success(image);\n      };\n\n      function onerror() {\n        // Error occurred. Just in case it's the crossOrigin issue, let's try\n        // stripping off this attribute and trying again\n        if (crossOrigin) {\n          // Retain old uri\n          var currentHref = image.src; // Set up another `onerror` to handle situations where image is not\n          // loadable at all (i.e. protected by CORS)\n\n          image.onerror = function () {\n            // Nope, no luck\n            error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n          }; // remove the `crossOrigin` attribute\n\n\n          image.removeAttribute(\"crossorigin\"); // retry\n\n          image.src = \"\";\n          image.src = currentHref;\n        } else {\n          error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n        }\n      } // Set image error handlers\n\n\n      image.onabort = onerror;\n      image.onerror = onerror; // Trigger load\n\n      image.src = url;\n    });\n  };\n  /**\r\n   * Returns current DOM URL.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return URL\r\n   */\n\n\n  Export.prototype.getDOMURL = function () {\n    return self.URL || self.webkitURL || self;\n  };\n  /**\r\n   * Returns an SVG representation of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.getSVG = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"svg\");\n            } // Wait for required elements to be ready before proceeding\n\n\n            return [4\n            /*yield*/\n            , this.awaitValidSprites()];\n\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options); // Check if scale needs to be updated as per min/max dimensions\n\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"charset=utf-8\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"getSVG\", {\n              data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\n              options: options\n            }).data;\n\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n   * necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param svg       Input SVG\r\n   * @param options   Options\r\n   * @param width     Width of the SVG viewport\r\n   * @param height    Height of the SVG viewport\r\n   * @param font      Font family to use as a base\r\n   * @param fontSize  Font size to use as a base\r\n   * @return Output SVG\r\n   * @todo Add style params to existing <svg>\r\n   */\n\n\n  Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\n    // Construct width/height params\n    var dimParams = \"\";\n\n    if (width) {\n      dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\n    }\n\n    if (height) {\n      dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\n    } // Apply font settings\n\n\n    var styleParams = \"\";\n\n    if (font) {\n      styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\n    }\n\n    if (fontSize) {\n      styleParams += \"font-size: \" + fontSize + \";\";\n    } // Scale\n\n\n    if (scale) {\n      dimParams += \"viewBox=\\\"0 0 \" + width + \" \" + height + \"\\\" \";\n    } // Remove foreign objects temporarily\n\n\n    var fos = [];\n    var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\n\n    if (ms) {\n      for (var i = 0; i < ms.length; i++) {\n        svg = svg.replace(ms[i], $strings.PLACEHOLDER);\n        fos.push(ms[i]);\n      }\n    } // Add missing <svg> enclosure\n\n\n    if (!svg.match(/<svg/)) {\n      svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\n    } else {\n      if (dimParams !== \"\") {\n        // Clear current params\n        svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\n        svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\"); // Add new params\n\n        svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\n      }\n      /*if (styleParams !== \"\") {\r\n          // Clear current params\r\n          svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n          svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n            // Add new params\r\n          svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n      }*/\n\n    }\n\n    if (background) {\n      svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\"); //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\n    }\n\n    if ($browser.isInternetExplorer()) {\n      // IE can't handle exporting <feColorMatrix> for some reason\n      svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\n    } // Remove base uri-related stuff\n\n\n    var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\n    svg = svg.replace(reg, \"url(#\"); // Remove escaped quotes in url() parameters\n\n    svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\"); // Put foreignObjects back in\n\n    if (fos.length) {\n      for (var i = 0; i < fos.length; i++) {\n        svg = svg.replace($strings.PLACEHOLDER, fos[i]);\n      }\n    }\n\n    svg = this.adapter.apply(\"normalizeSVG\", {\n      data: svg,\n      options: options\n    }).data;\n    return svg;\n  };\n  /**\r\n   * Serializes an element and returns its contents.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element  An element to serialize\r\n   * @return A serialized XML\r\n   */\n\n\n  Export.prototype.serializeElement = function (element) {\n    return new XMLSerializer().serializeToString(element);\n  };\n  /**\r\n   * Returns a PDF containing chart image.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Account for header when calculating vertical fit\r\n   */\n\n\n  Export.prototype.getPDF = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      function addFont(font) {\n        var paths = {};\n        paths.normal = font.normal.path;\n        vfs[font.normal.path] = font.normal.bytes;\n\n        if (font.bold) {\n          paths.bold = font.bold.path;\n          vfs[font.bold.path] = font.bold.bytes;\n        } else {\n          paths.bold = font.normal.path;\n        }\n\n        if (font.italics) {\n          paths.italics = font.italics.path;\n          vfs[font.italics.path] = font.italics.bytes;\n        } else {\n          paths.italics = font.normal.path;\n        }\n\n        if (font.bolditalics) {\n          paths.bolditalics = font.bolditalics.path;\n          vfs[font.bolditalics.path] = font.bolditalics.bytes;\n        } else {\n          paths.bolditalics = font.normal.path;\n        }\n\n        fonts[font.name] = paths;\n      }\n\n      var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getImage(options.imageFormat || \"png\", options)];\n\n          case 1:\n            image = _d.sent();\n            return [4\n            /*yield*/\n            , this.pdfmake];\n\n          case 2:\n            pdfmake = _d.sent();\n            defaultMargins = [30, 30, 30, 30];\n            doc = {\n              pageSize: options.pageSize || \"A4\",\n              pageOrientation: options.pageOrientation || \"portrait\",\n              pageMargins: options.pageMargins || defaultMargins,\n              defaultStyle: {\n                font: options.font ? options.font.name : undefined\n              },\n              //header: <any>[],\n              content: []\n            };\n            title = this.adapter.apply(\"title\", {\n              title: this.title,\n              options: options\n            }).title;\n            extraMargin = 0;\n\n            if (title) {\n              doc.content.push({\n                text: title,\n                fontSize: options.fontSize || 14,\n                bold: true,\n                margin: [0, 0, 0, 15]\n              }); // Add some leftover margin for title\n\n              extraMargin += 50;\n            } // Add page URL?\n\n\n            if (options.addURL) {\n              doc.content.push({\n                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\n                fontSize: options.fontSize,\n                margin: [0, 0, 0, 15]\n              }); // Add some leftover margin for URL\n\n              extraMargin += 50;\n            } // Add image\n\n\n            if (type != \"pdfdata\") {\n              doc.content.push({\n                image: image,\n                alignment: options.align || \"left\",\n                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\n              });\n            }\n\n            if (!(type == \"pdfdata\" || options.addData)) return [3\n            /*break*/\n            , 4];\n            _b = (_a = doc.content).push;\n            _c = {};\n            return [4\n            /*yield*/\n            , this.getPDFData(\"pdf\", options)];\n\n          case 3:\n            _b.apply(_a, [(_c.table = _d.sent(), _c.fontSize = options.fontSize || 14, _c)]);\n\n            _d.label = 4;\n\n          case 4:\n            // Apply adapters\n            doc = this.adapter.apply(\"pdfmakeDocument\", {\n              doc: doc,\n              options: options\n            }).doc;\n            fonts = null;\n            vfs = null;\n\n            if (options.font) {\n              fonts = {};\n              vfs = {};\n              addFont(options.font);\n\n              if (options.extraFonts) {\n                $array.each(options.extraFonts, addFont);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , new Promise(function (success, error) {\n              pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\n                success(uri);\n              });\n            })];\n\n          case 5:\n            // Create PDF\n            return [2\n            /*return*/\n            , _d.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getPDFData = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var content, dataFields, data, dataFieldsOrder_1, len, i;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        content = {\n          \"body\": []\n        };\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"pdf\"\n        }).dataFields;\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"pdfdata\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\n          }, function (a, b) {\n            //console.log(a, b)\n            var ai = dataFieldsOrder_1.indexOf(a);\n            var bi = dataFieldsOrder_1.indexOf(b);\n\n            if (ai > bi) {\n              return 1;\n            } else if (ai < bi) {\n              return -1;\n            }\n\n            return 0;\n          });\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n            content.headerRows = 1;\n          }\n\n          for (len = data.length, i = 0; i < len; i++) {\n            content.body.push(this.getPDFDataRow(data[i], options, dataFields));\n          }\n        }\n\n        return [2\n        /*return*/\n        , this.adapter.apply(\"pdfmakeTable\", {\n          table: content,\n          options: options\n        }).table];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of data for use in PDF data table (pdfmake).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @since 4.7.0\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated Data line\r\n   */\n\n\n  Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"pdfdata\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      item = \"\" + item; // Add to item\n\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns fit dimensions for available page sizes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pageSize Page size\r\n   * @return `[width, height]` in pixels\r\n   */\n\n\n  Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\n    if (extraMargin === void 0) {\n      extraMargin = 0;\n    } // Check margins\n\n\n    var newMargins = [0, 0, 0, 0];\n\n    if (typeof margins == \"number\") {\n      newMargins = [margins, margins, margins, margins];\n    } else if (margins.length == 2) {\n      newMargins = [margins[0], margins[1], margins[0], margins[1]];\n    } else if (margins.length == 4) {\n      newMargins = margins;\n    } // Define available page sizes\n\n\n    var sizes = {\n      \"4A0\": [4767.87, 6740.79],\n      \"2A0\": [3370.39, 4767.87],\n      A0: [2383.94, 3370.39],\n      A1: [1683.78, 2383.94],\n      A2: [1190.55, 1683.78],\n      A3: [841.89, 1190.55],\n      A4: [595.28, 841.89],\n      A5: [419.53, 595.28],\n      A6: [297.64, 419.53],\n      A7: [209.76, 297.64],\n      A8: [147.40, 209.76],\n      A9: [104.88, 147.40],\n      A10: [73.70, 104.88],\n      B0: [2834.65, 4008.19],\n      B1: [2004.09, 2834.65],\n      B2: [1417.32, 2004.09],\n      B3: [1000.63, 1417.32],\n      B4: [708.66, 1000.63],\n      B5: [498.90, 708.66],\n      B6: [354.33, 498.90],\n      B7: [249.45, 354.33],\n      B8: [175.75, 249.45],\n      B9: [124.72, 175.75],\n      B10: [87.87, 124.72],\n      C0: [2599.37, 3676.54],\n      C1: [1836.85, 2599.37],\n      C2: [1298.27, 1836.85],\n      C3: [918.43, 1298.27],\n      C4: [649.13, 918.43],\n      C5: [459.21, 649.13],\n      C6: [323.15, 459.21],\n      C7: [229.61, 323.15],\n      C8: [161.57, 229.61],\n      C9: [113.39, 161.57],\n      C10: [79.37, 113.39],\n      RA0: [2437.80, 3458.27],\n      RA1: [1729.13, 2437.80],\n      RA2: [1218.90, 1729.13],\n      RA3: [864.57, 1218.90],\n      RA4: [609.45, 864.57],\n      SRA0: [2551.18, 3628.35],\n      SRA1: [1814.17, 2551.18],\n      SRA2: [1275.59, 1814.17],\n      SRA3: [907.09, 1275.59],\n      SRA4: [637.80, 907.09],\n      EXECUTIVE: [521.86, 756.00],\n      FOLIO: [612.00, 936.00],\n      LEGAL: [612.00, 1008.00],\n      LETTER: [612.00, 792.00],\n      TABLOID: [792.00, 1224.00]\n    }; // Calculate size\n\n    var fitSize = sizes[pageSize];\n    fitSize[0] -= newMargins[0] + newMargins[2];\n    fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n    return fitSize;\n  };\n  /**\r\n   * Returns an Excel file of chart's data.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Handle dates\r\n   * @todo Support for multi-sheet\r\n   */\n\n\n  Export.prototype.getExcel = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"xlsx\");\n            }\n\n            return [4\n            /*yield*/\n            , this.xlsx];\n\n          case 1:\n            XLSX = _a.sent();\n            wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\n              xlsx: XLSX,\n              options: {\n                bookType: \"xlsx\",\n                bookSST: false,\n                type: \"base64\"\n              }\n            }).options;\n            sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\n              xlsx: XLSX,\n              name: this.title || this.language.translate(\"Data\")\n            }).name);\n            wb = {\n              SheetNames: [sheetName],\n              Sheets: {}\n            };\n            data = [];\n            dataFields = this.adapter.apply(\"formatDataFields\", {\n              dataFields: this.dataFields,\n              format: \"xslx\"\n            }).dataFields; // Vertical or horizontal (default) layout\n\n            if (options.pivot) {\n              dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\n                dataFieldsOrder: this.dataFieldsOrder,\n                format: \"xlsx\"\n              }).dataFieldsOrder;\n              $object.eachOrdered(dataFields, function (key, val) {\n                var dataRow = [];\n\n                if (options.addColumnNames) {\n                  dataRow.push(val);\n                }\n\n                for (var len = _this.data.length, i = 0; i < len; i++) {\n                  var dataValue = _this.data[i][key];\n                  dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n                }\n\n                data.push(_this.getExcelRow(dataRow, options, undefined, true));\n              }, function (a, b) {\n                //console.log(a, b)\n                var ai = dataFieldsOrder_2.indexOf(a);\n                var bi = dataFieldsOrder_2.indexOf(b);\n\n                if (ai > bi) {\n                  return 1;\n                } else if (ai < bi) {\n                  return -1;\n                }\n\n                return 0;\n              });\n            } else {\n              // Add column names?\n              if (options.addColumnNames) {\n                data.push(this.getExcelRow(dataFields, options, undefined, true));\n              } // Add lines\n\n\n              for (len = this.data.length, i = 0; i < len; i++) {\n                data.push(this.getExcelRow(this.data[i], options, dataFields));\n              }\n            } // Create sheet and add data\n\n\n            wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data); // Apply adapters\n\n            wb = this.adapter.apply(\"xlsxWorkbook\", {\n              xlsx: XLSX,\n              workbook: wb,\n              options: options\n            }).workbook;\n            uri = this.adapter.apply(\"getExcel\", {\n              data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\n              options: options\n            }).data;\n            return [2\n            /*return*/\n            , uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * This is needed to work around Excel limitations.\r\n   *\r\n   * @param name  Source name\r\n   * @return Normalized name\r\n   */\n\n\n  Export.prototype.normalizeExcelSheetName = function (name) {\n    name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n    return $utils.truncateWithEllipsis(name, 31, \"...\", true);\n  };\n  /**\r\n   * Rertuns an array of values to be used as Excel row.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         Row data\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Array of values\r\n   */\n\n\n  Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"xlsx\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns chart's data formatted as CSV.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getCSV = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"csv\");\n        }\n\n        csv = \"\";\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"csv\"\n        }).dataFields;\n        br = \"\";\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"csv\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            csv += br + _this.getCSVRow(dataRow, options, undefined, true);\n            br = \"\\n\";\n          }, function (a, b) {\n            var ai = dataFieldsOrder_3.indexOf(a);\n            var bi = dataFieldsOrder_3.indexOf(b);\n\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else {\n          for (len = data.length, i = 0; i < len; i++) {\n            row = this.getCSVRow(data[i], options, dataFields);\n\n            if (options.reverse) {\n              csv = row + br + csv;\n            } else {\n              csv += br + row;\n            }\n\n            br = \"\\n\";\n          } // Add column names?\n\n\n          if (options.addColumnNames) {\n            csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n          }\n        }\n\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getCSV\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of CSV data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated CSV line\r\n   */\n\n\n  Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    } // Init\n\n\n    var separator = options.separator || \",\";\n    var items = []; // Data fields\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"csv\"\n    }).dataFieldsOrder; // Process each row item\n\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Check if we need to skip\n      // This is no longer required because we are iterating via dataFields anyway\n\n      /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n          return;\r\n      }*/\n      // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options); // Cast and escape doublequotes\n\n      item = \"\" + item;\n      item = item.replace(/\"/g, '\"\"'); // Enclose into double quotes\n\n      if (options.forceQuotes || item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0) {\n        item = \"\\\"\" + item + \"\\\"\";\n      } // Add to item\n\n\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return items.join(separator);\n  };\n  /**\r\n   * Returns chart's data formatted as HTML table.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getHTML = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"html\");\n        }\n\n        html = \"<table>\";\n\n        if (options.tableClass) {\n          html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n        }\n\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"html\"\n        }).dataFields;\n        data = this.data; // Vertical or horizontal (default) layout\n\n        if (options.pivot) {\n          dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"html\"\n          }).dataFieldsOrder;\n          html += \"\\n<tbody>\";\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n\n            html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\n          }, function (a, b) {\n            var ai = dataFieldsOrder_4.indexOf(a);\n            var bi = dataFieldsOrder_4.indexOf(b);\n\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n\n            return 0;\n          });\n          html += \"\\n</tbody>\";\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n          }\n\n          html += \"\\n<tbody>\";\n\n          for (len = data.length, i = 0; i < len; i++) {\n            html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n          }\n\n          html += \"\\n</tbody>\";\n        }\n\n        html += \"\\n</table>\";\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getHTML\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of HTML data.\r\n   *\r\n   * @since 4.7.0\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated HTML row\r\n   */\n\n\n  Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\n    var _this = this;\n\n    if (asIs === void 0) {\n      asIs = false;\n    }\n\n    if (headerRow === void 0) {\n      headerRow = false;\n    } // Init output\n\n\n    var html = \"\\t<tr>\";\n\n    if (options.rowClass) {\n      html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n    } // Data fields\n\n\n    if (!dataFields) {\n      dataFields = row;\n    } // Data fields order\n\n\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"html\"\n    }).dataFieldsOrder; // th or dh?\n\n    var tag = headerRow ? \"th\" : \"td\"; // Process each row item\n\n    var first = true;\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options); // Convert dates\n\n\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options); // Escape HTML entities\n\n      item = \"\" + item;\n      item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\n        return \"&#\" + i.charCodeAt(0) + \";\";\n      }); // Which tag to use\n\n      var useTag = tag;\n\n      if (options.pivot && first) {\n        useTag = \"th\";\n      } // Add cell\n\n\n      if (options.cellClass) {\n        html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n      } else {\n        html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n      }\n\n      first = false;\n    }, function (a, b) {\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n\n      return 0;\n    });\n    html += \"\\n\\t</tr>\";\n    return html;\n  };\n  /**\r\n   * Returns chart's data in JSON format.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.getJSON = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"json\");\n        }\n\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"json\"\n        }).dataFields;\n\n        if (!this._dynamicDataFields) {\n          data = [];\n          sourceData = this.data;\n\n          _loop_1 = function (len, i) {\n            var value = sourceData[i];\n\n            if (typeof value == \"object\") {\n              var newValue_1 = {};\n              $object.each(value, function (field, item) {\n                if ($type.hasValue(dataFields[field])) {\n                  newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\n                }\n              });\n              data.push(newValue_1);\n            }\n          };\n\n          for (len = sourceData.length, i = 0; i < len; i++) {\n            _loop_1(len, i);\n          }\n        } else {\n          data = this.data;\n        }\n\n        json = JSON.stringify(data, function (key, value) {\n          if (typeof value == \"object\") {\n            $object.each(value, function (field, item) {\n              value[field] = _this.convertToSpecialFormat(field, item, options);\n            });\n          }\n\n          return value;\n        }, options.indent);\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getJSON\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\n          options: options\n        }).data;\n        return [2\n        /*return*/\n        , uri];\n      });\n    });\n  };\n  /**\r\n   * Converts the value to proper date format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  field         Field name\r\n   * @param  value         Value\r\n   * @param  options       Options\r\n   * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n   * @return Formatted date value or unmodified value\r\n   */\n\n\n  Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\n    // Is this a timestamp or duration?\n    if (typeof value == \"number\") {\n      if (this.isDateField(field)) {\n        value = new Date(value);\n      } else if (this.isDurationField(field)) {\n        return this.durationFormatter.format(value, this.durationFormat);\n      } else if (this.isNumberField(field) && this.numberFormat) {\n        return this.numberFormatter.format(value, this.numberFormat);\n      }\n    }\n\n    if (value instanceof Date) {\n      if (options.useTimestamps) {\n        value = value.getTime();\n      } else if (options.useLocale) {\n        if (!keepOriginal) {\n          value = value.toLocaleString();\n        }\n      } else {\n        value = this.dateFormatter.format(value, this.dateFormat);\n      }\n    } else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\n      value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\n    }\n\n    return value;\n  };\n  /**\r\n   * Converts empty value based on `emptyAs` option.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.convertEmptyValue = function (field, value, options) {\n    return $type.hasValue(value) ? value : options.emptyAs;\n  };\n  /**\r\n   * Triggers download of the file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param uri       Data URI with file content\r\n   * @param fileName  File name\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.download = function (uri, fileName, addBOM) {\n    if (addBOM === void 0) {\n      addBOM = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\n      return __generator(this, function (_a) {\n        if (this.msBlobDownloadSupport()) {\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\")); // Check if we need to Base64-decode\n\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2\n              /*return*/\n              , false];\n            }\n          } else {\n            blob_1 = new Blob([uri], {\n              type: contentType\n            });\n            window.navigator.msSaveBlob(blob_1, fileName);\n            return [2\n            /*return*/\n            , true];\n          }\n\n          chars = new Array(uri.length);\n\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          window.navigator.msSaveBlob(blob, fileName);\n        } else if (this.blobDownloadSupport()) {\n          link_1 = document.createElement(\"a\");\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2\n              /*return*/\n              , false];\n            }\n          } else {\n            if (addBOM) {\n              uri = \"\\ufeff\" + uri;\n            }\n\n            blob_2 = new Blob([uri], {\n              type: contentType\n            });\n            url_2 = window.URL.createObjectURL(blob_2);\n            link_1.href = url_2;\n            link_1.download = fileName;\n            link_1.click();\n            setTimeout(function () {\n              document.body.removeChild(link_1);\n              window.URL.revokeObjectURL(url_2);\n            }, 100);\n            return [2\n            /*return*/\n            , true];\n          }\n\n          chars = new Array(uri.length);\n\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n\n          if (addBOM) {\n            chars = [0xEF, 0xBB, 0xBF].concat(chars);\n          }\n\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          url_3 = window.URL.createObjectURL(blob);\n          link_1.href = url_3;\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          link_1.click();\n          document.body.removeChild(link_1);\n          setTimeout(function () {\n            window.URL.revokeObjectURL(url_3);\n          }, 100);\n        } else if (this.linkDownloadSupport()) {\n          link = document.createElement(\"a\");\n          link.download = fileName;\n          link.href = uri;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else if (this.legacyIE()) {\n          parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\n\n          if (parts.length === 4) {\n            // Base64-encoded or text-based stuff?\n            if (parts[2] == \"base64\") {\n              // Base64-encoded - probably an image\n              if (parts[1].match(/^image\\//)) {\n                // Yep, an image. Let's create a temporary image placeholder,\n                // so that user can use do Save As.\n                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" + \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") + \"</p>\" + \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\n              }\n            } else {\n              contentType = void 0;\n\n              if (fileName.match(/\\.svg$/)) {\n                contentType = \"image/svg+xml\";\n              } else {\n                contentType = \"text/plain\";\n                fileName += \".txt\";\n              }\n\n              iframe = document.createElement(\"iframe\");\n              iframe.width = \"1px\";\n              iframe.height = \"1px\";\n              iframe.style.display = \"none\";\n              document.body.appendChild(iframe);\n              idoc = iframe.contentDocument;\n              idoc.open(contentType, \"replace\"); // TODO test this with various encodings (e.g. UTF)\n              //idoc.charset = parts[2].replace(/charset=/, \"\");\n\n              idoc.write(decodeURIComponent(parts[3]));\n              idoc.close();\n              idoc.execCommand(\"SaveAs\", true, fileName); // Destroy the iframe\n\n              document.body.removeChild(iframe);\n            }\n          }\n        } else {\n          /**\r\n           * Something else - perhaps a mobile.\r\n           * Let's just display it in the same page.\r\n           * (hey we don't like it either)\r\n           */\n          window.location.href = uri;\n        }\n\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n  /**\r\n   * Returns `true` if browser has any supported methods to trigger download\r\n   * of a binary file.\r\n   *\r\n   * @return Supports downloads?\r\n   */\n\n\n  Export.prototype.downloadSupport = function () {\n    //return !this.legacyIE();\n    return this.linkDownloadSupport() || this.msBlobDownloadSupport();\n  };\n  /**\r\n   * Checks if the browser supports \"download\" attribute on links.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.linkDownloadSupport = function () {\n    // Do we have this cached?\n    var cache = registry.getCache(\"linkDownloadSupport\");\n\n    if (cache === false || cache === true) {\n      return cache;\n    }\n\n    var a = document.createElement(\"a\");\n    var res = typeof a.download !== \"undefined\";\n    registry.setCache(\"linkDownloadSupport\", res);\n    return res;\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.blobDownloadSupport = function () {\n    return $type.hasValue(window.Blob);\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n\n\n  Export.prototype.msBlobDownloadSupport = function () {\n    return $type.hasValue(window.navigator.msSaveOrOpenBlob);\n  };\n  /**\r\n   * Checks if this is a legacy version of IE.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return IE9 or less?\r\n   */\n\n\n  Export.prototype.legacyIE = function () {\n    // Create a temporary <div> with conditional tags in it an an <i> tag.\n    // Count <i>s. If there are some, we have IE9 or late on our hands.\n    var div = document.createElement(\"div\");\n    div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\n    return div.getElementsByTagName(\"i\").length == 1;\n  };\n  /**\r\n   * Initiates print of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param data     Data URI for the image\r\n   * @param options  Options\r\n   * @param title    Optional title to use (uses window's title by default)\r\n   * @return Promise\r\n   * @async\r\n   */\n\n\n  Export.prototype.print = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.printMethod == \"css\") {\n          return [2\n          /*return*/\n          , this.printViaCSS(data, options, title)];\n        } else {\n          return [2\n          /*return*/\n          , this.printViaIframe(data, options, title)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  Export.prototype.printViaCSS = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var scroll, rule, originalTitle, img, isIOS;\n      return __generator(this, function (_a) {\n        scroll = document.documentElement.scrollTop || document.body.scrollTop;\n        rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\n          \"display\": \"none\",\n          \"position\": \"fixed\",\n          \"visibility\": \"hidden\",\n          \"opacity\": \"0\",\n          \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n        });\n\n        if (title && document && document.title) {\n          originalTitle = document.title;\n          document.title = title;\n        }\n\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.display = \"block\";\n        img.style.position = \"relative\";\n        img.style.visibility = \"visible\";\n        img.style.opacity = \"1\";\n        img.style.clipPath = \"none\";\n        document.body.appendChild(img); // Print\n\n        this.setTimeout(function () {\n          window.print();\n        }, 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        } // Delay function that resets back the document the way ot was before\n\n\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(img); // Reset back all elements\n\n          /*for (let len = items.length, i = 0; i < len; i++) {\r\n              let item = <HTMLElement>items[i];\r\n              if ($dom.isElement(item)) {\r\n                  item.style.display = states[i];\r\n              }\r\n          }*/\n\n          rule.dispose(); // Restore title\n\n          if (originalTitle) {\n            document.title = document.title;\n          } // Scroll back the document the way it was before\n\n\n          document.documentElement.scrollTop = document.body.scrollTop = scroll;\n        }, options.delay || 500);\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n\n  Export.prototype.printViaIframe = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var iframe, img, isIOS;\n      return __generator(this, function (_a) {\n        iframe = document.createElement(\"iframe\");\n        iframe.style.visibility = \"hidden\";\n        document.body.appendChild(iframe); // This is needed for FireFox\n\n        iframe.contentWindow.document.open();\n        iframe.contentWindow.document.close();\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.height = \"auto\";\n\n        if (title) {\n          iframe.contentWindow.document.title = title;\n        }\n\n        iframe.contentWindow.document.body.appendChild(img);\n\n        iframe.load = function () {\n          iframe.contentWindow.document.body.appendChild(img);\n        }; // Print\n\n\n        this.setTimeout(function () {\n          try {\n            if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\n              iframe.contentWindow.print();\n            }\n          } catch (e) {\n            iframe.contentWindow.print();\n          }\n        }, options.delay || 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        } // Delay function that resets back the document the way ot was before\n\n\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(iframe);\n        }, options.delay + 50 || 100);\n        return [2\n        /*return*/\n        , true];\n      });\n    });\n  };\n  /**\r\n   * Finds a background color for the element. If element is transparent it goes\r\n   * up the DOM hierarchy to find a parent element that does.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element Element\r\n   * @return Color code\r\n   */\n\n\n  Export.prototype.findBackgroundColor = function (element) {\n    // Check if element has styles set\n    var opacity = 1,\n        currentColor = getComputedStyle(element, \"background-color\"); // Check opacity\n\n    if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n      opacity = 0;\n    }\n\n    if (opacity == 0) {\n      var parent_2 = element.parentElement; // || <Element>element.parentNode;\n      // Completely transparent. Look for a parent\n\n      if (parent_2) {\n        return this.findBackgroundColor(parent_2);\n      } else {\n        return color(\"#fff\");\n      }\n    } else {\n      return color(currentColor, opacity);\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"container\", {\n    /**\r\n     * @return Reference\r\n     */\n    get: function () {\n      return this.adapter.apply(\"container\", {\n        container: this._container\n      }).container;\n    },\n\n    /**\r\n     * A reference to a container to be used to place [[ExportMenu]] in.\r\n     *\r\n     * @param value Reference\r\n     */\n    set: function (value) {\n      this._container = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"sprite\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"sprite\", {\n        sprite: this._sprite\n      }).sprite;\n    },\n\n    /**\r\n     * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n     * internal elements.\r\n     *\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._sprite = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"extraSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"extraSprites\", {\n        extraSprites: this._extraSprites\n      }).extraSprites;\n    },\n\n    /**\r\n     * An array of extra [[Sprite]] elements to include in export.\r\n     *\r\n     * It can be used to export any external elements, or even other charts.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     *\r\n     * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n     *\r\n     * @since 4.2.0\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._extraSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"validateSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"validateSprites\", {\n        validateSprites: this._validateSprites\n      }).validateSprites;\n    },\n\n    /**\r\n     * An array of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     *\r\n     * If any of those elements is not completely ready when export is triggered,\r\n     * the export will wait until they are (their `validated` event triggers)\r\n     * before going through with the export opertaion.\r\n     *\r\n     * This is useful if you need to modify chart appearance for the export.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * // Add watermark\r\n     * let watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * // Add watermark\r\n     * var watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     *\r\n     * @since 4.6.8\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._validateSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"data\", {\n    /**\r\n     * @return Data\r\n     */\n    get: function () {\n      return this.adapter.apply(\"data\", {\n        data: this._data\n      }).data;\n    },\n\n    /**\r\n     * Data to export.\r\n     *\r\n     * @param value Data\r\n     */\n    set: function (value) {\n      this._data = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dataFields\", {\n    /**\r\n     * @return Field names `{ field: fieldName }`\r\n     */\n    get: function () {\n      if (!this._dataFields) {\n        this.generateDataFields();\n      }\n\n      return this.adapter.apply(\"dataFields\", {\n        dataFields: this._dataFields\n      }).dataFields;\n    },\n\n    /**\r\n     * Data fields in `{ field: fieldName }` format. Those are used for\r\n     * exporting in data formats to name the columns.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n     * @param value Field names\r\n     */\n    set: function (value) {\n      this._dataFields = value;\n      this._dynamicDataFields = false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Called after target chart's data updates.\r\n   *\r\n   * @ignore\r\n   */\n\n  Export.prototype.handleDataUpdated = function () {\n    if (this._dynamicDataFields) {\n      this._dataFields = undefined;\n    }\n\n    var hasData = this.data.length > 0;\n\n    if (this._prevHasData != hasData) {\n      this._prevHasData = hasData;\n\n      if (this.menu) {\n        this.menu.invalidate();\n      }\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"dateFormatter\", {\n    /**\r\n     * @return A DateFormatter instance\r\n     */\n    get: function () {\n      if (!this._dateFormatter) {\n        this._dateFormatter = new DateFormatter();\n        this._dateFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"dateFormatter\", {\n        dateFormatter: this._dateFormatter\n      }).dateFormatter;\n    },\n\n    /**\r\n     * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @param value DateFormatter instance\r\n     */\n    set: function (value) {\n      this._dateFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFormat\", {\n    /**\r\n     * @return Date format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dateFormat\", {\n        dateFormat: this._dateFormat\n      }).dateFormat;\n    },\n\n    /**\r\n     * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @param value Date format\r\n     */\n    set: function (value) {\n      this._dateFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFields\", {\n    /**\r\n     * @return Date field list\r\n     */\n    get: function () {\n      if (!this._dateFields) {\n        this._dateFields = new List();\n      }\n\n      return this.adapter.apply(\"dateFields\", {\n        dateFields: this._dateFields\n      }).dateFields;\n    },\n\n    /**\r\n     * A list of fields that hold date values.\r\n     *\r\n     * @param value Date field list\r\n     */\n    set: function (value) {\n      this._dateFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormatter\", {\n    /**\r\n     * @return A NumberFormatter instance\r\n     */\n    get: function () {\n      if (!this._numberFormatter) {\n        this._numberFormatter = new NumberFormatter();\n        this._numberFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"numberFormatter\", {\n        numberFormatter: this._numberFormatter\n      }).numberFormatter;\n    },\n\n    /**\r\n     * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value NumberFormatter instance\r\n     */\n    set: function (value) {\n      this._numberFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormat\", {\n    /**\r\n     * @return Number format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"numberFormat\", {\n        numberFormat: this._numberFormat\n      }).numberFormat;\n    },\n\n    /**\r\n     * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number format\r\n     */\n    set: function (value) {\n      this._numberFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFields\", {\n    /**\r\n     * @return Number field list\r\n     */\n    get: function () {\n      if (!this._numberFields) {\n        this._numberFields = new List();\n      }\n\n      return this.adapter.apply(\"numberFields\", {\n        numberFields: this._numberFields\n      }).numberFields;\n    },\n\n    /**\r\n     * A list of fields that hold number values.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number field list\r\n     */\n    set: function (value) {\n      this._numberFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormatter\", {\n    /**\r\n     * @return A DurationFormatter instance\r\n     */\n    get: function () {\n      if (!this._durationFormatter) {\n        this._durationFormatter = new DurationFormatter();\n        this._durationFormatter.language = this.language;\n      }\n\n      return this.adapter.apply(\"durationFormatter\", {\n        durationFormatter: this._durationFormatter\n      }).durationFormatter;\n    },\n\n    /**\r\n     * A [[DurationFormatter]] to use when formatting duration values when\r\n     * exporting data.\r\n     *\r\n     * @param value  DurationFormatter instance\r\n     */\n    set: function (value) {\n      this._durationFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormat\", {\n    /**\r\n     * @return Duration format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"durationFormat\", {\n        durationFormat: this._durationFormat\n      }).durationFormat;\n    },\n\n    /**\r\n     * A format to use when formatting values from `durationFields`.\r\n     * Will use [[DurationFormatter]] format if not set.\r\n     *\r\n     * @param value Duration format\r\n     */\n    set: function (value) {\n      this._durationFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFields\", {\n    /**\r\n     * @return Duration field list\r\n     */\n    get: function () {\n      if (!this._durationFields) {\n        this._durationFields = new List();\n      }\n\n      return this.adapter.apply(\"durationFields\", {\n        durationFields: this._durationFields\n      }).durationFields;\n    },\n\n    /**\r\n     * A list of fields that hold duration values.\r\n     *\r\n     * @param value Duration field list\r\n     */\n    set: function (value) {\n      this._durationFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Generates data fields out of the first row of data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Export.prototype.generateDataFields = function () {\n    var _this = this;\n\n    this._dataFields = {};\n\n    if (this.data.length) {\n      $array.each(this.data, function (row) {\n        $object.each(row, function (key, value) {\n          if (!$type.hasValue(_this._dataFields[key])) {\n            _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\n              name: key,\n              field: key\n            }).name;\n          }\n        });\n      });\n    }\n  };\n  /**\r\n   * Cheks against `dateFields` property to determine if this field holds\r\n   * dates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n\n\n  Export.prototype.isDateField = function (field) {\n    return this.adapter.apply(\"isDateField\", {\n      isDateField: this.dateFields.contains(field),\n      field: field\n    }).isDateField;\n  };\n  /**\r\n   * Cheks against `numberFields` property to determine if this field holds\r\n   * numbers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a number field\r\n   */\n\n\n  Export.prototype.isNumberField = function (field) {\n    return this.adapter.apply(\"isNumberField\", {\n      isNumberField: this.numberFields.contains(field),\n      field: field\n    }).isNumberField;\n  };\n  /**\r\n   * Cheks against `durationFields` property to determine if this field holds\r\n   * durations.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n\n\n  Export.prototype.isDurationField = function (field) {\n    return this.adapter.apply(\"isDurationField\", {\n      isDurationField: this.durationFields.contains(field),\n      field: field\n    }).isDurationField;\n  };\n  /**\r\n   * Returns proper content type for the export type.\r\n   *\r\n   * @param type  Export format/type\r\n   * @return Proper content type, i.e. \"image/jpeg\"\r\n   */\n\n\n  Export.prototype.getContentType = function (type) {\n    var contentType = \"\";\n\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n        contentType = \"image/\" + type;\n        break;\n\n      case \"jpg\":\n        contentType = \"image/jpeg\";\n        break;\n\n      case \"svg\":\n        contentType = \"image/svg+xml\";\n        break;\n\n      case \"csv\":\n        contentType = \"text/csv\";\n        break;\n\n      case \"json\":\n        contentType = \"application/json\";\n        break;\n\n      case \"html\":\n        contentType = \"text/html\";\n        break;\n\n      case \"pdf\":\n      case \"pdfdata\":\n        contentType = \"application/pdf\";\n        break;\n\n      case \"xlsx\":\n        contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        break;\n    }\n\n    return this.adapter.apply(\"contentType\", {\n      contentType: contentType,\n      type: type\n    }).contentType;\n  };\n\n  Object.defineProperty(Export.prototype, \"filePrefix\", {\n    /**\r\n     * @return File prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"filePrefix\", {\n        filePrefix: this._filePrefix\n      }).filePrefix;\n    },\n\n    /**\r\n     * A file prefix to be used for all exported formats.\r\n     *\r\n     * Export will apply format-related extension to it. E.g. if this is set to\r\n     * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n     *\r\n     * @param value File prefix\r\n     */\n    set: function (value) {\n      this._filePrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"backgroundColor\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.adapter.apply(\"backgroundColor\", {\n        backgroundColor: this._backgroundColor\n      }).backgroundColor;\n    },\n\n    /**\r\n     * A background color to be used for exported images. If set, this will\r\n     * override the automatically acquired background color.\r\n     *\r\n     * @param value Color\r\n     */\n    set: function (value) {\n      this._backgroundColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"title\", {\n    /**\r\n     * @return Title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", {\n        title: this._title\n      }).title;\n    },\n\n    /**\r\n     * A title to be used when printing.\r\n     *\r\n     * @param value Title\r\n     */\n    set: function (value) {\n      this._title = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Add ability to change text\r\n   */\n\n  Export.prototype.showPreloader = function () {\n    var preloader = this.preloader;\n\n    if (preloader) {\n      preloader.progress = 0.5;\n      preloader.label.text = \"...\";\n    }\n  };\n  /**\r\n   * Hides preloader/exporting indicator\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hidePreloader = function () {\n    var preloader = this.preloader;\n\n    if (preloader) {\n      preloader.progress = 1;\n    }\n  };\n\n  Object.defineProperty(Export.prototype, \"preloader\", {\n    /**\r\n     * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n     * exported.\r\n     *\r\n     * @return Preloader\r\n     */\n    get: function () {\n      return this._sprite && this._sprite.parent && this._sprite.parent.preloader ? this._sprite.parent.preloader : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a modal saying export is taking longer than expected.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Export.prototype.showTimeout = function () {\n    this.showModal(this.adapter.apply(\"timeoutMessage\", {\n      message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\n    }).message);\n  };\n  /**\r\n   * Hides preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hideTimeout = function () {\n    if (this._timeoutTimeout) {\n      this.removeDispose(this._timeoutTimeout);\n      this._timeoutTimeout = null;\n    }\n\n    this.hideModal();\n  };\n\n  Object.defineProperty(Export.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      if (!this._language) {\n        this._language = new Language();\n      }\n\n      return this._language;\n    },\n\n    /**\r\n     * A [[Language]] instance to be used for translations.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      this._language = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"modal\", {\n    /**\r\n     * Returns (and creates) [[Modal]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Modal instance\r\n     */\n    get: function () {\n      if (!this._modal) {\n        this._modal = new Modal(); // Prefix with Sprite's class name\n\n        this._modal.adapter.add(\"classPrefix\", function (value) {\n          value = options.classNamePrefix + value;\n          return value;\n        });\n      }\n\n      return this._modal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows [[Modal]] with specific text.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text Modal contents\r\n   */\n\n  Export.prototype.showModal = function (text, title) {\n    // Hide previous modal and preloader\n    this.hideModal();\n    this.hidePreloader(); // Create modal\n\n    var modal = this.modal;\n    modal.container = this.sprite.svgContainer.SVGContainer;\n    modal.content = text;\n    modal.readerTitle = title;\n    modal.open();\n  };\n  /**\r\n   * Hides modal window if one's currently open.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.prototype.hideModal = function () {\n    if (this._modal) {\n      this.modal.close();\n    }\n  };\n  /**\r\n   * Loads canvg dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of canvg\r\n   * @async\r\n   */\n\n\n  Export.prototype._canvg = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var canvg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"canvg\" */\n            \"../../canvg/index.js\")];\n\n          case 1:\n            canvg = _a.sent();\n\n            if (canvg.default != null) {\n              return [2\n              /*return*/\n              , canvg.default];\n            } else {\n              return [2\n              /*return*/\n              , canvg];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Export.prototype, \"canvg\", {\n    /**\r\n     * Returns canvg instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     */\n    get: function () {\n      return this._canvg();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"pdfmake\", {\n    /**\r\n     * Returns pdfmake instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      if (pdfmakePromise == null) {\n        pdfmakePromise = _pdfmake();\n      }\n\n      return pdfmakePromise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads xlsx dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of pdfmake\r\n   * @async\r\n   */\n\n  Export.prototype._xlsx = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"xlsx\" */\n            \"xlsx\")];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Export.prototype, \"xlsx\", {\n    /**\r\n     * Returns xlsx instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      return this._xlsx();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets options for a format.\r\n   */\n\n  Export.prototype.setFormatOptions = function (type, options) {\n    this._formatOptions.setKey(type, options);\n  };\n  /**\r\n   * Returns current options for a format.\r\n   */\n\n\n  Export.prototype.getFormatOptions = function (type) {\n    return this._formatOptions.getKey(type);\n  };\n\n  Object.defineProperty(Export.prototype, \"formatOptions\", {\n    /**\r\n     * A [[Dictionary]] object containing format-specific options.\r\n     *\r\n     * May be used to change specific option for the format:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     // ...\r\n     *     \"formatOptions\": {\r\n     *       \"csv\": {\r\n     *         \"disabled\": true\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.9.12\r\n     * @return  Options\r\n     */\n    get: function () {\n      return this._formatOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n\n  Export.prototype._disablePointers = function () {\n    if (!$type.hasValue(this._spriteInteractionsEnabled)) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n    }\n\n    this.sprite.interactionsEnabled = false;\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n\n\n  Export.prototype._releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n    }\n  };\n  /**\r\n   * Hides all elements that should not be included in the exported image.\r\n   */\n\n\n  Export.prototype.hideNonExportableSprites = function () {\n    var _this = this;\n\n    if (this._objectsAlreadyHidden) {\n      return;\n    }\n\n    var svgContainer = this.sprite.svgContainer;\n\n    if (svgContainer) {\n      $array.each(svgContainer.nonExportableSprites, function (item) {\n        if (!item.isHidden && !item.isHiding && item.visible) {\n          _this._hiddenObjects.push(item);\n        }\n\n        item.hide(0);\n      });\n    }\n\n    this._objectsAlreadyHidden = true;\n  };\n  /**\r\n   * Respores elements that were hidden before export.\r\n   */\n\n\n  Export.prototype.restoreNonExportableSprites = function () {\n    if (!this._objectsAlreadyHidden) {\n      return;\n    }\n\n    $array.each(this._hiddenObjects, function (item) {\n      item.show(0);\n    });\n    this._hiddenObjects = [];\n    this._objectsAlreadyHidden = false;\n  };\n  /**\r\n   * Checks if there are elements that absolutely need to be validated before\r\n   * export.\r\n   *\r\n   * If there are invalid elements, it will await for them to be validated.\r\n   *\r\n   * @return Promise\r\n   */\n\n\n  Export.prototype.awaitValidSprites = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n\n            if (this.validateSprites.length) {\n              $array.each(this.validateSprites, function (sprite, index) {\n                if (sprite.invalid) {\n                  promises.push(new Promise(function (resolve, reject) {\n                    sprite.events.once(\"validated\", function (ev) {\n                      resolve();\n                    });\n                  }));\n                }\n              });\n            }\n\n            if (!promises.length) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  Export.prototype.processConfig = function (config) {\n    registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\n\n    if (config) {\n      // Set up menu\n      if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\n        config.menu.type = \"ExportMenu\";\n      }\n\n      if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\n        this.dataFields = config.dataFields;\n        delete config.dataFields;\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * XLINK namespace definition.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Export.XLINK = \"http://www.w3.org/1999/xlink\";\n  return Export;\n}(Validatable);\n\nexport { Export };","map":{"version":3,"sources":["/home/unutu/go/src/github.com/thteam47/admin-portal/node_modules/@amcharts/amcharts4/.internal/core/export/Export.js"],"names":["__awaiter","__extends","__generator","ExportMenu","Adapter","Sprite","Modal","List","Dictionary","DateFormatter","DurationFormatter","NumberFormatter","Language","Validatable","color","registry","options","StyleRule","getComputedStyle","$browser","$object","$net","$dom","$type","$log","$utils","$array","$math","$strings","pdfmakePromise","_pdfmake","a","pdfmake","vfs_fonts","global","_a","label","Promise","all","sent","window","pdfMake","vfs","default","fontFamilySrcRegexp","supportsBlobUri","navigator","msSaveOrOpenBlob","blobToDataUri","blob","resolve","reject","f","FileReader","onload","e","result","onerror","readAsDataURL","getCssRules","s","sheet","e_1","trys","push","cssRules","success","error","addEventListener","setTimeout","Error","loadStylesheet","doc","url","response","e_2","rules","load","console","createElement","textContent","nonce","setAttribute","head","appendChild","eachStylesheet","removeChild","topUrl","promises","length","i","rule","type","CSSRule","IMPORT_RULE","href","joinUrl","eachStylesheets","iframe","doc_1","document","src","contentDocument","map","styleSheets","location","Export","_super","container","_this","call","adapter","_formatOptions","_extraSprites","_validateSprites","dataFieldsOrder","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","_exportRunning","_prevHasData","_container","className","setKey","quality","fontSize","imageFormat","align","addURL","addColumnNames","indent","useLocale","emptyAs","addBOM","delay","printMethod","add","arg","formatOptions","getKey","merge","applyTheme","dispatchImmediately","Object","defineProperty","prototype","get","_menu","set","menu","removeDispose","language","_language","branch","unsupported","typeSupported","events","on","ev","export","close","_disablePointers","_releasePointers","obj","classPrefix","classNamePrefix","_disposers","enumerable","configurable","supported","getFormatOptions","hasValue","disabled","_hasData","print","indexOf","apply","data","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","event_1","func","event_2","event_3","handleCustom","isEnabled","showPreloader","hideTimeout","_timeoutTimeout","event_4","showTimeout","hideNonExportableSprites","restoreNonExportableSprites","hidePreloader","title","download","filePrefix","callback","callbackTarget","getFontFamilies","DOMURL","blobs","getDOMURL","FONT_FACE_RULE","cssText_1","cssText","exec","urls","split","after","fullUrl","url_1","e_3","webFontFilter","match","undefined","responseType","createObjectURL","then","filter","x","replace","join","includeExtras","prehidden","canvas","uri","e_4","awaitValidSprites","simplifiedImageExport","getCanvas","addExtras","toDataURL","getContentType","disposeCanvas","message","stack","warn","getImageAdvanced","advanced","middleLeft_1","middleTop_1","middleWidth_1","middleHeight_1","extraRight_1","extraBottom_1","extras","newCanvas","ctx_1","background","left_1","top_1","right_1","bottom_1","extraSprites","width","height","extraSprite","extra","extraCanvas","extraWidth","extraHeight","sprite","position","marginTop","marginRight","marginBottom","marginLeft","exporting","getCanvasAdvanced","crop","max","left","top","getDisposableCanvas","getContext","backgroundColor","findBackgroundColor","dom","fillStyle","toString","fillRect","each","drawImage","font","scale","pixelRatio","ctx","svg","img","pixelWidth","pixelHeight","findFont","findFontSize","getPixelRatio","getAdjustedScale","style","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","paper","defs","Blob","loadNewImage","revokeObjectURL","restoreRemovedObjects","canvg","config","useCORS","ignoreDimensions","scaleWidth","scaleHeight","fromString","render","body","adjWidth","adjHeight","widthScale","heightScale","maxWidth","maxHeight","min","minWidth","minHeight","el","images","count","image","querySelectorAll","getAttributeNS","XLINK","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","e_5","keepTainted","charset","e_6","btoa","setAttributeNS","placeholder","parent","parentElement","parentNode","node","insertBefore","pop","parent_1","element","cache","e_7","e_8","getCache","setCache","crossOrigin","Image","currentHref","removeAttribute","onabort","self","URL","webkitURL","encodeURI","encodeURIComponent","dimParams","Math","round","styleParams","fos","ms","PLACEHOLDER","rgba","isInternetExplorer","reg","RegExp","escapeForRgex","getBaseURI","XMLSerializer","serializeToString","addFont","paths","normal","path","bytes","bold","italics","bolditalics","name","defaultMargins","extraMargin","_b","_c","_d","pageSize","pageOrientation","pageMargins","defaultStyle","content","text","margin","translate","alignment","fit","getPageSizeFit","addData","getPDFData","table","extraFonts","createPdf","getDataUrl","dataFields","dataFieldsOrder_1","len","format","pivot","eachOrdered","key","val","dataRow","dataValue","convertToSpecialFormat","getPDFDataRow","b","ai","bi","headerRows","row","asIs","items","value","convertEmptyValue","item","margins","newMargins","sizes","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","fitSize","XLSX","wbOptions","sheetName","wb","dataFieldsOrder_2","xlsx","bookType","bookSST","normalizeExcelSheetName","SheetNames","Sheets","getExcelRow","utils","aoa_to_sheet","workbook","write","truncateWithEllipsis","csv","br","dataFieldsOrder_3","getCSVRow","reverse","separator","forceQuotes","search","html","dataFieldsOrder_4","tableClass","getHTMLRow","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","sourceData","_loop_1","json","newValue_1","field","JSON","stringify","keepOriginal","isDateField","Date","isDurationField","durationFormatter","durationFormat","isNumberField","numberFormat","numberFormatter","useTimestamps","getTime","toLocaleString","dateFormatter","dateFormat","isString","parse","fileName","parts","contentType","decoded","blob_1","chars","charCode","link_1","blob_2","url_2","url_3","link","idoc","msBlobDownloadSupport","shift","decodeURIComponent","atob","msSaveBlob","Array","Uint8Array","blobDownloadSupport","click","concat","linkDownloadSupport","legacyIE","showModal","display","open","execCommand","downloadSupport","res","div","innerHTML","getElementsByTagName","printViaCSS","printViaIframe","scroll","originalTitle","isIOS","documentElement","scrollTop","getShadowRoot","visibility","opacity","clipPath","test","userAgent","MSStream","dispose","contentWindow","currentColor","parent_2","_sprite","validateSprites","_data","_dataFields","generateDataFields","handleDataUpdated","hasData","invalidate","_dateFormatter","_dateFormat","_dateFields","dateFields","_numberFormatter","_numberFormat","_numberFields","numberFields","_durationFormatter","_durationFormat","_durationFields","durationFields","contains","_backgroundColor","_title","preloader","progress","hideModal","_modal","modal","svgContainer","SVGContainer","readerTitle","_canvg","_xlsx","setFormatOptions","_spriteInteractionsEnabled","interactionsEnabled","nonExportableSprites","isHidden","isHiding","visible","hide","show","index","invalid","once","processConfig","registeredClasses","isObject"],"mappings":"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,EAAvB;AACA;AACR;AACA;;AACQqG,IAAAA,KAAK,CAACI,aAAN,GAAsB,EAAtB;AACA;AACR;AACA;AACA;;AACQJ,IAAAA,KAAK,CAACK,gBAAN,GAAyB,EAAzB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQL,IAAAA,KAAK,CAACM,eAAN,GAAwB,EAAxB;AACA;AACR;AACA;AACA;;AACQN,IAAAA,KAAK,CAACO,kBAAN,GAA2B,IAA3B;AACA;AACR;AACA;AACA;AACA;AACA;AACA;;AACQP,IAAAA,KAAK,CAACQ,eAAN,GAAwB,IAAI9G,IAAJ,EAAxB;AACA;AACR;AACA;AACA;;AACQsG,IAAAA,KAAK,CAACS,cAAN,GAAuB,EAAvB;AACA;AACR;AACA;;AACQT,IAAAA,KAAK,CAACU,qBAAN,GAA8B,KAA9B;AACA;AACR;AACA;AACA;AACA;;AACQV,IAAAA,KAAK,CAACW,WAAN,GAAoB,UAApB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQX,IAAAA,KAAK,CAACY,WAAN,GAAoB,IAApB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQZ,IAAAA,KAAK,CAACa,SAAN,GAAkB,IAAlB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQb,IAAAA,KAAK,CAACc,mBAAN,GAA4B,IAA5B;AACA;AACR;AACA;AACA;;AACQd,IAAAA,KAAK,CAACe,YAAN,GAAqB,IAArB;AACAf,IAAAA,KAAK,CAACgB,cAAN,GAAuB,KAAvB;AACA;AACR;AACA;AACA;AACA;;AACQhB,IAAAA,KAAK,CAACiB,YAAN,GAAqB,KAArB;AACAjB,IAAAA,KAAK,CAACkB,UAAN,GAAmBnB,SAAnB;AACAC,IAAAA,KAAK,CAACmB,SAAN,GAAkB,QAAlB,CAlHuB,CAmHvB;;AACAnB,IAAAA,KAAK,CAACG,cAAN,CAAqBiB,MAArB,CAA4B,KAA5B,EAAmC,EAA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","sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n// This is used to cache the pdfmake loading\r\nvar pdfmakePromise;\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nfunction _pdfmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var a, pdfmake, vfs_fonts, global;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.all([\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n                    ])];\r\n                case 1:\r\n                    a = _a.sent();\r\n                    pdfmake = a[0];\r\n                    vfs_fonts = a[1];\r\n                    global = window;\r\n                    global.pdfMake = global.pdfMake || {};\r\n                    global.pdfMake.vfs = vfs_fonts.default;\r\n                    pdfmake.vfs = vfs_fonts.default;\r\n                    return [2 /*return*/, pdfmake];\r\n            }\r\n        });\r\n    });\r\n}\r\n// TODO better parsing\r\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\r\n// TODO better checks\r\nfunction supportsBlobUri() {\r\n    return window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob) {\r\n    return new Promise(function (resolve, reject) {\r\n        // TODO handle abort ?\r\n        var f = new FileReader();\r\n        f.onload = function (e) { resolve(f.result); };\r\n        f.onerror = function (e) { reject(e); };\r\n        f.readAsDataURL(blob);\r\n    });\r\n}\r\nfunction getCssRules(s) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var sheet, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    sheet = s.sheet;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 2, , 4]);\r\n                    return [2 /*return*/, sheet.cssRules];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (success, error) {\r\n                            s.addEventListener(\"load\", function () {\r\n                                success(sheet.cssRules);\r\n                            }, true);\r\n                            s.addEventListener(\"error\", function (e) {\r\n                                error(e);\r\n                            }, true);\r\n                            setTimeout(function () {\r\n                                error(new Error(\"Timeout while waiting for <style> to load\"));\r\n                            }, 10000);\r\n                        })];\r\n                case 3: \r\n                // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n                return [2 /*return*/, _a.sent()];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nfunction loadStylesheet(doc, url, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response, e_2, s, rules;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, $net.load(url)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    e_2 = _a.sent();\r\n                    console.error(\"Failed to load stylesheet\", url, e_2);\r\n                    return [2 /*return*/];\r\n                case 3:\r\n                    s = doc.createElement(\"style\");\r\n                    s.textContent = response.response;\r\n                    if (options.nonce != \"\") {\r\n                        s.setAttribute(\"nonce\", options.nonce);\r\n                    }\r\n                    doc.head.appendChild(s);\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, , 7, 8]);\r\n                    return [4 /*yield*/, getCssRules(s)];\r\n                case 5:\r\n                    rules = _a.sent();\r\n                    return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    doc.head.removeChild(s);\r\n                    return [7 /*endfinally*/];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheet(doc, topUrl, rules, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var promises, length, i, rule, url;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    promises = [];\r\n                    length = rules.length;\r\n                    for (i = 0; i < length; i++) {\r\n                        rule = rules[i];\r\n                        if (rule.type === CSSRule.IMPORT_RULE) {\r\n                            url = rule.href;\r\n                            if (url) {\r\n                                url = $utils.joinUrl(topUrl, url);\r\n                                promises.push(loadStylesheet(doc, url, f));\r\n                            }\r\n                        }\r\n                        else {\r\n                            f(topUrl, rule);\r\n                        }\r\n                    }\r\n                    if (!promises.length) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, Promise.all(promises)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheets(f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var iframe, doc_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    iframe = document.createElement(\"iframe\");\r\n                    // This causes it to use the same origin policy as the parent page\r\n                    iframe.src = \"about:blank\";\r\n                    // This tries to make it more accessible for screen readers\r\n                    iframe.setAttribute(\"title\", \"\");\r\n                    document.head.appendChild(iframe);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, , 3, 4]);\r\n                    doc_1 = iframe.contentDocument;\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\r\n                            var url = sheet.href;\r\n                            if (url == null) {\r\n                                return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\r\n                            }\r\n                            else {\r\n                                url = $utils.joinUrl(location.href, url);\r\n                                return loadStylesheet(doc_1, url, f);\r\n                            }\r\n                        }))];\r\n                case 2:\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    document.head.removeChild(iframe);\r\n                    return [7 /*endfinally*/];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nvar Export = /** @class */ (function (_super) {\r\n    __extends(Export, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Export(container) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Holds options for each format.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._formatOptions = new Dictionary();\r\n        /**\r\n         * Extra [[Sprite]] elements to include in exports.\r\n         */\r\n        _this._extraSprites = [];\r\n        /**\r\n         * A list of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         */\r\n        _this._validateSprites = [];\r\n        /**\r\n         * Holds an array of data field names. If set, exported data fields will try\r\n         * to maintain this order.\r\n         *\r\n         * If not set (default), the export will try to maintain the same order as\r\n         * in source data, or as in `dataFields` (if set).\r\n         *\r\n         * @since 4.9.7\r\n         */\r\n        _this.dataFieldsOrder = [];\r\n        /**\r\n         * Indicates whether data fields were generated dynamically (`true`) or\r\n         * if they were pre-set by the user (`false`).\r\n         */\r\n        _this._dynamicDataFields = true;\r\n        /**\r\n         * Holds a list of objects that were temporarily removed from the DOM while\r\n         * exporting. Those most probably are tainted images, or foreign objects that\r\n         * would otherwise prevent SVG to be converted to canvas.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._removedObjects = new List();\r\n        /**\r\n         * Holds references to the objects that were temporarily hidden when export\r\n         * started, so that we can reveal them back when export ends.\r\n         */\r\n        _this._hiddenObjects = [];\r\n        /**\r\n         * Indicates if non-exportable objects are now hidden;\r\n         */\r\n        _this._objectsAlreadyHidden = false;\r\n        /**\r\n         * Exported files will be prefixed with whatever it is set here.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._filePrefix = \"amCharts\";\r\n        /**\r\n         * If you are using web fonts (such as Google Fonts), your chart might be\r\n         * using them as well.\r\n         *\r\n         * Normally, exporting to image will require to download these fonts so the\r\n         * are carried over to exported image.\r\n         *\r\n         * This setting can be used to disable or enable this functionality.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useWebFonts = true;\r\n        /**\r\n         * Many modern displays have use more actual pixels per displayed pixel. This\r\n         * results in sharper images on screen. Unfortunately, when exported to a\r\n         * bitmap image of the sam width/height size it will lose those extra pixels,\r\n         * resulting in somewhat blurry image.\r\n         *\r\n         * This is why we are going to export images larger than they are, so that we\r\n         * don't lose any details.\r\n         *\r\n         * If you'd rather export images without change in size, set this to `false`.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useRetina = true;\r\n        /**\r\n         * By default Export will try to use built-in method for transforming chart\r\n         * into an image for download, then fallback to external library (canvg) for\r\n         * conversion if failed.\r\n         *\r\n         * Setting this to `false` will force use of external library for all export\r\n         * operations.\r\n         *\r\n         * It might be useful to turn off simplified export if you are using strict\r\n         * content security policies, that disallow images with blobs as their\r\n         * source.\r\n         *\r\n         * @default true\r\n         * @since 4.2.5\r\n         */\r\n        _this.useSimplifiedExport = true;\r\n        /**\r\n         * If export operation takes longer than milliseconds in this second, we will\r\n         * show a modal saying export operation took longer than expected.\r\n         */\r\n        _this.timeoutDelay = 2000;\r\n        _this._exportRunning = false;\r\n        /**\r\n         * Indicator used by [[Component]].\r\n         *\r\n         * @ignore\r\n         */\r\n        _this._prevHasData = false;\r\n        _this._container = container;\r\n        _this.className = \"Export\";\r\n        // Set default options\r\n        _this._formatOptions.setKey(\"png\", {});\r\n        _this._formatOptions.setKey(\"jpg\", {\r\n            quality: 0.8\r\n        });\r\n        _this._formatOptions.setKey(\"gif\", {});\r\n        _this._formatOptions.setKey(\"svg\", {});\r\n        _this._formatOptions.setKey(\"pdf\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            align: \"left\",\r\n            addURL: true,\r\n            addColumnNames: true\r\n        });\r\n        _this._formatOptions.setKey(\"json\", {\r\n            indent: 2,\r\n            useLocale: true\r\n        });\r\n        _this._formatOptions.setKey(\"csv\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\",\r\n            addBOM: true\r\n        });\r\n        _this._formatOptions.setKey(\"xlsx\", {\r\n            addColumnNames: true,\r\n            useLocale: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"html\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"pdfdata\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            addURL: true,\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"print\", {\r\n            delay: 500,\r\n            printMethod: \"iframe\"\r\n        });\r\n        // Add options adapter\r\n        _this.adapter.add(\"options\", function (arg) {\r\n            var formatOptions = _this._formatOptions.getKey(arg.type);\r\n            if (arg.options) {\r\n                arg.options = $object.merge(formatOptions, arg.options);\r\n            }\r\n            else {\r\n                arg.options = formatOptions;\r\n            }\r\n            return arg;\r\n        });\r\n        _this.applyTheme();\r\n        _this.dispatchImmediately(\"inited\");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Export.prototype, \"menu\", {\r\n        /**\r\n         * @return ExportMenu instance\r\n         */\r\n        get: function () {\r\n            return this._menu;\r\n        },\r\n        /**\r\n         * An instance of [[ExportMenu]].\r\n         *\r\n         * To add an export menu to a chart, set this to a new instance of\r\n         * [[ExportMenu]].\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     \"menu\": {}\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param menu  ExportMenu instance\r\n         */\r\n        set: function (menu) {\r\n            var _this = this;\r\n            if (this._menu) {\r\n                this.removeDispose(this._menu);\r\n            }\r\n            this._menu = menu;\r\n            // Set container and language\r\n            this._menu.container = this.container;\r\n            this._menu.language = this._language;\r\n            // Add adapter to check for browser support\r\n            this._menu.adapter.add(\"branch\", function (arg) {\r\n                arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\r\n                return arg;\r\n            });\r\n            // Add click events\r\n            this._menu.events.on(\"hit\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"enter\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"over\", function (ev) {\r\n                _this._disablePointers();\r\n            });\r\n            this._menu.events.on(\"out\", function (ev) {\r\n                setTimeout(function () { _this._releasePointers(); }, 10);\r\n            });\r\n            // Dispatch event\r\n            this.dispatchImmediately(\"menucreated\");\r\n            // Prefix with Sprite's class name\r\n            this._menu.adapter.add(\"classPrefix\", function (obj) {\r\n                obj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n                return obj;\r\n            });\r\n            // Add menu to disposers so that it's destroyed when Export is disposed\r\n            this._disposers.push(this._menu);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if this specific menu item type is supported by current system.\r\n     *\r\n     * @param type  Menu item type\r\n     * @return `false` if not supported\r\n     */\r\n    Export.prototype.typeSupported = function (type) {\r\n        var supported = true;\r\n        var options = this.getFormatOptions(type);\r\n        if ($type.hasValue(options) && options.disabled) {\r\n            supported = false;\r\n        }\r\n        else if (type === \"pdf\") {\r\n            //supported = this.downloadSupport();\r\n        }\r\n        else if (type === \"xlsx\") {\r\n            //supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n            supported = this._hasData() ? true : false;\r\n        }\r\n        else if (type == \"print\" && !window.print) {\r\n            supported = false;\r\n        }\r\n        else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n            supported = false;\r\n        }\r\n        return this.adapter.apply(\"supported\", {\r\n            supported: supported,\r\n            type: type\r\n        }).supported;\r\n    };\r\n    /**\r\n     * Checks if data is available.\r\n     *\r\n     * @return Has data?\r\n     */\r\n    Export.prototype._hasData = function () {\r\n        return this.data && this.data.length;\r\n    };\r\n    /**\r\n     * Get function to handle export for particular format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype._getFunction = function (type) {\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n            case \"jpg\":\r\n                return this.getImage;\r\n            case \"svg\":\r\n                return this.getSVG;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                return this.getPDF;\r\n            case \"xlsx\":\r\n                return this.getExcel;\r\n            case \"csv\":\r\n                return this.getCSV;\r\n            case \"json\":\r\n                return this.getJSON;\r\n            case \"html\":\r\n                return this.getHTML;\r\n            case \"print\":\r\n                return this.getPrint;\r\n            default:\r\n                return this.unsupported;\r\n        }\r\n    };\r\n    /**\r\n     * Initiates export procedure.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return `true` if export was successful\r\n     * @async\r\n     */\r\n    Export.prototype.export = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event_1, func, data, event_2, event_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check if it's a custom item, and do nothing or execute custom callback\r\n                        if (type == \"custom\") {\r\n                            this.handleCustom(options);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        // Set export running flag\r\n                        this._exportRunning = true;\r\n                        // Dispatch event\r\n                        if (this.events.isEnabled(\"exportstarted\")) {\r\n                            event_1 = {\r\n                                \"type\": \"exportstarted\",\r\n                                \"target\": this,\r\n                                \"format\": type,\r\n                                \"options\": options\r\n                            };\r\n                            this.events.dispatchImmediately(\"exportstarted\", event_1);\r\n                        }\r\n                        // Schedule a preloader\r\n                        this.showPreloader();\r\n                        // Schedule a timeout\r\n                        if (this.timeoutDelay) {\r\n                            this.hideTimeout();\r\n                            this._timeoutTimeout = this.setTimeout(function () {\r\n                                // Dispatch event\r\n                                if (_this.events.isEnabled(\"exporttimedout\")) {\r\n                                    var event_4 = {\r\n                                        \"type\": \"exporttimedout\",\r\n                                        \"target\": _this,\r\n                                        \"format\": type,\r\n                                        \"options\": options\r\n                                    };\r\n                                    _this.events.dispatchImmediately(\"exporttimedout\", event_4);\r\n                                }\r\n                                // Show modal\r\n                                _this.showTimeout();\r\n                            }, this.timeoutDelay);\r\n                        }\r\n                        // Hide items that should not be exported\r\n                        this.hideNonExportableSprites();\r\n                        func = this._getFunction(type);\r\n                        // Give chance for plugins to override both function and options\r\n                        options = this.adapter.apply(\"options\", {\r\n                            options: options,\r\n                            type: type\r\n                        }).options;\r\n                        func = this.adapter.apply(\"exportFunction\", {\r\n                            func: func,\r\n                            type: type,\r\n                            options: options\r\n                        }).func;\r\n                        return [4 /*yield*/, func.call(this, type, options)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        // Release pointers\r\n                        this._exportRunning = false;\r\n                        this._releasePointers();\r\n                        // Restore temporarily hidden elements\r\n                        this.restoreNonExportableSprites();\r\n                        if (data) {\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"exportfinished\")) {\r\n                                event_2 = {\r\n                                    \"type\": \"exportfinished\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"exportfinished\", event_2);\r\n                            }\r\n                            // Hide preloader and timeout modals\r\n                            this.hidePreloader();\r\n                            this.hideTimeout();\r\n                            if (this.menu) {\r\n                                this.menu.close();\r\n                            }\r\n                            // Download or print\r\n                            if (type === \"print\") {\r\n                                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\r\n                                        title: this.title,\r\n                                        options: options\r\n                                    }).title)];\r\n                            }\r\n                            else {\r\n                                if (type == \"pdfdata\") {\r\n                                    return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\r\n                                }\r\n                                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type, (options && options.addBOM))];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Throw exception?\r\n                            // @todo\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"error\")) {\r\n                                event_3 = {\r\n                                    \"type\": \"error\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"error\", event_3);\r\n                            }\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that should handle unsupported export types.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.unsupported = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // TODO should this return `undefined`?\r\n                return [2 /*return*/, \"\"];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles click on a \"custom\" menu item.\r\n     *\r\n     * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.handleCustom = function (options) {\r\n        if ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n            options.callback.call(options.callbackTarget || this, options);\r\n        }\r\n    };\r\n    /**\r\n     * Requests a Print of the chart.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPrint = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.getImage(\"png\", options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return String which can be embedded directly into a <style> element.\r\n     * @async\r\n     */\r\n    Export.prototype.getFontFamilies = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var DOMURL, blobs, promises, a;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        DOMURL = this.getDOMURL();\r\n                        blobs = [];\r\n                        promises = [];\r\n                        return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\r\n                                if (rule.type === CSSRule.FONT_FACE_RULE) {\r\n                                    var cssText_1 = rule.cssText;\r\n                                    // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n                                    var src = fontFamilySrcRegexp.exec(cssText_1);\r\n                                    if (src !== null) {\r\n                                        // TODO make this faster (don't create Promises for non-url stuff)\r\n                                        var urls = src[1].split(/ *, */).map(function (url) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var a, after, fullUrl, response, url_1, e_3;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n                                                        if (!(a === null)) return [3 /*break*/, 1];\r\n                                                        return [2 /*return*/, url];\r\n                                                    case 1:\r\n                                                        after = a[2];\r\n                                                        fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n                                                        if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\r\n                                                            return [2 /*return*/, null];\r\n                                                        }\r\n                                                        _a.label = 2;\r\n                                                    case 2:\r\n                                                        _a.trys.push([2, 7, , 8]);\r\n                                                        return [4 /*yield*/, $net.load(fullUrl, undefined, { responseType: \"blob\" })];\r\n                                                    case 3:\r\n                                                        response = _a.sent();\r\n                                                        if (!supportsBlobUri()) return [3 /*break*/, 4];\r\n                                                        url_1 = DOMURL.createObjectURL(response.blob);\r\n                                                        blobs.push(url_1);\r\n                                                        return [3 /*break*/, 6];\r\n                                                    case 4: return [4 /*yield*/, blobToDataUri(response.blob)];\r\n                                                    case 5:\r\n                                                        url_1 = _a.sent();\r\n                                                        _a.label = 6;\r\n                                                    case 6: \r\n                                                    // TODO should it should escape the URI ?\r\n                                                    return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\r\n                                                    case 7:\r\n                                                        e_3 = _a.sent();\r\n                                                        console.error(\"Failed to load font\", fullUrl, e_3);\r\n                                                        return [2 /*return*/, null];\r\n                                                    case 8: return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); });\r\n                                        promises.push(Promise.all(urls).then(function (a) {\r\n                                            a = a.filter(function (x) { return x != null; });\r\n                                            if (a.length === 0) {\r\n                                                return \"\";\r\n                                            }\r\n                                            else {\r\n                                                return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n                                            }\r\n                                        }));\r\n                                    }\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                blobs: blobs,\r\n                                cssText: a.filter(function (x) { return !!x; }).join(\"\\n\")\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Produces image output from the element.\r\n     *\r\n     * Converts to a `Canvas` first, then produces an image to download.\r\n     *\r\n     * This is an asynchronous function. Rather than returning a result, it\r\n     * returns a Promise.\r\n     *\r\n     * You can use `await` notion from other async functions, or `then()`\r\n     * anywhere else.\r\n     *\r\n     * ```TypeScript\r\n     * let img;\r\n     *\r\n     * // Async\r\n     * img = await chart.exporting.getImage( \"png\" );\r\n     *\r\n     * // Sync\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     * ```JavaScript\r\n     * var img;\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     *\r\n     * @param  type           Image format\r\n     * @param  options        Options\r\n     * @param  includeExtras  Should extra sprites be included if set?\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getImage = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri, e_4, data, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.simplifiedImageExport()];\r\n                    case 2:\r\n                        if (!_a.sent()) return [3 /*break*/, 10];\r\n                        canvas = void 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 9]);\r\n                        return [4 /*yield*/, this.getCanvas(options)];\r\n                    case 4:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options)];\r\n                    case 5:\r\n                        canvas = _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                    case 7:\r\n                        e_4 = _a.sent();\r\n                        console.error(e_4.message + \"\\n\" + e_4.stack);\r\n                        $log.warn(\"Simple export failed, falling back to advanced export\");\r\n                        if (canvas) {\r\n                            this.disposeCanvas(canvas);\r\n                        }\r\n                        return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 8:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 9: return [3 /*break*/, 12];\r\n                    case 10: return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 11:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds extra elements to the canvas.\r\n     *\r\n     * @param  canvas   Original canvas\r\n     * @param  options  Options\r\n     */\r\n    Export.prototype.addExtras = function (canvas, options, advanced) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.extraSprites.length) return [3 /*break*/, 2];\r\n                        middleLeft_1 = 0;\r\n                        middleTop_1 = 0;\r\n                        middleWidth_1 = canvas.width;\r\n                        middleHeight_1 = canvas.height;\r\n                        extraRight_1 = 0;\r\n                        extraBottom_1 = 0;\r\n                        return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var extra, extraCanvas, extraWidth, extraHeight;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            if (extraSprite instanceof Sprite) {\r\n                                                extra = {\r\n                                                    sprite: extraSprite,\r\n                                                    position: \"bottom\"\r\n                                                };\r\n                                            }\r\n                                            else {\r\n                                                extra = extraSprite;\r\n                                            }\r\n                                            // Set defaults\r\n                                            extra.position = extra.position || \"bottom\";\r\n                                            extra.marginTop = extra.marginTop || 0;\r\n                                            extra.marginRight = extra.marginRight || 0;\r\n                                            extra.marginBottom = extra.marginBottom || 0;\r\n                                            extra.marginLeft = extra.marginLeft || 0;\r\n                                            if (!advanced) return [3 /*break*/, 2];\r\n                                            return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\r\n                                        case 1:\r\n                                            extraCanvas = _a.sent();\r\n                                            return [3 /*break*/, 4];\r\n                                        case 2: return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\r\n                                        case 3:\r\n                                            extraCanvas = _a.sent();\r\n                                            _a.label = 4;\r\n                                        case 4:\r\n                                            extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n                                            extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n                                            if (extra.position == \"top\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                middleTop_1 += extraHeight;\r\n                                            }\r\n                                            else if (extra.position == \"right\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                extraRight_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position == \"left\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                middleLeft_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position === \"bottom\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                extraBottom_1 += extraHeight;\r\n                                            }\r\n                                            return [2 /*return*/, {\r\n                                                    canvas: extraCanvas,\r\n                                                    position: extra.position,\r\n                                                    left: extra.marginLeft,\r\n                                                    top: extra.marginTop,\r\n                                                    width: extraWidth,\r\n                                                    height: extraHeight\r\n                                                }];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 1:\r\n                        extras = _a.sent();\r\n                        newCanvas = this.getDisposableCanvas();\r\n                        newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\r\n                        newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\r\n                        ctx_1 = newCanvas.getContext(\"2d\");\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        if (background) {\r\n                            ctx_1.fillStyle = background.toString();\r\n                            ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n                        }\r\n                        left_1 = middleLeft_1;\r\n                        top_1 = middleTop_1;\r\n                        right_1 = left_1 + middleWidth_1;\r\n                        bottom_1 = top_1 + middleHeight_1;\r\n                        // Radiates outwards from center\r\n                        $array.each(extras, function (extra) {\r\n                            if (extra.position == \"top\") {\r\n                                top_1 -= extra.height;\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\r\n                            }\r\n                            else if (extra.position == \"right\") {\r\n                                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\r\n                                right_1 += extra.width;\r\n                            }\r\n                            else if (extra.position == \"left\") {\r\n                                left_1 -= extra.width;\r\n                                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\r\n                            }\r\n                            else if (extra.position === \"bottom\") {\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\r\n                                bottom_1 += extra.height;\r\n                            }\r\n                            _this.disposeCanvas(extra.canvas);\r\n                        });\r\n                        ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\r\n                        return [2 /*return*/, newCanvas];\r\n                    case 2: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]].\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvas = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        DOMURL = this.getDOMURL();\r\n                        url = null;\r\n                        blobs = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 4, 5]);\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        // Create canvas and its 2D context\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = width * scale + 'px';\r\n                        canvas.style.height = height * scale + 'px';\r\n                        canvas.width = width * scale;\r\n                        canvas.height = height * scale;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        // if (pixelRatio != 1) {\r\n                        // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n                        // }\r\n                        // Add background if necessary\r\n                        if (background) {\r\n                            ctx.fillStyle = background.toString();\r\n                            ctx.fillRect(0, 0, width * scale, height * scale);\r\n                        }\r\n                        promises = [];\r\n                        if (this.useWebFonts) {\r\n                            // TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n                            promises.push(this.getFontFamilies().then(function (fonts) {\r\n                                blobs = fonts.blobs;\r\n                                return fonts.cssText;\r\n                            }));\r\n                        }\r\n                        promises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n                        promises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        svg = new Blob([data], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        return [4 /*yield*/, this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        // Draw image on canvas\r\n                        ctx.drawImage(img, 0, 0);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        if (url !== null) {\r\n                            DOMURL.revokeObjectURL(url);\r\n                        }\r\n                        if (blobs !== null) {\r\n                            $array.each(blobs, function (url) {\r\n                                DOMURL.revokeObjectURL(url);\r\n                            });\r\n                        }\r\n                        // Restore replaced tainted images in DOM\r\n                        this.restoreRemovedObjects();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]] using canvg.\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvasAdvanced = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        // Convert external images to data uris\r\n                        return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\r\n                    case 1:\r\n                        // Convert external images to data uris\r\n                        _a.sent();\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        return [4 /*yield*/, this.canvg];\r\n                    case 2:\r\n                        canvg = _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = (width * pixelRatio * scale) + 'px';\r\n                        canvas.style.height = (height * pixelRatio * scale) + 'px';\r\n                        canvas.width = width * pixelRatio * scale;\r\n                        canvas.height = height * pixelRatio * scale;\r\n                        config = {\r\n                            //ignoreDimensions: true,\r\n                            useCORS: true\r\n                        };\r\n                        if (pixelRatio != 1) {\r\n                            config.ignoreDimensions = true;\r\n                            config.scaleWidth = width * pixelRatio * scale;\r\n                            config.scaleHeight = height * pixelRatio * scale;\r\n                        }\r\n                        return [4 /*yield*/, canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n     * export an image using its functions.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Image format\r\n     * @param options  Options\r\n     * @return Data uri\r\n     */\r\n    Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        return [4 /*yield*/, this.getCanvasAdvanced(options)];\r\n                    case 1:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options, true)];\r\n                    case 2:\r\n                        canvas = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a `<canvas>` element and returns it.\r\n     *\r\n     * @return Canvas element\r\n     */\r\n    Export.prototype.getDisposableCanvas = function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        document.body.appendChild(canvas);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Removes canvas.\r\n     *\r\n     * @param canvas  Canvas element\r\n     */\r\n    Export.prototype.disposeCanvas = function (canvas) {\r\n        document.body.removeChild(canvas);\r\n    };\r\n    /**\r\n     * Returns pixel ratio for retina displays.\r\n     *\r\n     * @return Pixel ratio\r\n     */\r\n    Export.prototype.getPixelRatio = function (options) {\r\n        // const scale = options && options.scale ? options.scale : 1;\r\n        // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n        return this.useRetina ? $utils.getPixelRatio() : 1;\r\n    };\r\n    /**\r\n     * Calculates adjusted scale if image does not fit or is larger than min/max\r\n     * settings.\r\n     *\r\n     * @param   width    Width of the source image\r\n     * @param   height   Height of the source image\r\n     * @param   scale    Current scale\r\n     * @param   options  Options\r\n     * @return           Adjusted scale\r\n     */\r\n    Export.prototype.getAdjustedScale = function (width, height, scale, options) {\r\n        if (!options) {\r\n            return scale;\r\n        }\r\n        var adjWidth = width * scale;\r\n        var adjHeight = width * scale;\r\n        // Check max restrictions\r\n        var widthScale;\r\n        var heightScale;\r\n        if (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n            widthScale = options.maxWidth / width;\r\n        }\r\n        if (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n            heightScale = options.maxHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.min(widthScale, heightScale);\r\n        }\r\n        // Check min restrictions\r\n        if (options.minWidth && (adjWidth < options.minWidth)) {\r\n            widthScale = options.minWidth / width;\r\n        }\r\n        if (options.minHeight && (adjHeight < options.minHeight)) {\r\n            heightScale = options.minHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.max(widthScale, heightScale);\r\n        }\r\n        return scale;\r\n    };\r\n    /**\r\n     * Converts all `<image>` tags in SVG to use data uris instead of external\r\n     * URLs\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.imagesToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var images, promises, count, i, image, href;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        images = el.querySelectorAll(\"image\");\r\n                        if (!images.length) return [3 /*break*/, 2];\r\n                        promises = [];\r\n                        // There are images, process each of them\r\n                        for (count = images.length, i = 0; i < count; i++) {\r\n                            image = images[i];\r\n                            href = image.getAttributeNS(Export.XLINK, \"href\");\r\n                            // no href?\r\n                            if (!href) {\r\n                                continue;\r\n                            }\r\n                            if (href.indexOf(\"data:image\") !== -1) {\r\n                                // Ignore image if it's already in Data URI format\r\n                            }\r\n                            else {\r\n                                // SVG or bitmap image?\r\n                                if (href.indexOf(\".svg\") !== -1) {\r\n                                    promises.push(this.svgToDataURI(image, options));\r\n                                }\r\n                                else {\r\n                                    promises.push(this.imageToDataURI(image, options));\r\n                                }\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * `foreignObject` elements cannot be exported. This function hides them\r\n     * temprarily. In the future it might try to convert them to SVG to make them\r\n     * exportable.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.prepForeignObjects = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objects, count, i;\r\n            return __generator(this, function (_a) {\r\n                objects = el.querySelectorAll(\"foreignObject\");\r\n                if (objects.length) {\r\n                    // There are foreign objects, process each of them\r\n                    for (count = objects.length, i = 0; i < count; i++) {\r\n                        this.temporarilyRemoveObject(objects[i]);\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n     * external file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG element\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.imageToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var img, canvas, uri, e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\r\n                    case 1:\r\n                        // Create image\r\n                        img = _a.sent();\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        // Draw new image on it via `toDataURL`\r\n                        canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n                        // Replace image `href` with data uri\r\n                        // If we got to this point it means image has loaded, however we might\r\n                        // still get an error with `toDataURL()`\r\n                        try {\r\n                            uri = canvas.toDataURL();\r\n                            el.setAttribute(\"href\", uri);\r\n                            return [2 /*return*/, uri];\r\n                        }\r\n                        catch (e) {\r\n                            // Give up and temporarily remove the element href temporarily\r\n                            if (options.keepTainted !== false) {\r\n                                /*this._removedObjects.push({\r\n                                    \"element\": el,\r\n                                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                                });\r\n                                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                                this.temporarilyRemoveObject(el);\r\n                            }\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_5 = _a.sent();\r\n                        // Give up and temporarily remove the element's href\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n     * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el        An SVG element\r\n     * @param options   Options\r\n     */\r\n    Export.prototype.svgToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var href, data, charset, uri, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        href = el.getAttributeNS(Export.XLINK, \"href\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, $net.load(href)];\r\n                    case 2:\r\n                        data = _a.sent();\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"base64\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"svgToDataURI\", {\r\n                            data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n                            options: options\r\n                        }).data;\r\n                        el.setAttributeNS(Export.XLINK, \"href\", uri);\r\n                        return [2 /*return*/, uri];\r\n                    case 3:\r\n                        e_6 = _a.sent();\r\n                        // Disable temporarily\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": href\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Temporarily removes element from DOM, and replaces it with a dummy\r\n     * placeholder, as well as stores it for later restoration.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el Node\r\n     */\r\n    Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\r\n        // Get parent\r\n        var parent = el.parentElement || el.parentNode;\r\n        // Create a placeholder group element if it has not been passed in\r\n        if (!placeholder) {\r\n            placeholder = this.sprite.paper.add(\"g\").node;\r\n        }\r\n        parent.insertBefore(placeholder, el);\r\n        // Check if we have a textContents we can replace with\r\n        // @todo Perhaps we should explore alternatives to creating text nodes\r\n        // i.e. creating a text version of the HTML-based Text, just for export\r\n        // purposes. Converting HTML into SVG is very complicated\r\n        if (el.textContent) {\r\n            /*let text = this.sprite.paper.add(\"text\").node;\r\n            text.textContent = el.textContent;\r\n            placeholder.appendChild(text);\r\n\r\n            // Copy properties from the removing element to the placeholder\r\n            $dom.copyAttributes(el, placeholder);*/\r\n        }\r\n        // Remove the old element\r\n        parent.removeChild(el);\r\n        // Log removed item\r\n        this._removedObjects.push({\r\n            \"element\": el,\r\n            \"placeholder\": placeholder\r\n        });\r\n    };\r\n    /**\r\n     * Restores all (possibly tainted or unsupported) objects that were\r\n     * temporarily removed when exporting.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.restoreRemovedObjects = function () {\r\n        var obj;\r\n        while (true) {\r\n            obj = this._removedObjects.pop();\r\n            if (!obj) {\r\n                break;\r\n            }\r\n            //obj.element.setAttribute(\"href\", obj.originalHref);\r\n            var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n            parent_1.insertBefore(obj.element, obj.placeholder);\r\n            //parent.removeChild(obj.placeholder);\r\n        }\r\n    };\r\n    /**\r\n     * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n     * document does not contain any external images.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return `true` if simplified export can be used\r\n     */\r\n    Export.prototype.simplifiedImageExport = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.useSimplifiedExport === false) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        cache = registry.getCache(\"simplifiedImageExport\");\r\n                        if (cache === false || cache === true) {\r\n                            return [2 /*return*/, cache];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = 1;\r\n                        canvas.height = 1;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        DOMURL = this.getDOMURL();\r\n                        svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        img = void 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_7 = _a.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 5:\r\n                        ctx.drawImage(img, 0, 0);\r\n                        DOMURL.revokeObjectURL(url);\r\n                        try {\r\n                            //let uri = canvas.toDataURL(\"image/png\");\r\n                            registry.setCache(\"simplifiedImageExport\", true);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        catch (e) {\r\n                            registry.setCache(\"simplifiedImageExport\", false);\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_8 = _a.sent();\r\n                        registry.setCache(\"simplifiedImageExport\", false);\r\n                        return [2 /*return*/, false];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a new `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param url          URL of the image\r\n     * @param width        Width (px)\r\n     * @param height       Height (px)\r\n     * @param crossOrigin  Cross-Origin setting\r\n     * @return Promise\r\n     */\r\n    Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\r\n        return new Promise(function (success, error) {\r\n            // New image\r\n            var image;\r\n            if (width && height) {\r\n                image = new Image(width, height);\r\n            }\r\n            else {\r\n                image = new Image();\r\n            }\r\n            // Set crossorigin\r\n            if (crossOrigin) {\r\n                image.setAttribute(\"crossOrigin\", crossOrigin);\r\n            }\r\n            // Report success on load\r\n            image.onload = function () {\r\n                success(image);\r\n            };\r\n            function onerror() {\r\n                // Error occurred. Just in case it's the crossOrigin issue, let's try\r\n                // stripping off this attribute and trying again\r\n                if (crossOrigin) {\r\n                    // Retain old uri\r\n                    var currentHref = image.src;\r\n                    // Set up another `onerror` to handle situations where image is not\r\n                    // loadable at all (i.e. protected by CORS)\r\n                    image.onerror = function () {\r\n                        // Nope, no luck\r\n                        error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                    };\r\n                    // remove the `crossOrigin` attribute\r\n                    image.removeAttribute(\"crossorigin\");\r\n                    // retry\r\n                    image.src = \"\";\r\n                    image.src = currentHref;\r\n                }\r\n                else {\r\n                    error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                }\r\n            }\r\n            // Set image error handlers\r\n            image.onabort = onerror;\r\n            image.onerror = onerror;\r\n            // Trigger load\r\n            image.src = url;\r\n        });\r\n    };\r\n    /**\r\n     * Returns current DOM URL.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return URL\r\n     */\r\n    Export.prototype.getDOMURL = function () {\r\n        return self.URL || self.webkitURL || self;\r\n    };\r\n    /**\r\n     * Returns an SVG representation of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getSVG = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"svg\");\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"charset=utf-8\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"getSVG\", {\r\n                            data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n                            options: options\r\n                        }).data;\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n     * necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param svg       Input SVG\r\n     * @param options   Options\r\n     * @param width     Width of the SVG viewport\r\n     * @param height    Height of the SVG viewport\r\n     * @param font      Font family to use as a base\r\n     * @param fontSize  Font size to use as a base\r\n     * @return Output SVG\r\n     * @todo Add style params to existing <svg>\r\n     */\r\n    Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\r\n        // Construct width/height params\r\n        var dimParams = \"\";\r\n        if (width) {\r\n            dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        if (height) {\r\n            dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        // Apply font settings\r\n        var styleParams = \"\";\r\n        if (font) {\r\n            styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n        }\r\n        if (fontSize) {\r\n            styleParams += \"font-size: \" + fontSize + \";\";\r\n        }\r\n        // Scale\r\n        if (scale) {\r\n            dimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n        }\r\n        // Remove foreign objects temporarily\r\n        var fos = [];\r\n        var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n        if (ms) {\r\n            for (var i = 0; i < ms.length; i++) {\r\n                svg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n                fos.push(ms[i]);\r\n            }\r\n        }\r\n        // Add missing <svg> enclosure\r\n        if (!svg.match(/<svg/)) {\r\n            svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n        }\r\n        else {\r\n            if (dimParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }\r\n            /*if (styleParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }*/\r\n        }\r\n        if (background) {\r\n            svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n            //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n        }\r\n        if ($browser.isInternetExplorer()) {\r\n            // IE can't handle exporting <feColorMatrix> for some reason\r\n            svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n        }\r\n        // Remove base uri-related stuff\r\n        var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n        svg = svg.replace(reg, \"url(#\");\r\n        // Remove escaped quotes in url() parameters\r\n        svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n        // Put foreignObjects back in\r\n        if (fos.length) {\r\n            for (var i = 0; i < fos.length; i++) {\r\n                svg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n            }\r\n        }\r\n        svg = this.adapter.apply(\"normalizeSVG\", {\r\n            data: svg,\r\n            options: options\r\n        }).data;\r\n        return svg;\r\n    };\r\n    /**\r\n     * Serializes an element and returns its contents.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element  An element to serialize\r\n     * @return A serialized XML\r\n     */\r\n    Export.prototype.serializeElement = function (element) {\r\n        return new XMLSerializer().serializeToString(element);\r\n    };\r\n    /**\r\n     * Returns a PDF containing chart image.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Account for header when calculating vertical fit\r\n     */\r\n    Export.prototype.getPDF = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            function addFont(font) {\r\n                var paths = {};\r\n                paths.normal = font.normal.path;\r\n                vfs[font.normal.path] = font.normal.bytes;\r\n                if (font.bold) {\r\n                    paths.bold = font.bold.path;\r\n                    vfs[font.bold.path] = font.bold.bytes;\r\n                }\r\n                else {\r\n                    paths.bold = font.normal.path;\r\n                }\r\n                if (font.italics) {\r\n                    paths.italics = font.italics.path;\r\n                    vfs[font.italics.path] = font.italics.bytes;\r\n                }\r\n                else {\r\n                    paths.italics = font.normal.path;\r\n                }\r\n                if (font.bolditalics) {\r\n                    paths.bolditalics = font.bolditalics.path;\r\n                    vfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n                }\r\n                else {\r\n                    paths.bolditalics = font.normal.path;\r\n                }\r\n                fonts[font.name] = paths;\r\n            }\r\n            var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\r\n                    case 1:\r\n                        image = _d.sent();\r\n                        return [4 /*yield*/, this.pdfmake];\r\n                    case 2:\r\n                        pdfmake = _d.sent();\r\n                        defaultMargins = [30, 30, 30, 30];\r\n                        doc = {\r\n                            pageSize: options.pageSize || \"A4\",\r\n                            pageOrientation: options.pageOrientation || \"portrait\",\r\n                            pageMargins: options.pageMargins || defaultMargins,\r\n                            defaultStyle: {\r\n                                font: options.font ? options.font.name : undefined\r\n                            },\r\n                            //header: <any>[],\r\n                            content: []\r\n                        };\r\n                        title = this.adapter.apply(\"title\", {\r\n                            title: this.title,\r\n                            options: options\r\n                        }).title;\r\n                        extraMargin = 0;\r\n                        if (title) {\r\n                            doc.content.push({\r\n                                text: title,\r\n                                fontSize: options.fontSize || 14,\r\n                                bold: true,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for title\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add page URL?\r\n                        if (options.addURL) {\r\n                            doc.content.push({\r\n                                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n                                fontSize: options.fontSize,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for URL\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add image\r\n                        if (type != \"pdfdata\") {\r\n                            doc.content.push({\r\n                                image: image,\r\n                                alignment: options.align || \"left\",\r\n                                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n                            });\r\n                        }\r\n                        if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\r\n                        _b = (_a = doc.content).push;\r\n                        _c = {};\r\n                        return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\r\n                    case 3:\r\n                        _b.apply(_a, [(_c.table = _d.sent(),\r\n                                _c.fontSize = options.fontSize || 14,\r\n                                _c)]);\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        // Apply adapters\r\n                        doc = this.adapter.apply(\"pdfmakeDocument\", {\r\n                            doc: doc,\r\n                            options: options\r\n                        }).doc;\r\n                        fonts = null;\r\n                        vfs = null;\r\n                        if (options.font) {\r\n                            fonts = {};\r\n                            vfs = {};\r\n                            addFont(options.font);\r\n                            if (options.extraFonts) {\r\n                                $array.each(options.extraFonts, addFont);\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, new Promise(function (success, error) {\r\n                                pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\r\n                                    success(uri);\r\n                                });\r\n                            })];\r\n                    case 5: \r\n                    // Create PDF\r\n                    return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPDFData = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var content, dataFields, data, dataFieldsOrder_1, len, i;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                content = {\r\n                    \"body\": []\r\n                };\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"pdf\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"pdfdata\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\r\n                    }, function (a, b) {\r\n                        //console.log(a, b)\r\n                        var ai = dataFieldsOrder_1.indexOf(a);\r\n                        var bi = dataFieldsOrder_1.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return 1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n                        content.headerRows = 1;\r\n                    }\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        content.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n                    }\r\n                }\r\n                return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\r\n                        table: content,\r\n                        options: options\r\n                    }).table];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of data for use in PDF data table (pdfmake).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @since 4.7.0\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated Data line\r\n     */\r\n    Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"pdfdata\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            item = \"\" + item;\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns fit dimensions for available page sizes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pageSize Page size\r\n     * @return `[width, height]` in pixels\r\n     */\r\n    Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\r\n        if (extraMargin === void 0) { extraMargin = 0; }\r\n        // Check margins\r\n        var newMargins = [0, 0, 0, 0];\r\n        if (typeof margins == \"number\") {\r\n            newMargins = [margins, margins, margins, margins];\r\n        }\r\n        else if (margins.length == 2) {\r\n            newMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n        }\r\n        else if (margins.length == 4) {\r\n            newMargins = margins;\r\n        }\r\n        // Define available page sizes\r\n        var sizes = {\r\n            \"4A0\": [4767.87, 6740.79],\r\n            \"2A0\": [3370.39, 4767.87],\r\n            A0: [2383.94, 3370.39],\r\n            A1: [1683.78, 2383.94],\r\n            A2: [1190.55, 1683.78],\r\n            A3: [841.89, 1190.55],\r\n            A4: [595.28, 841.89],\r\n            A5: [419.53, 595.28],\r\n            A6: [297.64, 419.53],\r\n            A7: [209.76, 297.64],\r\n            A8: [147.40, 209.76],\r\n            A9: [104.88, 147.40],\r\n            A10: [73.70, 104.88],\r\n            B0: [2834.65, 4008.19],\r\n            B1: [2004.09, 2834.65],\r\n            B2: [1417.32, 2004.09],\r\n            B3: [1000.63, 1417.32],\r\n            B4: [708.66, 1000.63],\r\n            B5: [498.90, 708.66],\r\n            B6: [354.33, 498.90],\r\n            B7: [249.45, 354.33],\r\n            B8: [175.75, 249.45],\r\n            B9: [124.72, 175.75],\r\n            B10: [87.87, 124.72],\r\n            C0: [2599.37, 3676.54],\r\n            C1: [1836.85, 2599.37],\r\n            C2: [1298.27, 1836.85],\r\n            C3: [918.43, 1298.27],\r\n            C4: [649.13, 918.43],\r\n            C5: [459.21, 649.13],\r\n            C6: [323.15, 459.21],\r\n            C7: [229.61, 323.15],\r\n            C8: [161.57, 229.61],\r\n            C9: [113.39, 161.57],\r\n            C10: [79.37, 113.39],\r\n            RA0: [2437.80, 3458.27],\r\n            RA1: [1729.13, 2437.80],\r\n            RA2: [1218.90, 1729.13],\r\n            RA3: [864.57, 1218.90],\r\n            RA4: [609.45, 864.57],\r\n            SRA0: [2551.18, 3628.35],\r\n            SRA1: [1814.17, 2551.18],\r\n            SRA2: [1275.59, 1814.17],\r\n            SRA3: [907.09, 1275.59],\r\n            SRA4: [637.80, 907.09],\r\n            EXECUTIVE: [521.86, 756.00],\r\n            FOLIO: [612.00, 936.00],\r\n            LEGAL: [612.00, 1008.00],\r\n            LETTER: [612.00, 792.00],\r\n            TABLOID: [792.00, 1224.00]\r\n        };\r\n        // Calculate size\r\n        var fitSize = sizes[pageSize];\r\n        fitSize[0] -= newMargins[0] + newMargins[2];\r\n        fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n        return fitSize;\r\n    };\r\n    /**\r\n     * Returns an Excel file of chart's data.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Handle dates\r\n     * @todo Support for multi-sheet\r\n     */\r\n    Export.prototype.getExcel = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"xlsx\");\r\n                        }\r\n                        return [4 /*yield*/, this.xlsx];\r\n                    case 1:\r\n                        XLSX = _a.sent();\r\n                        wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n                            xlsx: XLSX,\r\n                            options: {\r\n                                bookType: \"xlsx\",\r\n                                bookSST: false,\r\n                                type: \"base64\",\r\n                            }\r\n                        }).options;\r\n                        sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n                            xlsx: XLSX,\r\n                            name: this.title || this.language.translate(\"Data\")\r\n                        }).name);\r\n                        wb = {\r\n                            SheetNames: [sheetName],\r\n                            Sheets: {}\r\n                        };\r\n                        data = [];\r\n                        dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                            dataFields: this.dataFields,\r\n                            format: \"xslx\"\r\n                        }).dataFields;\r\n                        // Vertical or horizontal (default) layout\r\n                        if (options.pivot) {\r\n                            dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                                dataFieldsOrder: this.dataFieldsOrder,\r\n                                format: \"xlsx\"\r\n                            }).dataFieldsOrder;\r\n                            $object.eachOrdered(dataFields, function (key, val) {\r\n                                var dataRow = [];\r\n                                if (options.addColumnNames) {\r\n                                    dataRow.push(val);\r\n                                }\r\n                                for (var len = _this.data.length, i = 0; i < len; i++) {\r\n                                    var dataValue = _this.data[i][key];\r\n                                    dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                                }\r\n                                data.push(_this.getExcelRow(dataRow, options, undefined, true));\r\n                            }, function (a, b) {\r\n                                //console.log(a, b)\r\n                                var ai = dataFieldsOrder_2.indexOf(a);\r\n                                var bi = dataFieldsOrder_2.indexOf(b);\r\n                                if (ai > bi) {\r\n                                    return 1;\r\n                                }\r\n                                else if (ai < bi) {\r\n                                    return -1;\r\n                                }\r\n                                return 0;\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Add column names?\r\n                            if (options.addColumnNames) {\r\n                                data.push(this.getExcelRow(dataFields, options, undefined, true));\r\n                            }\r\n                            // Add lines\r\n                            for (len = this.data.length, i = 0; i < len; i++) {\r\n                                data.push(this.getExcelRow(this.data[i], options, dataFields));\r\n                            }\r\n                        }\r\n                        // Create sheet and add data\r\n                        wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n                        // Apply adapters\r\n                        wb = this.adapter.apply(\"xlsxWorkbook\", {\r\n                            xlsx: XLSX,\r\n                            workbook: wb,\r\n                            options: options\r\n                        }).workbook;\r\n                        uri = this.adapter.apply(\"getExcel\", {\r\n                            data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n                            options: options\r\n                        }).data;\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This is needed to work around Excel limitations.\r\n     *\r\n     * @param name  Source name\r\n     * @return Normalized name\r\n     */\r\n    Export.prototype.normalizeExcelSheetName = function (name) {\r\n        name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n        return $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n    };\r\n    /**\r\n     * Rertuns an array of values to be used as Excel row.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         Row data\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Array of values\r\n     */\r\n    Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"xlsx\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as CSV.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getCSV = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"csv\");\r\n                }\r\n                csv = \"\";\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"csv\"\r\n                }).dataFields;\r\n                br = \"\";\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"csv\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        csv += br + _this.getCSVRow(dataRow, options, undefined, true);\r\n                        br = \"\\n\";\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_3.indexOf(a);\r\n                        var bi = dataFieldsOrder_3.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        row = this.getCSVRow(data[i], options, dataFields);\r\n                        if (options.reverse) {\r\n                            csv = row + br + csv;\r\n                        }\r\n                        else {\r\n                            csv += br + row;\r\n                        }\r\n                        br = \"\\n\";\r\n                    }\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n                    }\r\n                }\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getCSV\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of CSV data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated CSV line\r\n     */\r\n    Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var separator = options.separator || \",\";\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"csv\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Check if we need to skip\r\n            // This is no longer required because we are iterating via dataFields anyway\r\n            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n                return;\r\n            }*/\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Cast and escape doublequotes\r\n            item = \"\" + item;\r\n            item = item.replace(/\"/g, '\"\"');\r\n            // Enclose into double quotes\r\n            if (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n                item = \"\\\"\" + item + \"\\\"\";\r\n            }\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items.join(separator);\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as HTML table.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getHTML = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"html\");\r\n                }\r\n                html = \"<table>\";\r\n                if (options.tableClass) {\r\n                    html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"html\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"html\"\r\n                    }).dataFieldsOrder;\r\n                    html += \"\\n<tbody>\";\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_4.indexOf(a);\r\n                        var bi = dataFieldsOrder_4.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n                    }\r\n                    html += \"\\n<tbody>\";\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n                    }\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                html += \"\\n</table>\";\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getHTML\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of HTML data.\r\n     *\r\n     * @since 4.7.0\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated HTML row\r\n     */\r\n    Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        if (headerRow === void 0) { headerRow = false; }\r\n        // Init output\r\n        var html = \"\\t<tr>\";\r\n        if (options.rowClass) {\r\n            html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n        }\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"html\"\r\n        }).dataFieldsOrder;\r\n        // th or dh?\r\n        var tag = headerRow ? \"th\" : \"td\";\r\n        // Process each row item\r\n        var first = true;\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Escape HTML entities\r\n            item = \"\" + item;\r\n            item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\r\n                return \"&#\" + i.charCodeAt(0) + \";\";\r\n            });\r\n            // Which tag to use\r\n            var useTag = tag;\r\n            if (options.pivot && first) {\r\n                useTag = \"th\";\r\n            }\r\n            // Add cell\r\n            if (options.cellClass) {\r\n                html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            else {\r\n                html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            first = false;\r\n        }, function (a, b) {\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        html += \"\\n\\t</tr>\";\r\n        return html;\r\n    };\r\n    /**\r\n     * Returns chart's data in JSON format.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getJSON = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"json\");\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"json\"\r\n                }).dataFields;\r\n                if (!this._dynamicDataFields) {\r\n                    data = [];\r\n                    sourceData = this.data;\r\n                    _loop_1 = function (len, i) {\r\n                        var value = sourceData[i];\r\n                        if (typeof value == \"object\") {\r\n                            var newValue_1 = {};\r\n                            $object.each(value, function (field, item) {\r\n                                if ($type.hasValue(dataFields[field])) {\r\n                                    newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\r\n                                }\r\n                            });\r\n                            data.push(newValue_1);\r\n                        }\r\n                    };\r\n                    for (len = sourceData.length, i = 0; i < len; i++) {\r\n                        _loop_1(len, i);\r\n                    }\r\n                }\r\n                else {\r\n                    data = this.data;\r\n                }\r\n                json = JSON.stringify(data, function (key, value) {\r\n                    if (typeof value == \"object\") {\r\n                        $object.each(value, function (field, item) {\r\n                            value[field] = _this.convertToSpecialFormat(field, item, options);\r\n                        });\r\n                    }\r\n                    return value;\r\n                }, options.indent);\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getJSON\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts the value to proper date format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  field         Field name\r\n     * @param  value         Value\r\n     * @param  options       Options\r\n     * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n     * @return Formatted date value or unmodified value\r\n     */\r\n    Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\r\n        // Is this a timestamp or duration?\r\n        if (typeof value == \"number\") {\r\n            if (this.isDateField(field)) {\r\n                value = new Date(value);\r\n            }\r\n            else if (this.isDurationField(field)) {\r\n                return this.durationFormatter.format(value, this.durationFormat);\r\n            }\r\n            else if (this.isNumberField(field) && this.numberFormat) {\r\n                return this.numberFormatter.format(value, this.numberFormat);\r\n            }\r\n        }\r\n        if (value instanceof Date) {\r\n            if (options.useTimestamps) {\r\n                value = value.getTime();\r\n            }\r\n            else if (options.useLocale) {\r\n                if (!keepOriginal) {\r\n                    value = value.toLocaleString();\r\n                }\r\n            }\r\n            else {\r\n                value = this.dateFormatter.format(value, this.dateFormat);\r\n            }\r\n        }\r\n        else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n            value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Converts empty value based on `emptyAs` option.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.convertEmptyValue = function (field, value, options) {\r\n        return $type.hasValue(value) ? value : options.emptyAs;\r\n    };\r\n    /**\r\n     * Triggers download of the file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param uri       Data URI with file content\r\n     * @param fileName  File name\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.download = function (uri, fileName, addBOM) {\r\n        if (addBOM === void 0) { addBOM = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\r\n            return __generator(this, function (_a) {\r\n                if (this.msBlobDownloadSupport()) {\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    // Check if we need to Base64-decode\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        blob_1 = new Blob([uri], { type: contentType });\r\n                        window.navigator.msSaveBlob(blob_1, fileName);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    window.navigator.msSaveBlob(blob, fileName);\r\n                }\r\n                else if (this.blobDownloadSupport()) {\r\n                    link_1 = document.createElement(\"a\");\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (addBOM) {\r\n                            uri = \"\\ufeff\" + uri;\r\n                        }\r\n                        blob_2 = new Blob([uri], { type: contentType });\r\n                        url_2 = window.URL.createObjectURL(blob_2);\r\n                        link_1.href = url_2;\r\n                        link_1.download = fileName;\r\n                        link_1.click();\r\n                        setTimeout(function () {\r\n                            document.body.removeChild(link_1);\r\n                            window.URL.revokeObjectURL(url_2);\r\n                        }, 100);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    if (addBOM) {\r\n                        chars = [0xEF, 0xBB, 0xBF].concat(chars);\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    url_3 = window.URL.createObjectURL(blob);\r\n                    link_1.href = url_3;\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    link_1.click();\r\n                    document.body.removeChild(link_1);\r\n                    setTimeout(function () {\r\n                        window.URL.revokeObjectURL(url_3);\r\n                    }, 100);\r\n                }\r\n                else if (this.linkDownloadSupport()) {\r\n                    link = document.createElement(\"a\");\r\n                    link.download = fileName;\r\n                    link.href = uri;\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                }\r\n                else if (this.legacyIE()) {\r\n                    parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n                    if (parts.length === 4) {\r\n                        // Base64-encoded or text-based stuff?\r\n                        if (parts[2] == \"base64\") {\r\n                            // Base64-encoded - probably an image\r\n                            if (parts[1].match(/^image\\//)) {\r\n                                // Yep, an image. Let's create a temporary image placeholder,\r\n                                // so that user can use do Save As.\r\n                                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n                                    \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") +\r\n                                    \"</p>\" +\r\n                                    \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\r\n                            }\r\n                        }\r\n                        else {\r\n                            contentType = void 0;\r\n                            if (fileName.match(/\\.svg$/)) {\r\n                                contentType = \"image/svg+xml\";\r\n                            }\r\n                            else {\r\n                                contentType = \"text/plain\";\r\n                                fileName += \".txt\";\r\n                            }\r\n                            iframe = document.createElement(\"iframe\");\r\n                            iframe.width = \"1px\";\r\n                            iframe.height = \"1px\";\r\n                            iframe.style.display = \"none\";\r\n                            document.body.appendChild(iframe);\r\n                            idoc = iframe.contentDocument;\r\n                            idoc.open(contentType, \"replace\");\r\n                            // TODO test this with various encodings (e.g. UTF)\r\n                            //idoc.charset = parts[2].replace(/charset=/, \"\");\r\n                            idoc.write(decodeURIComponent(parts[3]));\r\n                            idoc.close();\r\n                            idoc.execCommand(\"SaveAs\", true, fileName);\r\n                            // Destroy the iframe\r\n                            document.body.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    /**\r\n                     * Something else - perhaps a mobile.\r\n                     * Let's just display it in the same page.\r\n                     * (hey we don't like it either)\r\n                     */\r\n                    window.location.href = uri;\r\n                }\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns `true` if browser has any supported methods to trigger download\r\n     * of a binary file.\r\n     *\r\n     * @return Supports downloads?\r\n     */\r\n    Export.prototype.downloadSupport = function () {\r\n        //return !this.legacyIE();\r\n        return this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n    };\r\n    /**\r\n     * Checks if the browser supports \"download\" attribute on links.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.linkDownloadSupport = function () {\r\n        // Do we have this cached?\r\n        var cache = registry.getCache(\"linkDownloadSupport\");\r\n        if (cache === false || cache === true) {\r\n            return cache;\r\n        }\r\n        var a = document.createElement(\"a\");\r\n        var res = typeof a.download !== \"undefined\";\r\n        registry.setCache(\"linkDownloadSupport\", res);\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.blobDownloadSupport = function () {\r\n        return $type.hasValue(window.Blob);\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.msBlobDownloadSupport = function () {\r\n        return $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n    };\r\n    /**\r\n     * Checks if this is a legacy version of IE.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return IE9 or less?\r\n     */\r\n    Export.prototype.legacyIE = function () {\r\n        // Create a temporary <div> with conditional tags in it an an <i> tag.\r\n        // Count <i>s. If there are some, we have IE9 or late on our hands.\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n        return div.getElementsByTagName(\"i\").length == 1;\r\n    };\r\n    /**\r\n     * Initiates print of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param data     Data URI for the image\r\n     * @param options  Options\r\n     * @param title    Optional title to use (uses window's title by default)\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.print = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (options.printMethod == \"css\") {\r\n                    return [2 /*return*/, this.printViaCSS(data, options, title)];\r\n                }\r\n                else {\r\n                    return [2 /*return*/, this.printViaIframe(data, options, title)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaCSS = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var scroll, rule, originalTitle, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n                rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n                    \"display\": \"none\",\r\n                    \"position\": \"fixed\",\r\n                    \"visibility\": \"hidden\",\r\n                    \"opacity\": \"0\",\r\n                    \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n                });\r\n                if (title && document && document.title) {\r\n                    originalTitle = document.title;\r\n                    document.title = title;\r\n                }\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.display = \"block\";\r\n                img.style.position = \"relative\";\r\n                img.style.visibility = \"visible\";\r\n                img.style.opacity = \"1\";\r\n                img.style.clipPath = \"none\";\r\n                document.body.appendChild(img);\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    window.print();\r\n                }, 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(img);\r\n                    // Reset back all elements\r\n                    /*for (let len = items.length, i = 0; i < len; i++) {\r\n                        let item = <HTMLElement>items[i];\r\n                        if ($dom.isElement(item)) {\r\n                            item.style.display = states[i];\r\n                        }\r\n                    }*/\r\n                    rule.dispose();\r\n                    // Restore title\r\n                    if (originalTitle) {\r\n                        document.title = document.title;\r\n                    }\r\n                    // Scroll back the document the way it was before\r\n                    document.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n                }, options.delay || 500);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaIframe = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var iframe, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                iframe = document.createElement(\"iframe\");\r\n                iframe.style.visibility = \"hidden\";\r\n                document.body.appendChild(iframe);\r\n                // This is needed for FireFox\r\n                iframe.contentWindow.document.open();\r\n                iframe.contentWindow.document.close();\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.height = \"auto\";\r\n                if (title) {\r\n                    iframe.contentWindow.document.title = title;\r\n                }\r\n                iframe.contentWindow.document.body.appendChild(img);\r\n                iframe.load = function () {\r\n                    iframe.contentWindow.document.body.appendChild(img);\r\n                };\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    try {\r\n                        if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                }, options.delay || 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(iframe);\r\n                }, options.delay + 50 || 100);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Finds a background color for the element. If element is transparent it goes\r\n     * up the DOM hierarchy to find a parent element that does.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element Element\r\n     * @return Color code\r\n     */\r\n    Export.prototype.findBackgroundColor = function (element) {\r\n        // Check if element has styles set\r\n        var opacity = 1, currentColor = getComputedStyle(element, \"background-color\");\r\n        // Check opacity\r\n        if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n            opacity = 0;\r\n        }\r\n        if (opacity == 0) {\r\n            var parent_2 = element.parentElement; // || <Element>element.parentNode;\r\n            // Completely transparent. Look for a parent\r\n            if (parent_2) {\r\n                return this.findBackgroundColor(parent_2);\r\n            }\r\n            else {\r\n                return color(\"#fff\");\r\n            }\r\n        }\r\n        else {\r\n            return color(currentColor, opacity);\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"container\", {\r\n        /**\r\n         * @return Reference\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"container\", {\r\n                container: this._container\r\n            }).container;\r\n        },\r\n        /**\r\n         * A reference to a container to be used to place [[ExportMenu]] in.\r\n         *\r\n         * @param value Reference\r\n         */\r\n        set: function (value) {\r\n            this._container = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"sprite\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"sprite\", {\r\n                sprite: this._sprite\r\n            }).sprite;\r\n        },\r\n        /**\r\n         * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n         * internal elements.\r\n         *\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._sprite = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"extraSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"extraSprites\", {\r\n                extraSprites: this._extraSprites\r\n            }).extraSprites;\r\n        },\r\n        /**\r\n         * An array of extra [[Sprite]] elements to include in export.\r\n         *\r\n         * It can be used to export any external elements, or even other charts.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         *\r\n         * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n         *\r\n         * @since 4.2.0\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._extraSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"validateSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"validateSprites\", {\r\n                validateSprites: this._validateSprites\r\n            }).validateSprites;\r\n        },\r\n        /**\r\n         * An array of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         *\r\n         * If any of those elements is not completely ready when export is triggered,\r\n         * the export will wait until they are (their `validated` event triggers)\r\n         * before going through with the export opertaion.\r\n         *\r\n         * This is useful if you need to modify chart appearance for the export.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Add watermark\r\n         * let watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         * ```JavaScript\r\n         * // Add watermark\r\n         * var watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         *\r\n         * @since 4.6.8\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._validateSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"data\", {\r\n        /**\r\n         * @return Data\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"data\", {\r\n                data: this._data\r\n            }).data;\r\n        },\r\n        /**\r\n         * Data to export.\r\n         *\r\n         * @param value Data\r\n         */\r\n        set: function (value) {\r\n            this._data = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dataFields\", {\r\n        /**\r\n         * @return Field names `{ field: fieldName }`\r\n         */\r\n        get: function () {\r\n            if (!this._dataFields) {\r\n                this.generateDataFields();\r\n            }\r\n            return this.adapter.apply(\"dataFields\", {\r\n                dataFields: this._dataFields\r\n            }).dataFields;\r\n        },\r\n        /**\r\n         * Data fields in `{ field: fieldName }` format. Those are used for\r\n         * exporting in data formats to name the columns.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n         * @param value Field names\r\n         */\r\n        set: function (value) {\r\n            this._dataFields = value;\r\n            this._dynamicDataFields = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called after target chart's data updates.\r\n     *\r\n     * @ignore\r\n     */\r\n    Export.prototype.handleDataUpdated = function () {\r\n        if (this._dynamicDataFields) {\r\n            this._dataFields = undefined;\r\n        }\r\n        var hasData = this.data.length > 0;\r\n        if (this._prevHasData != hasData) {\r\n            this._prevHasData = hasData;\r\n            if (this.menu) {\r\n                this.menu.invalidate();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return A DateFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._dateFormatter) {\r\n                this._dateFormatter = new DateFormatter();\r\n                this._dateFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"dateFormatter\", {\r\n                dateFormatter: this._dateFormatter\r\n            }).dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @param value DateFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"dateFormat\", {\r\n                dateFormat: this._dateFormat\r\n            }).dateFormat;\r\n        },\r\n        /**\r\n         * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._dateFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFields\", {\r\n        /**\r\n         * @return Date field list\r\n         */\r\n        get: function () {\r\n            if (!this._dateFields) {\r\n                this._dateFields = new List();\r\n            }\r\n            return this.adapter.apply(\"dateFields\", {\r\n                dateFields: this._dateFields\r\n            }).dateFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold date values.\r\n         *\r\n         * @param value Date field list\r\n         */\r\n        set: function (value) {\r\n            this._dateFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormatter\", {\r\n        /**\r\n         * @return A NumberFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._numberFormatter) {\r\n                this._numberFormatter = new NumberFormatter();\r\n                this._numberFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"numberFormatter\", {\r\n                numberFormatter: this._numberFormatter\r\n            }).numberFormatter;\r\n        },\r\n        /**\r\n         * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value NumberFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._numberFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormat\", {\r\n        /**\r\n         * @return Number format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"numberFormat\", {\r\n                numberFormat: this._numberFormat\r\n            }).numberFormat;\r\n        },\r\n        /**\r\n         * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number format\r\n         */\r\n        set: function (value) {\r\n            this._numberFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFields\", {\r\n        /**\r\n         * @return Number field list\r\n         */\r\n        get: function () {\r\n            if (!this._numberFields) {\r\n                this._numberFields = new List();\r\n            }\r\n            return this.adapter.apply(\"numberFields\", {\r\n                numberFields: this._numberFields\r\n            }).numberFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold number values.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number field list\r\n         */\r\n        set: function (value) {\r\n            this._numberFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormatter\", {\r\n        /**\r\n         * @return A DurationFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._durationFormatter) {\r\n                this._durationFormatter = new DurationFormatter();\r\n                this._durationFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"durationFormatter\", {\r\n                durationFormatter: this._durationFormatter\r\n            }).durationFormatter;\r\n        },\r\n        /**\r\n         * A [[DurationFormatter]] to use when formatting duration values when\r\n         * exporting data.\r\n         *\r\n         * @param value  DurationFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._durationFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormat\", {\r\n        /**\r\n         * @return Duration format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"durationFormat\", {\r\n                durationFormat: this._durationFormat\r\n            }).durationFormat;\r\n        },\r\n        /**\r\n         * A format to use when formatting values from `durationFields`.\r\n         * Will use [[DurationFormatter]] format if not set.\r\n         *\r\n         * @param value Duration format\r\n         */\r\n        set: function (value) {\r\n            this._durationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFields\", {\r\n        /**\r\n         * @return Duration field list\r\n         */\r\n        get: function () {\r\n            if (!this._durationFields) {\r\n                this._durationFields = new List();\r\n            }\r\n            return this.adapter.apply(\"durationFields\", {\r\n                durationFields: this._durationFields\r\n            }).durationFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold duration values.\r\n         *\r\n         * @param value Duration field list\r\n         */\r\n        set: function (value) {\r\n            this._durationFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates data fields out of the first row of data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.generateDataFields = function () {\r\n        var _this = this;\r\n        this._dataFields = {};\r\n        if (this.data.length) {\r\n            $array.each(this.data, function (row) {\r\n                $object.each(row, function (key, value) {\r\n                    if (!$type.hasValue(_this._dataFields[key])) {\r\n                        _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\r\n                            name: key,\r\n                            field: key\r\n                        }).name;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cheks against `dateFields` property to determine if this field holds\r\n     * dates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDateField = function (field) {\r\n        return this.adapter.apply(\"isDateField\", {\r\n            isDateField: this.dateFields.contains(field),\r\n            field: field\r\n        }).isDateField;\r\n    };\r\n    /**\r\n     * Cheks against `numberFields` property to determine if this field holds\r\n     * numbers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a number field\r\n     */\r\n    Export.prototype.isNumberField = function (field) {\r\n        return this.adapter.apply(\"isNumberField\", {\r\n            isNumberField: this.numberFields.contains(field),\r\n            field: field\r\n        }).isNumberField;\r\n    };\r\n    /**\r\n     * Cheks against `durationFields` property to determine if this field holds\r\n     * durations.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDurationField = function (field) {\r\n        return this.adapter.apply(\"isDurationField\", {\r\n            isDurationField: this.durationFields.contains(field),\r\n            field: field\r\n        }).isDurationField;\r\n    };\r\n    /**\r\n     * Returns proper content type for the export type.\r\n     *\r\n     * @param type  Export format/type\r\n     * @return Proper content type, i.e. \"image/jpeg\"\r\n     */\r\n    Export.prototype.getContentType = function (type) {\r\n        var contentType = \"\";\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n                contentType = \"image/\" + type;\r\n                break;\r\n            case \"jpg\":\r\n                contentType = \"image/jpeg\";\r\n                break;\r\n            case \"svg\":\r\n                contentType = \"image/svg+xml\";\r\n                break;\r\n            case \"csv\":\r\n                contentType = \"text/csv\";\r\n                break;\r\n            case \"json\":\r\n                contentType = \"application/json\";\r\n                break;\r\n            case \"html\":\r\n                contentType = \"text/html\";\r\n                break;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                contentType = \"application/pdf\";\r\n                break;\r\n            case \"xlsx\":\r\n                contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n                break;\r\n        }\r\n        return this.adapter.apply(\"contentType\", {\r\n            contentType: contentType,\r\n            type: type\r\n        }).contentType;\r\n    };\r\n    Object.defineProperty(Export.prototype, \"filePrefix\", {\r\n        /**\r\n         * @return File prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"filePrefix\", {\r\n                filePrefix: this._filePrefix\r\n            }).filePrefix;\r\n        },\r\n        /**\r\n         * A file prefix to be used for all exported formats.\r\n         *\r\n         * Export will apply format-related extension to it. E.g. if this is set to\r\n         * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n         *\r\n         * @param value File prefix\r\n         */\r\n        set: function (value) {\r\n            this._filePrefix = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"backgroundColor\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"backgroundColor\", {\r\n                backgroundColor: this._backgroundColor\r\n            }).backgroundColor;\r\n        },\r\n        /**\r\n         * A background color to be used for exported images. If set, this will\r\n         * override the automatically acquired background color.\r\n         *\r\n         * @param value Color\r\n         */\r\n        set: function (value) {\r\n            this._backgroundColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"title\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"title\", {\r\n                title: this._title\r\n            }).title;\r\n        },\r\n        /**\r\n         * A title to be used when printing.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            this._title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Add ability to change text\r\n     */\r\n    Export.prototype.showPreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 0.5;\r\n            preloader.label.text = \"...\";\r\n        }\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hidePreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"preloader\", {\r\n        /**\r\n         * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n         * exported.\r\n         *\r\n         * @return Preloader\r\n         */\r\n        get: function () {\r\n            return this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n                this._sprite.parent.preloader :\r\n                undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a modal saying export is taking longer than expected.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.showTimeout = function () {\r\n        this.showModal(this.adapter.apply(\"timeoutMessage\", {\r\n            message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n        }).message);\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideTimeout = function () {\r\n        if (this._timeoutTimeout) {\r\n            this.removeDispose(this._timeoutTimeout);\r\n            this._timeoutTimeout = null;\r\n        }\r\n        this.hideModal();\r\n    };\r\n    Object.defineProperty(Export.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (!this._language) {\r\n                this._language = new Language();\r\n            }\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance to be used for translations.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"modal\", {\r\n        /**\r\n         * Returns (and creates) [[Modal]].\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            if (!this._modal) {\r\n                this._modal = new Modal();\r\n                // Prefix with Sprite's class name\r\n                this._modal.adapter.add(\"classPrefix\", function (value) {\r\n                    value = options.classNamePrefix + value;\r\n                    return value;\r\n                });\r\n            }\r\n            return this._modal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows [[Modal]] with specific text.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text Modal contents\r\n     */\r\n    Export.prototype.showModal = function (text, title) {\r\n        // Hide previous modal and preloader\r\n        this.hideModal();\r\n        this.hidePreloader();\r\n        // Create modal\r\n        var modal = this.modal;\r\n        modal.container = this.sprite.svgContainer.SVGContainer;\r\n        modal.content = text;\r\n        modal.readerTitle = title;\r\n        modal.open();\r\n    };\r\n    /**\r\n     * Hides modal window if one's currently open.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideModal = function () {\r\n        if (this._modal) {\r\n            this.modal.close();\r\n        }\r\n    };\r\n    /**\r\n     * Loads canvg dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     * @async\r\n     */\r\n    Export.prototype._canvg = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var canvg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")];\r\n                    case 1:\r\n                        canvg = (_a.sent());\r\n                        if (canvg.default != null) {\r\n                            return [2 /*return*/, canvg.default];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, canvg];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"canvg\", {\r\n        /**\r\n         * Returns canvg instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of canvg\r\n         */\r\n        get: function () {\r\n            return this._canvg();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"pdfmake\", {\r\n        /**\r\n         * Returns pdfmake instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            if (pdfmakePromise == null) {\r\n                pdfmakePromise = _pdfmake();\r\n            }\r\n            return pdfmakePromise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads xlsx dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     * @async\r\n     */\r\n    Export.prototype._xlsx = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"xlsx\" */ \"xlsx\")];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"xlsx\", {\r\n        /**\r\n         * Returns xlsx instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            return this._xlsx();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets options for a format.\r\n     */\r\n    Export.prototype.setFormatOptions = function (type, options) {\r\n        this._formatOptions.setKey(type, options);\r\n    };\r\n    /**\r\n     * Returns current options for a format.\r\n     */\r\n    Export.prototype.getFormatOptions = function (type) {\r\n        return this._formatOptions.getKey(type);\r\n    };\r\n    Object.defineProperty(Export.prototype, \"formatOptions\", {\r\n        /**\r\n         * A [[Dictionary]] object containing format-specific options.\r\n         *\r\n         * May be used to change specific option for the format:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     // ...\r\n         *     \"formatOptions\": {\r\n         *       \"csv\": {\r\n         *         \"disabled\": true\r\n         *       }\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.9.12\r\n         * @return  Options\r\n         */\r\n        get: function () {\r\n            return this._formatOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Disables interactivity on parent chart.\r\n     */\r\n    Export.prototype._disablePointers = function () {\r\n        if (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n        }\r\n        this.sprite.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Releases temporarily disabled pointers on parent chart.\r\n     */\r\n    Export.prototype._releasePointers = function () {\r\n        if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n        }\r\n    };\r\n    /**\r\n     * Hides all elements that should not be included in the exported image.\r\n     */\r\n    Export.prototype.hideNonExportableSprites = function () {\r\n        var _this = this;\r\n        if (this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        var svgContainer = this.sprite.svgContainer;\r\n        if (svgContainer) {\r\n            $array.each(svgContainer.nonExportableSprites, function (item) {\r\n                if (!item.isHidden && !item.isHiding && item.visible) {\r\n                    _this._hiddenObjects.push(item);\r\n                }\r\n                item.hide(0);\r\n            });\r\n        }\r\n        this._objectsAlreadyHidden = true;\r\n    };\r\n    /**\r\n     * Respores elements that were hidden before export.\r\n     */\r\n    Export.prototype.restoreNonExportableSprites = function () {\r\n        if (!this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        $array.each(this._hiddenObjects, function (item) {\r\n            item.show(0);\r\n        });\r\n        this._hiddenObjects = [];\r\n        this._objectsAlreadyHidden = false;\r\n    };\r\n    /**\r\n     * Checks if there are elements that absolutely need to be validated before\r\n     * export.\r\n     *\r\n     * If there are invalid elements, it will await for them to be validated.\r\n     *\r\n     * @return Promise\r\n     */\r\n    Export.prototype.awaitValidSprites = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        if (this.validateSprites.length) {\r\n                            $array.each(this.validateSprites, function (sprite, index) {\r\n                                if (sprite.invalid) {\r\n                                    promises.push(new Promise(function (resolve, reject) {\r\n                                        sprite.events.once(\"validated\", function (ev) {\r\n                                            resolve();\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!promises.length) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Export.prototype.processConfig = function (config) {\r\n        registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n        if (config) {\r\n            // Set up menu\r\n            if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n                config.menu.type = \"ExportMenu\";\r\n            }\r\n            if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\r\n                this.dataFields = config.dataFields;\r\n                delete config.dataFields;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * XLINK namespace definition.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.XLINK = \"http://www.w3.org/1999/xlink\";\r\n    return Export;\r\n}(Validatable));\r\nexport { Export };\r\n"]},"metadata":{},"sourceType":"module"}
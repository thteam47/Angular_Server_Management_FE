{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MaskedDateTimeService } from '@syncfusion/ej2-angular-calendars';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/error-toastr.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"./../../../services/detail-status.service\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@syncfusion/ej2-angular-calendars\";\nimport * as i11 from \"../chartstatus/chartstatus.component\";\n\nfunction DetailstatusComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"ejs-datetimepicker\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function DetailstatusComponent_div_14_Template_ejs_datetimepicker_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.dateStart = $event;\n    })(\"ngModelChange\", function DetailstatusComponent_div_14_Template_ejs_datetimepicker_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onChangeStart($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3);\n    i0.ɵɵelementStart(5, \"ejs-datetimepicker\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function DetailstatusComponent_div_14_Template_ejs_datetimepicker_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.dateEnd = $event;\n    })(\"ngModelChange\", function DetailstatusComponent_div_14_Template_ejs_datetimepicker_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onChangeEnd($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"format\", ctx_r0.format)(\"enableMask\", ctx_r0.enableMaskSupport)(\"ngModel\", ctx_r0.dateStart)(\"min\", ctx_r0.minDateStart)(\"max\", ctx_r0.maxDateStart);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"format\", ctx_r0.format)(\"enableMask\", ctx_r0.enableMaskSupport)(\"ngModel\", ctx_r0.dateEnd)(\"min\", ctx_r0.minDateEnd)(\"max\", ctx_r0.maxDateEnd);\n  }\n}\n\nfunction DetailstatusComponent_app_chartstatus_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-chartstatus\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"listStatus\", ctx_r1.listStatus);\n  }\n}\n\nexport let DetailstatusComponent = /*#__PURE__*/(() => {\n  class DetailstatusComponent {\n    constructor(fb, errToastr, route, toastr, detailStatus, router) {\n      this.fb = fb;\n      this.errToastr = errToastr;\n      this.route = route;\n      this.toastr = toastr;\n      this.detailStatus = detailStatus;\n      this.router = router;\n      this.format = \"M/d/yyyy hh:mm a\";\n      this.enableMaskSupport = true;\n      this.today = new Date();\n      this.dateStart = new Date();\n      this.minDateStart = new Date();\n      this.maxDateStart = new Date();\n      this.dateEnd = new Date();\n      this.minDateEnd = new Date();\n      this.maxDateEnd = new Date();\n      this.listStatus = [];\n      this.range = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n      });\n      this.hide = false;\n      this.form = this.fb.group({\n        id: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.getListStatus();\n    }\n\n    getListStatus() {\n      this.listStatus = [];\n      const idView = this.route.snapshot.paramMap.get('id');\n\n      if (idView) {\n        this.detailStatus.getDetailStatus(idView).subscribe(res => {\n          this.listStatus = [];\n          this.id = idView;\n          this.hide = true;\n\n          for (var key in res.status) {\n            this.listStatus.push(res.status[key]);\n          }\n\n          this.dateStart = new Date(this.listStatus[0].time);\n          this.dateEnd = new Date(this.listStatus[this.listStatus.length - 1].time);\n          this.minDateStart = new Date(this.listStatus[0].time);\n          this.maxDateStart = this.dateEnd;\n          this.minDateEnd = this.dateStart;\n          this.maxDateStart = new Date(this.listStatus[this.listStatus.length - 1].time);\n          this.statusServer = res.statusServer;\n        }, err => {\n          this.errToastr.errToastr(err);\n        });\n      }\n    }\n\n    getListStatusAfter(start, end) {\n      this.listStatus = [];\n      const idView = this.route.snapshot.paramMap.get('id');\n\n      if (idView) {\n        this.detailStatus.getDetail(idView, start, end).subscribe(res => {\n          this.listStatus = [];\n          this.id = idView;\n          this.hide = true;\n\n          for (var key in res.status) {\n            this.listStatus.push(res.status[key]);\n          }\n\n          this.dateStart = new Date(this.listStatus[0].time);\n          this.dateEnd = new Date(this.listStatus[this.listStatus.length - 1].time);\n          this.statusServer = res.statusServer;\n        }, err => {\n          this.errToastr.errToastr(err);\n        });\n      }\n    }\n\n    detail() {\n      this.id = this.form.value.id;\n      this.detailStatus.getDetailStatus(this.id).subscribe(res => {\n        this.router.navigate(['/dashboard/detailstatus', this.id]);\n        this.listStatus = [];\n\n        for (var key in res.status) {\n          this.listStatus.push(res.status[key]);\n        }\n\n        this.hide = true;\n        this.dateStart = new Date(this.listStatus[0].time);\n        this.dateEnd = new Date(this.listStatus[this.listStatus.length - 1].time);\n        this.minDateStart = new Date(this.listStatus[0].time);\n        this.maxDateStart = this.dateEnd;\n        this.minDateEnd = this.dateStart;\n        this.maxDateStart = new Date(this.listStatus[this.listStatus.length - 1].time);\n        this.statusServer = res.statusServer;\n      }, err => {\n        this.errToastr.errToastr(err);\n      });\n    }\n\n    onChangeStart(args) {\n      this.minDateEnd = args;\n      this.getListStatusAfter(this.dateStart, this.dateEnd);\n    }\n\n    onChangeEnd(args) {\n      this.maxDateStart = args;\n      this.getListStatusAfter(this.dateStart, this.dateEnd);\n    }\n\n  }\n\n  DetailstatusComponent.ɵfac = function DetailstatusComponent_Factory(t) {\n    return new (t || DetailstatusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ErrorToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.DetailStatusService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  DetailstatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailstatusComponent,\n    selectors: [[\"app-detailstatus\"]],\n    features: [i0.ɵɵProvidersFeature([MaskedDateTimeService])],\n    decls: 18,\n    vars: 6,\n    consts: [[1, \"title\"], [1, \"formclass\", 3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [1, \"idserver\"], [\"appearance\", \"fill\", 1, \"inputid\"], [\"matInput\", \"\", \"formControlName\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"inputU\", 3, \"disabled\"], [\"class\", \"viewAfter\", 4, \"ngIf\"], [1, \"center\"], [3, \"listStatus\", 4, \"ngIf\"], [1, \"viewAfter\"], [\"width\", \"200px\", \"floatLabelType\", \"Always\", \"for\", \"dateStart\", 3, \"format\", \"enableMask\", \"ngModel\", \"min\", \"max\", \"ngModelChange\"], [\"width\", \"200px\", \"floatLabelType\", \"Always\", 3, \"format\", \"enableMask\", \"ngModel\", \"min\", \"max\", \"ngModelChange\"], [3, \"listStatus\"]],\n    template: function DetailstatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Detail Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DetailstatusComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.detail();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7, \"Id Server\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DetailstatusComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.id = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, DetailstatusComponent_div_14_Template, 6, 10, \"div\", 7);\n        i0.ɵɵelementStart(15, \"h1\", 8);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, DetailstatusComponent_app_chartstatus_17_Template, 1, 1, \"app-chartstatus\", 9);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.statusServer);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hide);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i8.MatButton, i9.NgIf, i10.DateTimePickerComponent, i1.NgModel, i11.ChartstatusComponent],\n    styles: [\".title{text-align:center;justify-items:center;background-color:#f5f5f5;height:50px}h2{padding:10px}.container{width:100%;height:70px;margin:10px auto;display:flex}.idserver{width:50%;margin:auto;text-align:center}span{padding-right:10px}.inputid{width:60%}.formclass{text-align:center;margin:auto}.center{text-align:center}\\n\"],\n    encapsulation: 2\n  });\n  return DetailstatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
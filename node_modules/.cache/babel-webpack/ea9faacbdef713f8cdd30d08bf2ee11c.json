{"ast":null,"code":"const instances = 'ej2_instances';\nlet uid = 0;\nlet isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\nfunction disableBlazorMode() {\n  isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction createInstance(classFunction, params) {\n  const arrayParam = params;\n  arrayParam.unshift(undefined);\n  return new (Function.prototype.bind.apply(classFunction, arrayParam))();\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\n\n\nfunction setImmediate(handler) {\n  let unbind; // eslint-disable-next-line\n\n  const num = new Uint16Array(5);\n  const intCrypto = window.msCrypto || window.crypto;\n  intCrypto.getRandomValues(num);\n  let secret = 'ej2' + combineArray(num); // eslint-disable-next-line\n\n  let messageHandler = event => {\n    if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n      handler();\n      unbind();\n    }\n  };\n\n  window.addEventListener('message', messageHandler, false);\n  window.postMessage(secret, '*');\n  return unbind = () => {\n    window.removeEventListener('message', messageHandler);\n    handler = messageHandler = secret = undefined;\n  };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getValue(nameSpace, obj) {\n  // eslint-disable-next-line\n  let value = obj;\n  const splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n\n  for (let i = 0; i < splits.length && !isUndefined(value); i++) {\n    value = value[splits[i]];\n  }\n\n  return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction setValue(nameSpace, value, obj) {\n  const keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.'); // eslint-disable-next-line\n\n  const start = obj || {}; // eslint-disable-next-line\n\n  let fromObj = start;\n  let i;\n  const length = keys.length;\n  let key;\n\n  for (i = 0; i < length; i++) {\n    key = keys[i];\n\n    if (i + 1 === length) {\n      fromObj[key] = value === undefined ? {} : value;\n    } else if (isNullOrUndefined(fromObj[key])) {\n      fromObj[key] = {};\n    }\n\n    fromObj = fromObj[key];\n  }\n\n  return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction deleteObject(obj, key) {\n  delete obj[key];\n}\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction isObject(obj) {\n  const objCon = {};\n  return !isNullOrUndefined(obj) && obj.constructor === objCon.constructor;\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getEnumValue(enumObject, enumValue) {\n  // eslint-disable-next-line\n  return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\n\n\nfunction merge(source, destination) {\n  if (!isNullOrUndefined(destination)) {\n    const temrObj = source;\n    const tempProp = destination;\n    const keys = Object.keys(destination);\n    const deepmerge = 'deepMerge';\n\n    for (const key of keys) {\n      if (!isNullOrUndefined(temrObj[deepmerge]) && temrObj[deepmerge].indexOf(key) !== -1 && (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\n        extend(temrObj[key], temrObj[key], tempProp[key], true);\n      } else {\n        temrObj[key] = tempProp[key];\n      }\n    }\n  }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction extend(copied, first, second, deep) {\n  const result = copied && typeof copied === 'object' ? copied : {};\n  let length = arguments.length;\n\n  if (deep) {\n    length = length - 1;\n  }\n\n  for (let i = 1; i < length; i++) {\n    // eslint-disable-next-line\n    if (!arguments[i]) {\n      continue;\n    } // eslint-disable-next-line\n\n\n    let obj1 = arguments[i];\n    Object.keys(obj1).forEach(key => {\n      const src = result[key];\n      const copy = obj1[key];\n      let clone;\n      const isArrayChanged = Array.isArray(copy) && Array.isArray(src) && copy.length !== src.length; // eslint-disable-next-line\n\n      const blazorEventExtend = isBlazor() ? !(src instanceof Event) && !isArrayChanged : true;\n\n      if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n        if (isObject(copy)) {\n          clone = src ? src : {}; // eslint-disable-next-line\n\n          if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n            extend(clone, {}, copy, deep);\n          } else {\n            result[key] = extend(clone, {}, copy, deep);\n          }\n        } else {\n          /* istanbul ignore next */\n          clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n          result[key] = extend([], clone, copy, deep);\n        }\n      } else {\n        result[key] = copy;\n      }\n    });\n  }\n\n  return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isNullOrUndefined(value) {\n  return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isUndefined(value) {\n  return 'undefined' === typeof value;\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\n\n\nfunction getUniqueID(definedName) {\n  return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\n\n\nfunction debounce(eventFunction, delay) {\n  // eslint-disable-next-line\n  let out;\n  return function () {\n    // eslint-disable-next-line\n    const args = arguments;\n\n    const later = () => {\n      out = null;\n      return eventFunction.apply(this, args);\n    };\n\n    clearTimeout(out);\n    out = setTimeout(later, delay);\n  };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction queryParams(data) {\n  const array = [];\n  const keys = Object.keys(data);\n\n  for (const key of keys) {\n    array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n  }\n\n  return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isObjectArray(value) {\n  const parser = Object.prototype.toString;\n\n  if (parser.call(value) === '[object Array]') {\n    if (parser.call(value[0]) === '[object Object]') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction compareElementParent(child, parent) {\n  const node = child;\n\n  if (node === parent) {\n    return true;\n  } else if (node === document || !node) {\n    return false;\n  } else {\n    return compareElementParent(node.parentNode, parent);\n  }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\n\n\nfunction throwError(message) {\n  try {\n    throw new Error(message);\n  } catch (e) {\n    // eslint-disable-next-line\n    throw e.message + '\\n' + e.stack;\n  }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\n\n\nfunction print(element, printWindow) {\n  const div = document.createElement('div');\n  const links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n  const blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\n\n  if (blinks.length) {\n    for (let l = 0, len = blinks.length; l < len; l++) {\n      links.push(blinks[l]);\n    }\n  }\n\n  let reference = '';\n\n  if (isNullOrUndefined(printWindow)) {\n    printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n  }\n\n  div.appendChild(element.cloneNode(true));\n\n  for (let i = 0, len = links.length; i < len; i++) {\n    reference += links[i].outerHTML;\n  }\n\n  printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n  printWindow.document.close();\n  printWindow.focus(); // eslint-disable-next-line\n\n  const interval = setInterval(() => {\n    if (printWindow.ready) {\n      printWindow.print();\n      printWindow.close();\n      clearInterval(interval);\n    }\n  }, 500);\n  return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\n\n\nfunction formatUnit(value) {\n  const result = value + '';\n\n  if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\n    return result;\n  }\n\n  return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\n\nfunction enableBlazorMode() {\n  isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\n\n\nfunction isBlazor() {\n  return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\n\n\nfunction getElement(element) {\n  const xPath = 'xPath';\n\n  if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\n    return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  }\n\n  return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getInstance(element, component) {\n  // eslint-disable-next-line\n  let elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    for (const inst of elem[instances]) {\n      if (inst instanceof component) {\n        return inst;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction addInstance(element, instance) {\n  // eslint-disable-next-line\n  let elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    elem[instances].push(instance);\n  } else {\n    elem[instances] = [instance];\n  }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction uniqueID() {\n  if (typeof window === 'undefined') {\n    return;\n  } // eslint-disable-next-line\n\n\n  let num = new Uint16Array(5);\n  const intCrypto = window.msCrypto || window.crypto;\n  return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\n\n\nfunction combineArray(num) {\n  let ret = '';\n\n  for (let i = 0; i < 5; i++) {\n    ret += (i ? ',' : '') + num[i];\n  }\n\n  return ret;\n}\n/**\n * Parser\n */\n\n\nconst defaultNumberingSystem = {\n  'latn': {\n    '_digits': '0123456789',\n    '_type': 'numeric'\n  }\n};\nconst defaultNumberSymbols = {\n  'decimal': '.',\n  'group': ',',\n  'percentSign': '%',\n  'plusSign': '+',\n  'minusSign': '-',\n  'infinity': '∞',\n  'nan': 'NaN',\n  'exponential': 'E'\n};\nconst latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\n\nclass ParserBase {\n  /**\n   * Returns the cldr object for the culture specifies\n   *\n   * @param {Object} obj - Specifies the object from which culture object to be acquired.\n   * @param {string} cName - Specifies the culture name.\n   * @returns {Object} ?\n   */\n  static getMainObject(obj, cName) {\n    const value = isBlazor() ? cName : 'main.' + cName;\n    return getValue(value, obj);\n  }\n  /**\n   * Returns the numbering system object from given cldr data.\n   *\n   * @param {Object} obj - Specifies the object from which number system is acquired.\n   * @returns {Object} ?\n   */\n\n\n  static getNumberingSystem(obj) {\n    return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n  }\n  /**\n   * Returns the reverse of given object keys or keys specified.\n   *\n   * @param {Object} prop - Specifies the object to be reversed.\n   * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n   * @returns {Object} ?\n   */\n\n\n  static reverseObject(prop, keys) {\n    const propKeys = keys || Object.keys(prop);\n    const res = {};\n\n    for (const key of propKeys) {\n      // eslint-disable-next-line\n      if (!res.hasOwnProperty(prop[key])) {\n        // eslint-disable-next-line\n        res[prop[key]] = key;\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Returns the symbol regex by skipping the escape sequence.\n   *\n   * @param {string[]} props - Specifies the array values to be skipped.\n   * @returns {RegExp} ?\n   */\n\n\n  static getSymbolRegex(props) {\n    const regexStr = props.map(str => {\n      return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n    }).join('|');\n    return new RegExp(regexStr, 'g');\n  }\n  /**\n   *\n   * @param {Object} prop ?\n   * @returns {Object} ?\n   */\n\n\n  static getSymbolMatch(prop) {\n    const matchKeys = Object.keys(defaultNumberSymbols);\n    const ret = {};\n\n    for (const key of matchKeys) {\n      // eslint-disable-next-line\n      ret[prop[key]] = defaultNumberSymbols[key];\n    }\n\n    return ret;\n  }\n  /**\n   * Returns regex string for provided value\n   *\n   * @param {string} val ?\n   * @returns {string} ?\n   */\n\n\n  static constructRegex(val) {\n    const len = val.length;\n    let ret = '';\n\n    for (let i = 0; i < len; i++) {\n      if (i !== len - 1) {\n        ret += val[i] + '|';\n      } else {\n        ret += val[i];\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {string} value - Specifies the  values to be replaced.\n   * @param {RegExp} regex - Specifies the  regex to search.\n   * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n   * @returns {string} ?\n   */\n\n\n  static convertValueParts(value, regex, obj) {\n    return value.replace(regex, str => {\n      // eslint-disable-next-line\n      return obj[str];\n    });\n  }\n  /**\n   * Returns default numbering system object for formatting from cldr data\n   *\n   * @param {Object} obj ?\n   * @returns {NumericObject} ?\n   */\n\n\n  static getDefaultNumberingSystem(obj) {\n    const ret = {};\n    ret.obj = getValue('numbers', obj);\n    ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n    return ret;\n  }\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} needSymbols ?\n   * @param {boolean} blazorMode ?\n   * @returns {Object} ?\n   */\n\n\n  static getCurrentNumericOptions(curObj, numberSystem, needSymbols, blazorMode) {\n    const ret = {};\n    const cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem) || blazorMode) {\n      const digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n        ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n        ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n\n        if (needSymbols) {\n          ret.numericRegex = digits[0] + '-' + digits[9];\n          ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n          ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n          ret.numberSystem = cur.nSystem;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns number mapper object for the provided cldr data\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} isNumber ?\n   * @returns {NumberMapper} ?\n   */\n  // eslint-disable-next-line\n\n\n  static getNumberMapper(curObj, numberSystem, isNumber) {\n    const ret = {\n      mapper: {}\n    };\n    const cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem)) {\n      ret.numberSystem = cur.nSystem;\n      ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n      ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n      const digits = getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        for (const i of latnNumberSystem) {\n          // eslint-disable-next-line\n          ret.mapper[i] = digits[i];\n        }\n      }\n    }\n\n    return ret;\n  }\n\n}\n\nParserBase.nPair = 'numericPair';\nParserBase.nRegex = 'numericRegex';\nParserBase.numberingSystems = defaultNumberingSystem;\n/**\n * @private\n */\n\nconst blazorCurrencyData = {\n  'DJF': 'Fdj',\n  'ERN': 'Nfk',\n  'ETB': 'Br',\n  'NAD': '$',\n  'ZAR': 'R',\n  'XAF': 'FCFA',\n  'GHS': 'GH₵',\n  'XDR': 'XDR',\n  'AED': 'د.إ.‏',\n  'BHD': 'د.ب.‏',\n  'DZD': 'د.ج.‏',\n  'EGP': 'ج.م.‏',\n  'ILS': '₪',\n  'IQD': 'د.ع.‏',\n  'JOD': 'د.ا.‏',\n  'KMF': 'CF',\n  'KWD': 'د.ك.‏',\n  'LBP': 'ل.ل.‏',\n  'LYD': 'د.ل.‏',\n  'MAD': 'د.م.‏',\n  'MRU': 'أ.م.',\n  'OMR': 'ر.ع.‏',\n  'QAR': 'ر.ق.‏',\n  'SAR': 'ر.س.‏',\n  'SDG': 'ج.س.',\n  'SOS': 'S',\n  'SSP': '£',\n  'SYP': 'ل.س.‏',\n  'TND': 'د.ت.‏',\n  'YER': 'ر.ي.‏',\n  'CLP': '$',\n  'INR': '₹',\n  'TZS': 'TSh',\n  'EUR': '€',\n  'AZN': '₼',\n  'RUB': '₽',\n  'BYN': 'Br',\n  'ZMW': 'K',\n  'BGN': 'лв.',\n  'NGN': '₦',\n  'XOF': 'CFA',\n  'BDT': '৳',\n  'CNY': '¥',\n  'BAM': 'КМ',\n  'UGX': 'USh',\n  'USD': '$',\n  'CZK': 'Kč',\n  'GBP': '£',\n  'DKK': 'kr.',\n  'KES': 'Ksh',\n  'CHF': 'CHF',\n  'MVR': 'ރ.',\n  'BTN': 'Nu.',\n  'XCD': 'EC$',\n  'AUD': '$',\n  'BBD': '$',\n  'BIF': 'FBu',\n  'BMD': '$',\n  'BSD': '$',\n  'BWP': 'P',\n  'BZD': '$',\n  'CAD': '$',\n  'NZD': '$',\n  'FJD': '$',\n  'FKP': '£',\n  'GIP': '£',\n  'GMD': 'D',\n  'GYD': '$',\n  'HKD': '$',\n  'IDR': 'Rp',\n  'JMD': '$',\n  'KYD': '$',\n  'LRD': '$',\n  'MGA': 'Ar',\n  'MOP': 'MOP$',\n  'MUR': 'Rs',\n  'MWK': 'MK',\n  'MYR': 'RM',\n  'PGK': 'K',\n  'PHP': '₱',\n  'PKR': 'Rs',\n  'RWF': 'RF',\n  'SBD': '$',\n  'SCR': 'SR',\n  'SEK': 'kr',\n  'SGD': '$',\n  'SHP': '£',\n  'SLL': 'Le',\n  'ANG': 'NAf.',\n  'SZL': 'E',\n  'TOP': 'T$',\n  'TTD': '$',\n  'VUV': 'VT',\n  'WST': 'WS$',\n  'ARS': '$',\n  'BOB': 'Bs',\n  'BRL': 'R$',\n  'COP': '$',\n  'CRC': '₡',\n  'CUP': '$',\n  'DOP': '$',\n  'GTQ': 'Q',\n  'HNL': 'L',\n  'MXN': '$',\n  'NIO': 'C$',\n  'PAB': 'B/.',\n  'PEN': 'S/',\n  'PYG': '₲',\n  'UYU': '$',\n  'VES': 'Bs.S',\n  'IRR': 'ريال',\n  'GNF': 'FG',\n  'CDF': 'FC',\n  'HTG': 'G',\n  'XPF': 'FCFP',\n  'HRK': 'kn',\n  'HUF': 'Ft',\n  'AMD': '֏',\n  'ISK': 'kr',\n  'JPY': '¥',\n  'GEL': '₾',\n  'CVE': '​',\n  'KZT': '₸',\n  'KHR': '៛',\n  'KPW': '₩',\n  'KRW': '₩',\n  'KGS': 'сом',\n  'AOA': 'Kz',\n  'LAK': '₭',\n  'MZN': 'MTn',\n  'MKD': 'ден',\n  'MNT': '₮',\n  'BND': '$',\n  'MMK': 'K',\n  'NOK': 'kr',\n  'NPR': 'रु',\n  'AWG': 'Afl.',\n  'SRD': '$',\n  'PLN': 'zł',\n  'AFN': '؋',\n  'STN': 'Db',\n  'MDL': 'L',\n  'RON': 'lei',\n  'UAH': '₴',\n  'LKR': 'රු.',\n  'ALL': 'Lekë',\n  'RSD': 'дин.',\n  'TJS': 'смн',\n  'THB': '฿',\n  'TMT': 'm.',\n  'TRY': '₺',\n  'UZS': 'сўм',\n  'VND': '₫',\n  'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\n\nfunction getBlazorCurrencySymbol(currencyCode) {\n  return getValue(currencyCode || '', blazorCurrencyData);\n}\n/***\n * Hijri parser\n */\n// eslint-disable-next-line\n\n\nvar HijriParser;\n\n(function (HijriParser) {\n  const dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116, 31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711, 32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775, 33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963, 36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495, 37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027, 38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810, 42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342, 43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873, 43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594, 47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657, 48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720, 49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441, 53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973, 54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505, 54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288, 59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820, 59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352, 60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541, 63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603, 64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199, 66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388, 69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919, 69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451, 70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046, 72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640, 73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235, 75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766, 75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299, 76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893, 77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487, 79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990];\n  /**\n   *\n   * @param {Date} gDate ?\n   * @returns {Object} ?\n   */\n\n  function getHijriDate(gDate) {\n    let day = gDate.getDate();\n    let month = gDate.getMonth();\n    let year = gDate.getFullYear();\n    let tMonth = month + 1;\n    let tYear = year;\n\n    if (tMonth < 3) {\n      tYear -= 1;\n      tMonth += 12;\n    }\n\n    let yPrefix = Math.floor(tYear / 100.);\n    let julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;\n    const julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;\n    yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);\n    julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;\n    const b = julianNumber + julilanOffset + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    const d = Math.floor(365.25 * c);\n    const tempMonth = Math.floor((b - d) / 30.6001);\n    day = b - d - Math.floor(30.6001 * tempMonth);\n    month = Math.floor((b - d) / 20.6001);\n\n    if (month > 13) {\n      c += 1;\n      month -= 12;\n    }\n\n    month -= 1;\n    year = c - 4716;\n    const modifiedJulianDate = julianNumber - 2400000; // date calculation for year after 2077\n\n    const iyear = 10631. / 30.;\n    let z = julianNumber - 1948084;\n    const cyc = Math.floor(z / 10631.);\n    z = z - 10631 * cyc;\n    const j = Math.floor((z - 0.1335) / iyear);\n    const iy = 30 * cyc + j;\n    z = z - Math.floor(j * iyear + 0.1335);\n    let im = Math.floor((z + 28.5001) / 29.5);\n    /* istanbul ignore next */\n\n    if (im === 13) {\n      im = 12;\n    }\n\n    const tempDay = z - Math.floor(29.5001 * im - 29);\n    let i = 0;\n\n    for (; i < dateCorrection.length; i++) {\n      if (dateCorrection[i] > modifiedJulianDate) {\n        break;\n      }\n    }\n\n    const iln = i + 16260;\n    const ii = Math.floor((iln - 1) / 12);\n    let hYear = ii + 1;\n    let hmonth = iln - 12 * ii;\n    let hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;\n\n    if ((hDate + '').length > 2) {\n      hDate = tempDay;\n      hmonth = im;\n      hYear = iy;\n    }\n\n    return {\n      year: hYear,\n      month: hmonth,\n      date: hDate\n    };\n  }\n\n  HijriParser.getHijriDate = getHijriDate;\n  /**\n   *\n   * @param {number} year ?\n   * @param {number} month ?\n   * @param {number} day ?\n   * @returns {Date} ?\n   */\n\n  function toGregorian(year, month, day) {\n    const iy = year;\n    const im = month;\n    const id = day;\n    const ii = iy - 1;\n    const iln = ii * 12 + 1 + (im - 1);\n    const i = iln - 16260;\n    const mcjdn = id + dateCorrection[i - 1] - 1;\n    const julianDate = mcjdn + 2400000;\n    const z = Math.floor(julianDate + 0.5);\n    let a = Math.floor((z - 1867216.25) / 36524.25);\n    a = z + 1 + a - Math.floor(a / 4);\n    const b = a + 1524;\n    const c = Math.floor((b - 122.1) / 365.25);\n    const d = Math.floor(365.25 * c);\n    const e = Math.floor((b - d) / 30.6001);\n    const gDay = b - d - Math.floor(e * 30.6001);\n    let gMonth = e - (e > 13.5 ? 13 : 1);\n    const gYear = c - (gMonth > 2.5 ? 4716 : 4715);\n    /* istanbul ignore next */\n\n    if (gYear <= 0) {\n      gMonth--;\n    } // No year zero\n\n\n    return new Date(gYear + '/' + gMonth + '/' + gDay);\n  }\n\n  HijriParser.toGregorian = toGregorian;\n})(HijriParser || (HijriParser = {}));\n\nconst abbreviateRegexGlobal = /\\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;\nconst standalone = 'stand-alone';\nconst weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst timeSetter = {\n  m: 'getMinutes',\n  h: 'getHours',\n  H: 'getHours',\n  s: 'getSeconds',\n  d: 'getDate',\n  f: 'getMilliseconds'\n};\nconst datePartMatcher = {\n  'M': 'month',\n  'd': 'day',\n  'E': 'weekday',\n  'c': 'weekday',\n  'y': 'year',\n  'm': 'minute',\n  'h': 'hour',\n  'H': 'hour',\n  's': 'second',\n  'L': 'month',\n  'a': 'designator',\n  'z': 'timeZone',\n  'Z': 'timeZone',\n  'G': 'era',\n  'f': 'milliseconds'\n};\nconst timeSeparator = 'timeSeparator';\n/* tslint:disable no-any */\n\n/**\n * Date Format is a framework provides support for date formatting.\n *\n * @private\n */\n\nclass DateFormat {\n  /**\n   * Returns the formatter function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {DateFormatOptions} option - Specific the format in which date  will format.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static dateFormat(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n    const numObject = getValue('parserObject.numbers', dependable);\n    const dateObject = dependable.dateObject;\n    const formatOptions = {\n      isIslamic: IntlBase.islamicRegex.test(option.calendar)\n    };\n\n    if (isBlazor() && option.isServerRendered) {\n      option = IntlBase.compareBlazorDateFormats(option, culture);\n    }\n\n    let resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n    formatOptions.dateSeperator = isBlazor() ? getValue('dateSeperator', dateObject) : IntlBase.getDateSeparator(dependable.dateObject);\n\n    if (isUndefined(resPattern)) {\n      throwError('Format options or type given must be invalid');\n    } else {\n      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n\n      if (isBlazor()) {\n        resPattern = resPattern.replace(/tt/, 'a');\n      }\n\n      formatOptions.pattern = resPattern;\n      formatOptions.numMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n      const patternMatch = resPattern.match(abbreviateRegexGlobal) || [];\n\n      for (const str of patternMatch) {\n        const len = str.length;\n        let char = str[0];\n\n        if (char === 'K') {\n          char = 'h';\n        }\n\n        switch (char) {\n          case 'E':\n          case 'c':\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              formatOptions.weekday = getValue('days.' + IntlBase.monthIndex[len], dateObject);\n            } else {\n              // eslint-disable-next-line\n              formatOptions.weekday = dependable.dateObject[IntlBase.days][standalone][IntlBase.monthIndex[len]];\n            }\n\n            break;\n\n          case 'M':\n          case 'L':\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              formatOptions.month = getValue('months.' + IntlBase.monthIndex[len], dateObject);\n            } else {\n              // eslint-disable-next-line\n              formatOptions.month = dependable.dateObject[IntlBase.month][standalone][IntlBase.monthIndex[len]];\n            }\n\n            break;\n\n          case 'a':\n            formatOptions.designator = isBlazor() ? getValue('dayPeriods', dateObject) : getValue('dayPeriods.format.wide', dateObject);\n            break;\n\n          case 'G':\n            // eslint-disable-next-line\n            const eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow';\n            formatOptions.era = isBlazor() ? getValue('eras', dateObject) : getValue('eras.' + eText, dependable.dateObject);\n            break;\n\n          case 'z':\n            formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n            break;\n        }\n      }\n    }\n\n    return value => {\n      if (isNaN(value.getDate())) {\n        return null;\n      }\n\n      return this.intDateFormatter(value, formatOptions);\n    };\n  }\n  /**\n   * Returns formatted date string based on options passed.\n   *\n   * @param {Date} value ?\n   * @param {FormatOptions} options ?\n   * @returns {string} ?\n   */\n\n\n  static intDateFormatter(value, options) {\n    const pattern = options.pattern;\n    let ret = '';\n    const matches = pattern.match(IntlBase.dateParseRegex);\n    const dObject = this.getCurrentDateValue(value, options.isIslamic);\n\n    for (const match of matches) {\n      const length = match.length;\n      let char = match[0];\n\n      if (char === 'K') {\n        char = 'h';\n      }\n\n      let curval;\n      let curvalstr = '';\n      let isNumber;\n      let processNumber;\n      let curstr = '';\n\n      switch (char) {\n        case 'M':\n        case 'L':\n          curval = dObject.month;\n\n          if (length > 2) {\n            // eslint-disable-next-line\n            ret += options.month[curval];\n          } else {\n            isNumber = true;\n          }\n\n          break;\n\n        case 'E':\n        case 'c':\n          // eslint-disable-next-line\n          ret += options.weekday[weekdayKey[value.getDay()]];\n          break;\n\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'd':\n        case 'f':\n          isNumber = true;\n\n          if (char === 'd') {\n            curval = dObject.date;\n          } else if (char === 'f') {\n            isNumber = false;\n            processNumber = true; // eslint-disable-next-line\n\n            curvalstr = value[timeSetter[char]]().toString();\n            curvalstr = curvalstr.substring(0, length);\n            const curlength = curvalstr.length;\n\n            if (length !== curlength) {\n              if (length > 3) {\n                continue;\n              }\n\n              for (let i = 0; i < length - curlength; i++) {\n                curvalstr = '0' + curvalstr.toString();\n              }\n            }\n\n            curstr += curvalstr;\n          } else {\n            // eslint-disable-next-line\n            curval = value[timeSetter[char]]();\n          }\n\n          if (char === 'h') {\n            curval = curval % 12 || 12;\n          }\n\n          break;\n\n        case 'y':\n          processNumber = true;\n          curstr += dObject.year;\n\n          if (length === 2) {\n            curstr = curstr.substr(curstr.length - 2);\n          }\n\n          break;\n\n        case 'a':\n          // eslint-disable-next-line\n          let desig = value.getHours() < 12 ? 'am' : 'pm'; // eslint-disable-next-line\n\n          ret += options.designator[desig];\n          break;\n\n        case 'G':\n          // eslint-disable-next-line\n          let dec = value.getFullYear() < 0 ? 0 : 1; // eslint-disable-next-line\n\n          let retu = options.era[dec];\n\n          if (isNullOrUndefined(retu)) {\n            // eslint-disable-next-line\n            retu = options.era[dec ? 0 : 1];\n          }\n\n          ret += retu || '';\n          break;\n\n        case '\\'':\n          ret += match === '\\'\\'' ? '\\'' : match.replace(/'/g, '');\n          break;\n\n        case 'z':\n          // eslint-disable-next-line\n          let timezone = value.getTimezoneOffset(); // eslint-disable-next-line\n\n          let pattern = length < 4 ? '+H;-H' : options.timeZone.hourFormat;\n          pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n\n          if (timezone === 0) {\n            ret += options.timeZone.gmtZeroFormat;\n          } else {\n            processNumber = true;\n            curstr = this.getTimeZoneValue(timezone, pattern);\n          }\n\n          curstr = options.timeZone.gmtFormat.replace(/\\{0\\}/, curstr);\n          break;\n\n        case ':':\n          // eslint-disable-next-line\n          ret += options.numMapper.numberSymbols[timeSeparator];\n          break;\n\n        case '/':\n          ret += options.dateSeperator;\n          break;\n\n        case 'W':\n          isNumber = true;\n          curval = IntlBase.getWeekOfYear(value);\n          break;\n\n        default:\n          ret += match;\n      }\n\n      if (isNumber) {\n        processNumber = true;\n        curstr = this.checkTwodigitNumber(curval, length);\n      }\n\n      if (processNumber) {\n        ret += ParserBase.convertValueParts(curstr, IntlBase.latnParseRegex, options.numMapper.mapper);\n      }\n    }\n\n    return ret;\n  }\n\n  static getCurrentDateValue(value, isIslamic) {\n    if (isIslamic) {\n      return HijriParser.getHijriDate(value);\n    }\n\n    return {\n      year: value.getFullYear(),\n      month: value.getMonth() + 1,\n      date: value.getDate()\n    };\n  }\n  /**\n   * Returns two digit numbers for given value and length\n   *\n   * @param {number} val ?\n   * @param {number} len ?\n   * @returns {string} ?\n   */\n\n\n  static checkTwodigitNumber(val, len) {\n    const ret = val + '';\n\n    if (len === 2 && ret.length !== 2) {\n      return '0' + ret;\n    }\n\n    return ret;\n  }\n  /**\n   * Returns the value of the Time Zone.\n   *\n   * @param {number} tVal ?\n   * @param {string} pattern ?\n   * @returns {string} ?\n   * @private\n   */\n\n\n  static getTimeZoneValue(tVal, pattern) {\n    const splt = pattern.split(';');\n    let curPattern = splt[tVal > 0 ? 1 : 0];\n    const no = Math.abs(tVal);\n    return curPattern = curPattern.replace(/HH?|mm/g, str => {\n      const len = str.length;\n      const ishour = str.indexOf('H') !== -1;\n      return this.checkTwodigitNumber(Math.floor(ishour ? no / 60 : no % 60), len);\n    });\n  }\n\n}\n\nconst errorText = {\n  'ms': 'minimumSignificantDigits',\n  'ls': 'maximumSignificantDigits',\n  'mf': 'minimumFractionDigits',\n  'lf': 'maximumFractionDigits'\n};\nconst percentSign = 'percentSign';\nconst minusSign = 'minusSign';\nconst mapper$1 = ['infinity', 'nan', 'group', 'decimal', 'exponential'];\n/**\n * Module for number formatting.\n *\n * @private\n */\n\nclass NumberFormat {\n  /**\n   * Returns the formatter function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {NumberFormatOptions} option - Specific the format in which number  will format.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static numberFormatter(culture, option, cldr) {\n    const fOptions = extend({}, option);\n    let cOptions = {};\n    const dOptions = {};\n    let symbolPattern;\n    const dependable = IntlBase.getDependables(cldr, culture, '', true);\n    const numObject = dependable.numericObject;\n    dOptions.numberMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n    dOptions.currencySymbol = isBlazor() ? getValue('currencySymbol', numObject) : IntlBase.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode, option.altSymbol);\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n\n    dOptions.percentSymbol = isBlazor() ? getValue('numberSymbols.percentSign', numObject) : dOptions.numberMapper.numberSymbols[percentSign];\n    dOptions.minusSymbol = isBlazor() ? getValue('numberSymbols.minusSign', numObject) : dOptions.numberMapper.numberSymbols[minusSign];\n    const symbols = dOptions.numberMapper.numberSymbols;\n\n    if (option.format && !IntlBase.formatRegex.test(option.format)) {\n      cOptions = IntlBase.customFormat(option.format, dOptions, dependable.numericObject);\n    } else {\n      extend(fOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n      fOptions.isCurrency = fOptions.type === 'currency';\n      fOptions.isPercent = fOptions.type === 'percent';\n\n      if (!isBlazor()) {\n        symbolPattern = IntlBase.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);\n      }\n\n      fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);\n      this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);\n\n      if (!isUndefined(fOptions.fractionDigits)) {\n        fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;\n      }\n\n      if (isUndefined(fOptions.useGrouping)) {\n        fOptions.useGrouping = true;\n      }\n\n      if (fOptions.isCurrency && !isBlazor()) {\n        symbolPattern = symbolPattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n      }\n\n      if (!isBlazor()) {\n        const split = symbolPattern.split(';');\n        cOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);\n        cOptions.pData = IntlBase.getFormatData(split[0], false, dOptions.currencySymbol);\n\n        if (fOptions.useGrouping) {\n          fOptions.groupSeparator = symbols[mapper$1[2]];\n          fOptions.groupData = this.getGroupingDetails(split[0]);\n        }\n      } else {\n        cOptions.nData = extend({}, {}, getValue(fOptions.type + 'nData', numObject));\n        cOptions.pData = extend({}, {}, getValue(fOptions.type + 'pData', numObject));\n\n        if (fOptions.type === 'currency' && option.currency) {\n          IntlBase.replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);\n        }\n      }\n\n      const minFrac = isUndefined(fOptions.minimumFractionDigits);\n\n      if (minFrac) {\n        fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;\n      }\n\n      if (isUndefined(fOptions.maximumFractionDigits)) {\n        const mval = cOptions.nData.maximumFraction;\n        fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;\n      }\n\n      const mfrac = fOptions.minimumFractionDigits;\n      const lfrac = fOptions.maximumFractionDigits;\n\n      if (!isUndefined(mfrac) && !isUndefined(lfrac)) {\n        if (mfrac > lfrac) {\n          fOptions.maximumFractionDigits = mfrac;\n        }\n      }\n    }\n\n    extend(cOptions.nData, fOptions);\n    extend(cOptions.pData, fOptions);\n    return value => {\n      if (isNaN(value)) {\n        return symbols[mapper$1[1]];\n      } else if (!isFinite(value)) {\n        return symbols[mapper$1[0]];\n      }\n\n      return this.intNumberFormatter(value, cOptions, dOptions);\n    };\n  }\n  /**\n   * Returns grouping details for the pattern provided\n   *\n   * @param {string} pattern ?\n   * @returns {GroupDetails} ?\n   */\n\n\n  static getGroupingDetails(pattern) {\n    const ret = {};\n    const match = pattern.match(IntlBase.negativeDataRegex);\n\n    if (match && match[4]) {\n      const pattern = match[4];\n      const p = pattern.lastIndexOf(',');\n\n      if (p !== -1) {\n        const temp = pattern.split('.')[0];\n        ret.primary = temp.length - p - 1;\n        const s = pattern.lastIndexOf(',', p - 1);\n\n        if (s !== -1) {\n          ret.secondary = p - 1 - s;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns if the provided integer range is valid.\n   *\n   * @param {number} val1 ?\n   * @param {number} val2 ?\n   * @param {boolean} checkbothExist ?\n   * @param {boolean} isFraction ?\n   * @returns {boolean} ?\n   */\n\n\n  static checkValueRange(val1, val2, checkbothExist, isFraction) {\n    const decide = isFraction ? 'f' : 's';\n    let dint = 0;\n    const str1 = errorText['l' + decide]; // eslint-disable-next-line\n\n    let str2 = errorText['m' + decide];\n\n    if (!isUndefined(val1)) {\n      this.checkRange(val1, str1, isFraction);\n      dint++;\n    }\n\n    if (!isUndefined(val2)) {\n      this.checkRange(val2, str2, isFraction);\n      dint++;\n    }\n\n    if (dint === 2) {\n      if (val1 < val2) {\n        throwError(str2 + 'specified must be less than the' + str1);\n      } else {\n        return true;\n      }\n    } else if (checkbothExist && dint === 1) {\n      throwError('Both' + str2 + 'and' + str2 + 'must be present');\n    }\n\n    return false;\n  }\n  /**\n   * Check if the provided fraction range is valid\n   *\n   * @param {number} val ?\n   * @param {string} text ?\n   * @param {boolean} isFraction ?\n   * @returns {void} ?\n   */\n\n\n  static checkRange(val, text, isFraction) {\n    const range = isFraction ? [0, 20] : [1, 21];\n\n    if (val < range[0] || val > range[1]) {\n      throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);\n    }\n  }\n  /**\n   * Returns formatted numeric string for provided formatting options\n   *\n   * @param {number} value ?\n   * @param {base.GenericFormatOptions} fOptions ?\n   * @param {CommonOptions} dOptions ?\n   * @returns {string} ?\n   */\n\n\n  static intNumberFormatter(value, fOptions, dOptions) {\n    let curData;\n\n    if (isUndefined(fOptions.nData.type)) {\n      return undefined;\n    } else {\n      if (value < 0) {\n        value = value * -1;\n        curData = fOptions.nData;\n      } else if (value === 0) {\n        curData = fOptions.zeroData || fOptions.pData;\n      } else {\n        curData = fOptions.pData;\n      }\n\n      let fValue = '';\n\n      if (curData.isPercent) {\n        value = value * 100;\n      }\n\n      if (curData.groupOne) {\n        fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);\n      } else {\n        fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);\n\n        if (curData.minimumIntegerDigits) {\n          fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);\n        }\n      }\n\n      if (curData.type === 'scientific') {\n        fValue = value.toExponential(curData.maximumFractionDigits);\n        fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper$1[4]]);\n      }\n\n      fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper$1[3]]);\n\n      if (curData.useGrouping) {\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper$1[3]] || '.', curData.groupData.secondary);\n      }\n\n      fValue = ParserBase.convertValueParts(fValue, IntlBase.latnParseRegex, dOptions.numberMapper.mapper);\n\n      if (curData.nlead === 'N/A') {\n        return curData.nlead;\n      } else {\n        return curData.nlead + fValue + curData.nend;\n      }\n    }\n  }\n  /**\n   * Returns significant digits processed numeric string\n   *\n   * @param {number} value ?\n   * @param {number} min ?\n   * @param {number} max ?\n   * @returns {string} ?\n   */\n\n\n  static processSignificantDigits(value, min, max) {\n    let temp = value + '';\n    let tn;\n    const length = temp.length;\n\n    if (length < min) {\n      return value.toPrecision(min);\n    } else {\n      temp = value.toPrecision(max);\n      tn = +temp;\n      return tn + '';\n    }\n  }\n  /**\n   * Returns grouped numeric string\n   *\n   * @param {string} val ?\n   * @param {number} level1 ?\n   * @param {string} sep ?\n   * @param {string} decimalSymbol ?\n   * @param {number} level2 ?\n   * @returns {string} ?\n   */\n\n\n  static groupNumbers(val, level1, sep, decimalSymbol, level2) {\n    let flag = !isNullOrUndefined(level2) && level2 !== 0;\n    const split = val.split(decimalSymbol);\n    const prefix = split[0];\n    let length = prefix.length;\n    let str = '';\n\n    while (length > level1) {\n      str = prefix.slice(length - level1, length) + (str.length ? sep + str : '');\n      length -= level1;\n\n      if (flag) {\n        level1 = level2;\n        flag = false;\n      }\n    }\n\n    split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;\n    return split.join(decimalSymbol);\n  }\n  /**\n   * Returns fraction processed numeric string\n   *\n   * @param {number} value ?\n   * @param {number} min ?\n   * @param {number} max ?\n   * @returns {string} ?\n   */\n\n\n  static processFraction(value, min, max) {\n    const temp = (value + '').split('.')[1];\n    const length = temp ? temp.length : 0;\n\n    if (min && length < min) {\n      let ret = '';\n\n      if (length === 0) {\n        ret = value.toFixed(min);\n      } else {\n        ret += value;\n\n        for (let j = 0; j < min - length; j++) {\n          ret += '0';\n        }\n\n        return ret;\n      }\n\n      return value.toFixed(min);\n    } else if (!isNullOrUndefined(max) && (length > max || max === 0)) {\n      return value.toFixed(max);\n    }\n\n    return value + '';\n  }\n  /**\n   * Returns integer processed numeric string\n   *\n   * @param {string} value ?\n   * @param {number} min ?\n   * @returns {string} ?\n   */\n\n\n  static processMinimumIntegers(value, min) {\n    const temp = value.split('.');\n    let lead = temp[0];\n    const len = lead.length;\n\n    if (len < min) {\n      for (let i = 0; i < min - len; i++) {\n        lead = '0' + lead;\n      }\n\n      temp[0] = lead;\n    }\n\n    return temp.join('.');\n  }\n\n}\n\nconst standalone$1 = 'stand-alone';\nconst latnRegex = /^[0-9]*$/;\nconst timeSetter$1 = {\n  minute: 'setMinutes',\n  hour: 'setHours',\n  second: 'setSeconds',\n  day: 'setDate',\n  month: 'setMonth',\n  milliseconds: 'setMilliseconds'\n};\nconst month = 'months';\n/* tslint:disable no-any */\n\n/**\n * Date Parser.\n *\n * @private\n */\n\nclass DateParser {\n  /**\n   * Returns the parser function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static dateParser(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n    const numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), false, isBlazor());\n    let parseOptions = {};\n\n    if (isBlazor() && option.isServerRendered) {\n      option = IntlBase.compareBlazorDateFormats(option, culture);\n    }\n\n    let resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n    let regexString = '';\n    let hourOnly;\n\n    if (isUndefined(resPattern)) {\n      throwError('Format options or type given must be invalid');\n    } else {\n      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n      parseOptions = {\n        isIslamic: IntlBase.islamicRegex.test(option.calendar),\n        pattern: resPattern,\n        evalposition: {},\n        culture: culture\n      };\n      const patternMatch = resPattern.match(IntlBase.dateParseRegex) || [];\n      const length = patternMatch.length;\n      let gmtCorrection = 0;\n      let zCorrectTemp = 0;\n      let isgmtTraversed = false;\n      const nRegx = numOptions.numericRegex; // eslint-disable-next-line\n\n      let numMapper = isBlazor() ? dependable.parserObject.numbers : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n\n      for (let i = 0; i < length; i++) {\n        const str = patternMatch[i];\n        const len = str.length;\n        const char = str[0] === 'K' ? 'h' : str[0];\n        let isNumber;\n        let canUpdate; // eslint-disable-next-line\n\n        let charKey = datePartMatcher[char];\n        const optional = len === 2 ? '' : '?';\n\n        if (isgmtTraversed) {\n          gmtCorrection = zCorrectTemp;\n          isgmtTraversed = false;\n        }\n\n        switch (char) {\n          case 'E':\n          case 'c':\n            // eslint-disable-next-line\n            let weekData;\n\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              weekData = getValue('days.' + IntlBase.monthIndex[len], dependable.dateObject);\n            } else {\n              // eslint-disable-next-line\n              weekData = dependable.dateObject[IntlBase.days][standalone$1][IntlBase.monthIndex[len]];\n            } // eslint-disable-next-line\n\n\n            let weekObject = ParserBase.reverseObject(weekData); // tslint:enable\n\n            regexString += '(' + Object.keys(weekObject).join('|') + ')';\n            break;\n\n          case 'M':\n          case 'L':\n          case 'd':\n          case 'm':\n          case 's':\n          case 'h':\n          case 'H':\n          case 'f':\n            canUpdate = true;\n\n            if ((char === 'M' || char === 'L') && len > 2) {\n              let monthData;\n\n              if (isBlazor()) {\n                // eslint-disable-next-line\n                monthData = getValue('months.' + IntlBase.monthIndex[len], dependable.dateObject);\n              } else {\n                // eslint-disable-next-line\n                monthData = dependable.dateObject[month][standalone$1][IntlBase.monthIndex[len]];\n              } // eslint-disable-next-line\n\n\n              parseOptions[charKey] = ParserBase.reverseObject(monthData); // eslint-disable-next-line\n\n              regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n            } else if (char === 'f') {\n              if (len > 3) {\n                continue;\n              }\n\n              isNumber = true;\n              regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';\n            } else {\n              isNumber = true;\n              regexString += '(' + nRegx + nRegx + optional + ')';\n            }\n\n            if (char === 'h') {\n              parseOptions.hour12 = true;\n            }\n\n            break;\n\n          case 'W':\n            // eslint-disable-next-line\n            let opt = len === 1 ? '?' : '';\n            regexString += '(' + nRegx + opt + nRegx + ')';\n            break;\n\n          case 'y':\n            canUpdate = isNumber = true;\n\n            if (len === 2) {\n              regexString += '(' + nRegx + nRegx + ')';\n            } else {\n              regexString += '(' + nRegx + '{' + len + ',})';\n            }\n\n            break;\n\n          case 'a':\n            canUpdate = true; // eslint-disable-next-line\n\n            let periodValur = isBlazor() ? getValue('dayPeriods', dependable.dateObject) : getValue('dayPeriods.format.wide', dependable.dateObject); // eslint-disable-next-line\n\n            parseOptions[charKey] = ParserBase.reverseObject(periodValur); // eslint-disable-next-line\n\n            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n            break;\n\n          case 'G':\n            canUpdate = true; // eslint-disable-next-line\n\n            let eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow'; // eslint-disable-next-line\n\n            parseOptions[charKey] = ParserBase.reverseObject(isBlazor() ? getValue('eras', dependable.dateObject) : getValue('eras.' + eText, dependable.dateObject)); // eslint-disable-next-line\n\n            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';\n            break;\n\n          case 'z':\n            // eslint-disable-next-line\n            let tval = new Date().getTimezoneOffset();\n            canUpdate = tval !== 0; // eslint-disable-next-line\n\n            parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject); // eslint-disable-next-line\n\n            let tzone = parseOptions[charKey];\n            hourOnly = len < 4; // eslint-disable-next-line\n\n            let hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;\n            hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);\n            regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';\n            isgmtTraversed = true;\n            zCorrectTemp = hourOnly ? 6 : 12;\n            break;\n\n          case '\\'':\n            // eslint-disable-next-line\n            let iString = str.replace(/'/g, '');\n            regexString += '(' + iString + ')?';\n            break;\n\n          default:\n            regexString += '([\\\\D])';\n            break;\n        }\n\n        if (canUpdate) {\n          parseOptions.evalposition[charKey] = {\n            isNumber: isNumber,\n            pos: i + 1 + gmtCorrection,\n            hourOnly: hourOnly\n          };\n        }\n\n        if (i === length - 1 && !isNullOrUndefined(regexString)) {\n          parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');\n        }\n      }\n    }\n\n    return value => {\n      const parsedDateParts = this.internalDateParse(value, parseOptions, numOptions);\n\n      if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {\n        return null;\n      }\n\n      if (parseOptions.isIslamic) {\n        let dobj = {};\n        let tYear = parsedDateParts.year;\n        const tDate = parsedDateParts.day;\n        const tMonth = parsedDateParts.month;\n        const ystrig = tYear ? tYear + '' : '';\n        const is2DigitYear = ystrig.length === 2;\n\n        if (!tYear || !tMonth || !tDate || is2DigitYear) {\n          dobj = HijriParser.getHijriDate(new Date());\n        }\n\n        if (is2DigitYear) {\n          tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);\n        } // tslint:disable-next-line\n\n\n        const dateObject = HijriParser.toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);\n        parsedDateParts.year = dateObject.getFullYear();\n        parsedDateParts.month = dateObject.getMonth() + 1;\n        parsedDateParts.day = dateObject.getDate();\n      }\n\n      return this.getDateObject(parsedDateParts);\n    };\n  }\n  /* tslint:disable */\n\n  /**\n   * Returns date object for provided date options\n   *\n   * @param {DateParts} options ?\n   * @param {Date} value ?\n   * @returns {Date} ?\n   */\n\n\n  static getDateObject(options, value) {\n    const res = value || new Date();\n    res.setMilliseconds(0);\n    const tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];\n    let y = options.year;\n    const desig = options.designator;\n    const tzone = options.timeZone;\n\n    if (!isUndefined(y)) {\n      const len = (y + '').length;\n\n      if (len <= 2) {\n        const century = Math.floor(res.getFullYear() / 100) * 100;\n        y += century;\n      }\n\n      res.setFullYear(y);\n    }\n\n    for (const key of tKeys) {\n      // eslint-disable-next-line\n      let tValue = options[key];\n\n      if (isUndefined(tValue) && key === 'day') {\n        res.setDate(1);\n      }\n\n      if (!isUndefined(tValue)) {\n        if (key === 'month') {\n          tValue -= 1;\n\n          if (tValue < 0 || tValue > 11) {\n            return new Date('invalid');\n          }\n\n          const pDate = res.getDate();\n          res.setDate(1); // eslint-disable-next-line\n\n          res[timeSetter$1[key]](tValue);\n          const lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();\n          res.setDate(pDate < lDate ? pDate : lDate);\n        } else {\n          if (key === 'day') {\n            const lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();\n\n            if (tValue < 1 || tValue > lastDay) {\n              return null;\n            }\n          } // eslint-disable-next-line\n\n\n          res[timeSetter$1[key]](tValue);\n        }\n      }\n    }\n\n    if (!isUndefined(desig)) {\n      const hour = res.getHours();\n\n      if (desig === 'pm') {\n        res.setHours(hour + (hour === 12 ? 0 : 12));\n      } else if (hour === 12) {\n        res.setHours(0);\n      }\n    }\n\n    if (!isUndefined(tzone)) {\n      const tzValue = tzone - res.getTimezoneOffset();\n\n      if (tzValue !== 0) {\n        res.setMinutes(res.getMinutes() + tzValue);\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Returns date parsing options for provided value along with parse and numeric options\n   *\n   * @param {string} value ?\n   * @param {ParseOptions} parseOptions ?\n   * @param {NumericOptions} num ?\n   * @returns {DateParts} ?\n   */\n\n\n  static internalDateParse(value, parseOptions, num) {\n    const matches = value.match(parseOptions.parserRegex);\n    const retOptions = {\n      'hour': 0,\n      'minute': 0,\n      'second': 0\n    };\n\n    if (isNullOrUndefined(matches)) {\n      return null;\n    } else {\n      const props = Object.keys(parseOptions.evalposition);\n\n      for (const prop of props) {\n        const curObject = parseOptions.evalposition[prop];\n        let matchString = matches[curObject.pos];\n\n        if (curObject.isNumber) {\n          // eslint-disable-next-line\n          retOptions[prop] = this.internalNumberParser(matchString, num);\n        } else {\n          if (prop === 'timeZone' && !isUndefined(matchString)) {\n            const pos = curObject.pos;\n            let val;\n            const tmatch = matches[pos + 1];\n            const flag = !isUndefined(tmatch);\n\n            if (curObject.hourOnly) {\n              val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;\n            } else {\n              val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;\n              val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);\n            }\n\n            if (!isNullOrUndefined(val)) {\n              retOptions[prop] = val;\n            }\n          } else {\n            // eslint-disable-next-line\n            matchString = prop === 'month' && !parseOptions.isIslamic && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US') ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString; // eslint-disable-next-line\n\n            retOptions[prop] = parseOptions[prop][matchString];\n          }\n        }\n      }\n\n      if (parseOptions.hour12) {\n        retOptions.hour12 = true;\n      }\n    }\n\n    return retOptions;\n  }\n  /**\n   * Returns parsed number for provided Numeric string and Numeric Options\n   *\n   * @param {string} value ?\n   * @param {NumericOptions} option ?\n   * @returns {number} ?\n   */\n\n\n  static internalNumberParser(value, option) {\n    value = ParserBase.convertValueParts(value, option.numberParseRegex, option.numericPair);\n\n    if (latnRegex.test(value)) {\n      return +value;\n    }\n\n    return null;\n  }\n  /**\n   * Returns parsed time zone RegExp for provided hour format and time zone\n   *\n   * @param {string} hourFormat ?\n   * @param {base.TimeZoneOptions} tZone ?\n   * @param {string} nRegex ?\n   * @returns {string} ?\n   */\n\n\n  static parseTimeZoneRegx(hourFormat, tZone, nRegex) {\n    const pattern = tZone.gmtFormat;\n    let ret;\n    const cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';\n    let splitStr;\n    ret = hourFormat.replace('+', '\\\\+');\n\n    if (hourFormat.indexOf('HH') !== -1) {\n      ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');\n    } else {\n      ret = ret.replace(/H|m/g, '(' + cRegex + '?)');\n    } // eslint-disable-next-line\n\n\n    splitStr = ret.split(';').map(str => {\n      return pattern.replace('{0}', str);\n    });\n    ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;\n    return ret;\n  }\n  /**\n   * Returns zone based value.\n   *\n   * @param {boolean} flag ?\n   * @param {string} val1 ?\n   * @param {string} val2 ?\n   * @param {NumericOptions} num ?\n   * @returns {number} ?\n   */\n\n\n  static getZoneValue(flag, val1, val2, num) {\n    const ival = flag ? val1 : val2;\n\n    if (!ival) {\n      return 0;\n    }\n\n    const value = this.internalNumberParser(ival, num);\n\n    if (flag) {\n      return -value;\n    }\n\n    return value;\n  }\n\n}\n\nconst parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;\nconst groupRegex = /,/g;\nconst keys = ['minusSign', 'infinity'];\n/**\n * Module for Number Parser.\n *\n * @private\n */\n\nclass NumberParser {\n  /**\n   * Returns the parser function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static numberParser(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, '', true);\n    const parseOptions = {\n      custom: true\n    };\n    let numOptions;\n\n    if (IntlBase.formatRegex.test(option.format) || !option.format) {\n      extend(parseOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n      parseOptions.custom = false;\n\n      if (!parseOptions.fractionDigits) {\n        if (option.maximumFractionDigits) {\n          parseOptions.maximumFractionDigits = option.maximumFractionDigits;\n        }\n      }\n    } else {\n      extend(parseOptions, IntlBase.customFormat(option.format, null, null));\n    }\n\n    const numbers = getValue('numbers', dependable.parserObject); // eslint-disable-next-line\n\n    numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true, isBlazor());\n    parseOptions.symbolRegex = ParserBase.getSymbolRegex(Object.keys(numOptions.symbolMatch)); // eslint-disable-next-line\n\n    parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];\n    let symbolpattern;\n\n    if (!isBlazor()) {\n      symbolpattern = IntlBase.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);\n\n      if (symbolpattern) {\n        symbolpattern = symbolpattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n        const split = symbolpattern.split(';');\n        parseOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, '');\n        parseOptions.pData = IntlBase.getFormatData(split[0], true, '');\n      }\n    } else {\n      parseOptions.nData = extend({}, {}, getValue(parseOptions.type + 'nData', numbers));\n      parseOptions.pData = extend({}, {}, getValue(parseOptions.type + 'pData', numbers));\n\n      if (parseOptions.type === 'currency' && option.currency) {\n        IntlBase.replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], getValue('currencySymbol', numbers), option.currency);\n      }\n    }\n\n    return value => {\n      return this.getParsedNumber(value, parseOptions, numOptions);\n    };\n  }\n  /**\n   * Returns parsed number for the provided formatting options\n   *\n   * @param {string} value ?\n   * @param {NumericParts} options ?\n   * @param {NumericOptions} numOptions ?\n   * @returns {number} ?\n   */\n\n\n  static getParsedNumber(value, options, numOptions) {\n    let isNegative;\n    let isPercent;\n    let tempValue;\n    let lead;\n    let end;\n    let ret;\n\n    if (value.indexOf(options.infinity) !== -1) {\n      return Infinity;\n    } else {\n      value = ParserBase.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);\n      value = ParserBase.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);\n      value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;\n\n      if (value.indexOf('.') === 0) {\n        value = '0' + value;\n      }\n\n      const matches = value.match(parseRegex);\n\n      if (isNullOrUndefined(matches)) {\n        return NaN;\n      }\n\n      lead = matches[1];\n      tempValue = matches[2];\n      const exponent = matches[5];\n      end = matches[6];\n      isNegative = options.custom ? lead === options.nData.nlead && end === options.nData.nend : lead.indexOf(options.nData.nlead) !== -1 && end.indexOf(options.nData.nend) !== -1;\n      isPercent = isNegative ? options.nData.isPercent : options.pData.isPercent;\n      tempValue = tempValue.replace(groupRegex, '');\n\n      if (exponent) {\n        tempValue += exponent;\n      }\n\n      ret = +tempValue;\n\n      if (options.type === 'percent' || isPercent) {\n        ret = ret / 100;\n      }\n\n      if (options.custom || options.fractionDigits) {\n        ret = parseFloat(ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.fractionDigits));\n      }\n\n      if (options.maximumFractionDigits) {\n        ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);\n      }\n\n      if (isNegative) {\n        ret *= -1;\n      }\n\n      return ret;\n    }\n  }\n\n  static convertMaxFracDigits(value, options, ret, isNegative) {\n    let decimalSplitValue = value.split('.');\n\n    if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {\n      ret = +ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.maximumFractionDigits);\n    }\n\n    return ret;\n  }\n\n}\n\nclass Observer {\n  constructor(context) {\n    this.ranArray = [];\n    this.boundedEvents = {};\n\n    if (isNullOrUndefined(context)) {\n      return;\n    }\n\n    this.context = context;\n  }\n  /**\n   * To attach handler for given property in current context.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Specifies the handler function to be called while event notified.\n   * @param {Object} context - Specifies the context binded to the handler.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void}\n   */\n\n\n  on(property, handler, context, id) {\n    if (isNullOrUndefined(handler)) {\n      return;\n    }\n\n    const cntxt = context || this.context;\n\n    if (this.notExist(property)) {\n      this.boundedEvents[property] = [{\n        handler: handler,\n        context: cntxt\n      }];\n      return;\n    }\n\n    if (!isNullOrUndefined(id)) {\n      if (this.ranArray.indexOf(id) === -1) {\n        this.ranArray.push(id);\n        this.boundedEvents[property].push({\n          handler: handler,\n          context: cntxt,\n          id: id\n        });\n      }\n    } else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n      this.boundedEvents[property].push({\n        handler: handler,\n        context: cntxt\n      });\n    }\n  }\n  /**\n   * To remove handlers from a event attached using on() function.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void} ?\n   */\n\n\n  off(property, handler, id) {\n    if (this.notExist(property)) {\n      return;\n    }\n\n    const curObject = getValue(property, this.boundedEvents);\n\n    if (handler) {\n      for (let i = 0; i < curObject.length; i++) {\n        if (id) {\n          if (curObject[i].id === id) {\n            curObject.splice(i, 1);\n            const indexLocation = this.ranArray.indexOf(id);\n\n            if (indexLocation !== -1) {\n              this.ranArray.splice(indexLocation, 1);\n            }\n\n            break;\n          }\n        } else if (handler === curObject[i].handler) {\n          curObject.splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      delete this.boundedEvents[property];\n    }\n  }\n  /**\n   * To notify the handlers in the specified event.\n   *\n   * @param {string} property - Specifies the event to be notify.\n   * @param {Object} argument - Additional parameters to pass while calling the handler.\n   * @param {Function} successHandler - this function will invoke after event successfully triggered\n   * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n   * @returns {void} ?\n   */\n\n\n  notify(property, argument, successHandler, errorHandler) {\n    if (this.notExist(property)) {\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n\n      return;\n    }\n\n    if (argument) {\n      argument.name = property;\n    }\n\n    const blazor = 'Blazor';\n    const curObject = getValue(property, this.boundedEvents).slice(0);\n\n    if (window[blazor]) {\n      return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n    } else {\n      for (const cur of curObject) {\n        cur.handler.call(cur.context, argument);\n      }\n\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n    }\n  }\n\n  blazorCallback(objs, argument, successHandler, errorHandler, index) {\n    const isTrigger = index === objs.length - 1;\n\n    if (index < objs.length) {\n      const obj = objs[index];\n      const promise = obj.handler.call(obj.context, argument);\n\n      if (promise && typeof promise.then === 'function') {\n        if (!successHandler) {\n          return promise;\n        }\n\n        promise.then(data => {\n          data = typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data;\n          extend(argument, argument, data, true);\n\n          if (successHandler && isTrigger) {\n            successHandler.call(obj.context, argument);\n          } else {\n            return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n          }\n        }).catch(data => {\n          if (errorHandler) {\n            errorHandler.call(obj.context, typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data);\n          }\n        });\n      } else if (successHandler && isTrigger) {\n        successHandler.call(obj.context, argument);\n      } else {\n        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n      }\n    }\n  } // eslint-disable-next-line\n\n\n  dateReviver(key, value) {\n    const dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n\n    if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  isJson(value) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * To destroy handlers in the event\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    this.boundedEvents = this.context = undefined;\n  }\n  /**\n   * Returns if the property exists.\n   *\n   * @param {string} prop ?\n   * @returns {boolean} ?\n   */\n\n\n  notExist(prop) {\n    // eslint-disable-next-line\n    return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n  }\n  /**\n   * Returns if the handler is present.\n   *\n   * @param {BoundOptions[]} boundedEvents ?\n   * @param {Function} handler ?\n   * @returns {boolean} ?\n   */\n\n\n  isHandlerPresent(boundedEvents, handler) {\n    for (const cur of boundedEvents) {\n      if (cur.handler === handler) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n/**\n * Specifies the observer used for external change detection.\n */\n\n\nconst onIntlChange = new Observer();\n/**\n * Specifies the default rtl status for EJ2 components.\n */\n\nlet rightToLeft = false;\n/**\n * Specifies the CLDR data loaded for internationalization functionalities.\n *\n * @private\n */\n\nconst cldrData = {};\n/**\n * Specifies the default culture value to be considered.\n *\n * @private\n */\n\nlet defaultCulture = 'en-US';\n/**\n * Specifies default currency code to be considered\n *\n * @private\n */\n\nlet defaultCurrencyCode = 'USD';\nconst mapper = ['numericObject', 'dateObject'];\n/**\n * Internationalization class provides support to parse and format the number and date object to the desired format.\n * ```typescript\n * // To set the culture globally\n * setCulture('en-GB');\n *\n * // To set currency code globally\n * setCurrencyCode('EUR');\n *\n * //Load cldr data\n * loadCldr(gregorainData);\n * loadCldr(timeZoneData);\n * loadCldr(numbersData);\n * loadCldr(numberSystemData);\n *\n * // To use formatter in component side\n * let Intl:Internationalization = new Internationalization();\n *\n * // Date formatting\n * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});\n * dateFormatter(new Date('11/2/2016'));\n * dateFormatter(new Date('25/2/2030'));\n * Intl.formatDate(new Date(),{skeleton:'E'});\n *\n * //Number formatting\n * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})\n * numberFormatter(24563334);\n * Intl.formatNumber(123123,{skeleton:'p2'});\n *\n * // Date parser\n * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});\n * dateParser('10:30 PM');\n * Intl.parseDate('10',{skeleton:'H'});\n * ```\n */\n\nclass Internationalization {\n  constructor(cultureName) {\n    if (cultureName) {\n      this.culture = cultureName;\n    }\n  }\n  /**\n   * Returns the format function for given options.\n   *\n   * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.\n   * @returns {Function} ?\n   */\n\n\n  getDateFormat(options) {\n    return DateFormat.dateFormat(this.getCulture(), options || {\n      type: 'date',\n      skeleton: 'short'\n    }, cldrData);\n  }\n  /**\n   * Returns the format function for given options.\n   *\n   * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.\n   * @returns {Function} ?\n   */\n\n\n  getNumberFormat(options) {\n    if (options && !options.currency) {\n      options.currency = defaultCurrencyCode;\n    }\n\n    if (isBlazor() && options && !options.format) {\n      options.minimumFractionDigits = 0;\n    }\n\n    return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);\n  }\n  /**\n   * Returns the parser function for given options.\n   *\n   * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.\n   * @returns {Function} ?\n   */\n\n\n  getDateParser(options) {\n    return DateParser.dateParser(this.getCulture(), options || {\n      skeleton: 'short',\n      type: 'date'\n    }, cldrData);\n  }\n  /**\n   * Returns the parser function for given options.\n   *\n   * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.\n   * @returns {Function} ?\n   */\n\n\n  getNumberParser(options) {\n    if (isBlazor() && options && !options.format) {\n      options.minimumFractionDigits = 0;\n    }\n\n    return NumberParser.numberParser(this.getCulture(), options || {\n      format: 'N'\n    }, cldrData);\n  }\n  /**\n   * Returns the formatted string based on format options.\n   *\n   * @param {number} value - Specifies the number to format.\n   * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.\n   * @returns {string} ?\n   */\n\n\n  formatNumber(value, option) {\n    return this.getNumberFormat(option)(value);\n  }\n  /**\n   * Returns the formatted date string based on format options.\n   *\n   * @param {Date} value - Specifies the number to format.\n   * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.\n   * @returns {string} ?\n   */\n\n\n  formatDate(value, option) {\n    return this.getDateFormat(option)(value);\n  }\n  /**\n   * Returns the date object for given date string and options.\n   *\n   * @param {string} value - Specifies the string to parse.\n   * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.\n   * @returns {Date} ?\n   */\n\n\n  parseDate(value, option) {\n    return this.getDateParser(option)(value);\n  }\n  /**\n   * Returns the number object from the given string value and options.\n   *\n   * @param {string} value - Specifies the string to parse.\n   * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.\n   * @returns {number} ?\n   */\n\n\n  parseNumber(value, option) {\n    return this.getNumberParser(option)(value);\n  }\n  /**\n   * Returns Native Date Time Pattern\n   *\n   * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.\n   * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getDatePattern(option, isExcelFormat) {\n    return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);\n  }\n  /**\n   * Returns Native Number Pattern\n   *\n   * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.\n   * @param {boolean} isExcel ?\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getNumberPattern(option, isExcel) {\n    return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);\n  }\n  /**\n   * Returns the First Day of the Week\n   *\n   * @returns {number} ?\n   */\n\n\n  getFirstDayOfWeek() {\n    return IntlBase.getWeekData(this.getCulture(), cldrData);\n  }\n  /**\n   * Returns the culture\n   *\n   * @returns {string} ?\n   */\n\n\n  getCulture() {\n    return this.culture || defaultCulture;\n  }\n\n}\n/**\n * Set the default culture to all EJ2 components\n *\n * @param {string} cultureName - Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\n\n\nfunction setCulture(cultureName) {\n  defaultCulture = cultureName;\n  onIntlChange.notify('notifyExternalChange', {\n    'locale': defaultCulture\n  });\n}\n/**\n * Set the default currency code to all EJ2 components\n *\n * @param {string} currencyCode Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\n\n\nfunction setCurrencyCode(currencyCode) {\n  defaultCurrencyCode = currencyCode;\n  onIntlChange.notify('notifyExternalChange', {\n    'currencyCode': defaultCurrencyCode\n  });\n}\n/**\n * Load the CLDR data into context\n *\n * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.\n * @returns {void} ?\n */\n\n\nfunction loadCldr(...data) {\n  for (const obj of data) {\n    extend(cldrData, obj, {}, true);\n  }\n}\n/**\n * To enable or disable RTL functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.\n * @returns {void} ?\n */\n\n\nfunction enableRtl(status = true) {\n  rightToLeft = status;\n  onIntlChange.notify('notifyExternalChange', {\n    enableRtl: rightToLeft\n  });\n}\n/**\n * To get the numeric CLDR object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} type ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\n\n\nfunction getNumericObject(locale, type) {\n  // eslint-disable-next-line\n  let numObject = IntlBase.getDependables(cldrData, locale, '', true)[mapper[0]]; // eslint-disable-next-line\n\n  const dateObject = IntlBase.getDependables(cldrData, locale, '')[mapper[1]];\n  const numSystem = getValue('defaultNumberingSystem', numObject);\n  const symbPattern = isBlazor() ? getValue('numberSymbols', numObject) : getValue('symbols-numberSystem-' + numSystem, numObject);\n  const pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);\n  return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), {\n    'dateSeparator': IntlBase.getDateSeparator(dateObject)\n  });\n}\n/**\n * To get the numeric CLDR  number base object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} currency - Specifies the currency for which numericObject to be returned.\n * @returns {string} ?\n * @ignore\n * @private\n */\n\n\nfunction getNumberDependable(locale, currency) {\n  // eslint-disable-next-line\n  const numObject = IntlBase.getDependables(cldrData, locale, '', true); // eslint-disable-next-line\n\n  return IntlBase.getCurrencySymbol(numObject.numericObject, currency);\n}\n/**\n * To get the default date CLDR object.\n *\n * @param {string} mode ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\n\n\nfunction getDefaultDateObject(mode) {\n  // eslint-disable-next-line\n  return IntlBase.getDependables(cldrData, '', mode, false)[mapper[1]];\n}\n\nconst blazorCultureFormats = {\n  'en-US': {\n    'd': 'M/d/y',\n    'D': 'EEEE, MMMM d, y',\n    'f': 'EEEE, MMMM d, y h:mm a',\n    'F': 'EEEE, MMMM d, y h:mm:s a',\n    'g': 'M/d/y h:mm a',\n    'G': 'M/d/yyyy h:mm:ss tt',\n    'm': 'MMMM d',\n    'M': 'MMMM d',\n    'r': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n    'R': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n    's': 'yyyy\\'-\\'MM\\'-\\'dd\\'T\\'HH\\':\\'mm\\':\\'ss',\n    't': 'h:mm tt',\n    'T': 'h:m:s tt',\n    'u': 'yyyy\\'-\\'MM\\'-\\'dd HH\\':\\'mm\\':\\'ss\\'Z\\'',\n    'U': 'dddd, MMMM d, yyyy h:mm:ss tt',\n    'y': 'MMMM yyyy',\n    'Y': 'MMMM yyyy'\n  }\n};\n/**\n * Date base common constants and function for date parser and formatter.\n */\n// eslint-disable-next-line\n\nvar IntlBase;\n\n(function (IntlBase) {\n  // tslint:disable-next-line:max-line-length\n  IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n  IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*[0#\\ ]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n  IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;\n  const fractionRegex = /[0-9]/g;\n  IntlBase.defaultCurrency = '$';\n  const mapper = ['infinity', 'nan', 'group', 'decimal'];\n  const patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;\n  const patternMatch = {\n    'G': '',\n    'M': 'm',\n    'L': 'm',\n    'H': 'h',\n    'c': 'd',\n    '\\'': '\"',\n    ' a': ' AM/PM',\n    'yy': 'yy',\n    'y': 'yyyy',\n    'EEEE': 'dddd',\n    'E': 'ddd'\n  };\n  IntlBase.dateConverterMapper = /dddd|ddd/ig;\n  const defaultFirstDay = 'sun';\n  IntlBase.islamicRegex = /^islamic/;\n  const firstDayMapper = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  };\n  IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n  IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;\n  IntlBase.curWithoutNumberRegex = /(c|a)$/ig;\n  const typeMapper = {\n    '$': 'isCurrency',\n    '%': 'isPercent',\n    '-': 'isNegative',\n    0: 'nlead',\n    1: 'nend'\n  };\n  IntlBase.dateParseRegex = /([a-z])\\1*|'([^']|'')+'|''|./gi;\n  IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];\n  /* tslint:disable:quotemark */\n\n  IntlBase.defaultObject = {\n    'dates': {\n      'calendars': {\n        'gregorian': {\n          'months': {\n            'stand-alone': {\n              'abbreviated': {\n                '1': 'Jan',\n                '2': 'Feb',\n                '3': 'Mar',\n                '4': 'Apr',\n                '5': 'May',\n                '6': 'Jun',\n                '7': 'Jul',\n                '8': 'Aug',\n                '9': 'Sep',\n                '10': 'Oct',\n                '11': 'Nov',\n                '12': 'Dec'\n              },\n              'narrow': {\n                '1': 'J',\n                '2': 'F',\n                '3': 'M',\n                '4': 'A',\n                '5': 'M',\n                '6': 'J',\n                '7': 'J',\n                '8': 'A',\n                '9': 'S',\n                '10': 'O',\n                '11': 'N',\n                '12': 'D'\n              },\n              'wide': {\n                '1': 'January',\n                '2': 'February',\n                '3': 'March',\n                '4': 'April',\n                '5': 'May',\n                '6': 'June',\n                '7': 'July',\n                '8': 'August',\n                '9': 'September',\n                '10': 'October',\n                '11': 'November',\n                '12': 'December'\n              }\n            }\n          },\n          'days': {\n            'stand-alone': {\n              'abbreviated': {\n                'sun': 'Sun',\n                'mon': 'Mon',\n                'tue': 'Tue',\n                'wed': 'Wed',\n                'thu': 'Thu',\n                'fri': 'Fri',\n                'sat': 'Sat'\n              },\n              'narrow': {\n                'sun': 'S',\n                'mon': 'M',\n                'tue': 'T',\n                'wed': 'W',\n                'thu': 'T',\n                'fri': 'F',\n                'sat': 'S'\n              },\n              'short': {\n                'sun': 'Su',\n                'mon': 'Mo',\n                'tue': 'Tu',\n                'wed': 'We',\n                'thu': 'Th',\n                'fri': 'Fr',\n                'sat': 'Sa'\n              },\n              'wide': {\n                'sun': 'Sunday',\n                'mon': 'Monday',\n                'tue': 'Tuesday',\n                'wed': 'Wednesday',\n                'thu': 'Thursday',\n                'fri': 'Friday',\n                'sat': 'Saturday'\n              }\n            }\n          },\n          'dayPeriods': {\n            'format': {\n              'wide': {\n                'am': 'AM',\n                'pm': 'PM'\n              }\n            }\n          },\n          'eras': {\n            'eraNames': {\n              '0': 'Before Christ',\n              '0-alt-variant': 'Before Common Era',\n              '1': 'Anno Domini',\n              '1-alt-variant': 'Common Era'\n            },\n            'eraAbbr': {\n              '0': 'BC',\n              '0-alt-variant': 'BCE',\n              '1': 'AD',\n              '1-alt-variant': 'CE'\n            },\n            'eraNarrow': {\n              '0': 'B',\n              '0-alt-variant': 'BCE',\n              '1': 'A',\n              '1-alt-variant': 'CE'\n            }\n          },\n          'dateFormats': {\n            'full': 'EEEE, MMMM d, y',\n            'long': 'MMMM d, y',\n            'medium': 'MMM d, y',\n            'short': 'M/d/yy'\n          },\n          'timeFormats': {\n            'full': 'h:mm:ss a zzzz',\n            'long': 'h:mm:ss a z',\n            'medium': 'h:mm:ss a',\n            'short': 'h:mm a'\n          },\n          'dateTimeFormats': {\n            'full': '{1} \\'at\\' {0}',\n            'long': '{1} \\'at\\' {0}',\n            'medium': '{1}, {0}',\n            'short': '{1}, {0}',\n            'availableFormats': {\n              'd': 'd',\n              'E': 'ccc',\n              'Ed': 'd E',\n              'Ehm': 'E h:mm a',\n              'EHm': 'E HH:mm',\n              'Ehms': 'E h:mm:ss a',\n              'EHms': 'E HH:mm:ss',\n              'Gy': 'y G',\n              'GyMMM': 'MMM y G',\n              'GyMMMd': 'MMM d, y G',\n              'GyMMMEd': 'E, MMM d, y G',\n              'h': 'h a',\n              'H': 'HH',\n              'hm': 'h:mm a',\n              'Hm': 'HH:mm',\n              'hms': 'h:mm:ss a',\n              'Hms': 'HH:mm:ss',\n              'hmsv': 'h:mm:ss a v',\n              'Hmsv': 'HH:mm:ss v',\n              'hmv': 'h:mm a v',\n              'Hmv': 'HH:mm v',\n              'M': 'L',\n              'Md': 'M/d',\n              'MEd': 'E, M/d',\n              'MMM': 'LLL',\n              'MMMd': 'MMM d',\n              'MMMEd': 'E, MMM d',\n              'MMMMd': 'MMMM d',\n              'ms': 'mm:ss',\n              'y': 'y',\n              'yM': 'M/y',\n              'yMd': 'M/d/y',\n              'yMEd': 'E, M/d/y',\n              'yMMM': 'MMM y',\n              'yMMMd': 'MMM d, y',\n              'yMMMEd': 'E, MMM d, y',\n              'yMMMM': 'MMMM y'\n            }\n          }\n        },\n        'islamic': {\n          'months': {\n            'stand-alone': {\n              'abbreviated': {\n                '1': 'Muh.',\n                '2': 'Saf.',\n                '3': 'Rab. I',\n                '4': 'Rab. II',\n                '5': 'Jum. I',\n                '6': 'Jum. II',\n                '7': 'Raj.',\n                '8': 'Sha.',\n                '9': 'Ram.',\n                '10': 'Shaw.',\n                '11': 'Dhuʻl-Q.',\n                '12': 'Dhuʻl-H.'\n              },\n              'narrow': {\n                '1': '1',\n                '2': '2',\n                '3': '3',\n                '4': '4',\n                '5': '5',\n                '6': '6',\n                '7': '7',\n                '8': '8',\n                '9': '9',\n                '10': '10',\n                '11': '11',\n                '12': '12'\n              },\n              'wide': {\n                '1': 'Muharram',\n                '2': 'Safar',\n                '3': 'Rabiʻ I',\n                '4': 'Rabiʻ II',\n                '5': 'Jumada I',\n                '6': 'Jumada II',\n                '7': 'Rajab',\n                '8': 'Shaʻban',\n                '9': 'Ramadan',\n                '10': 'Shawwal',\n                '11': 'Dhuʻl-Qiʻdah',\n                '12': 'Dhuʻl-Hijjah'\n              }\n            }\n          },\n          'days': {\n            'stand-alone': {\n              'abbreviated': {\n                'sun': 'Sun',\n                'mon': 'Mon',\n                'tue': 'Tue',\n                'wed': 'Wed',\n                'thu': 'Thu',\n                'fri': 'Fri',\n                'sat': 'Sat'\n              },\n              'narrow': {\n                'sun': 'S',\n                'mon': 'M',\n                'tue': 'T',\n                'wed': 'W',\n                'thu': 'T',\n                'fri': 'F',\n                'sat': 'S'\n              },\n              'short': {\n                'sun': 'Su',\n                'mon': 'Mo',\n                'tue': 'Tu',\n                'wed': 'We',\n                'thu': 'Th',\n                'fri': 'Fr',\n                'sat': 'Sa'\n              },\n              'wide': {\n                'sun': 'Sunday',\n                'mon': 'Monday',\n                'tue': 'Tuesday',\n                'wed': 'Wednesday',\n                'thu': 'Thursday',\n                'fri': 'Friday',\n                'sat': 'Saturday'\n              }\n            }\n          },\n          'dayPeriods': {\n            'format': {\n              'wide': {\n                'am': 'AM',\n                'pm': 'PM'\n              }\n            }\n          },\n          'eras': {\n            'eraNames': {\n              '0': 'AH'\n            },\n            'eraAbbr': {\n              '0': 'AH'\n            },\n            'eraNarrow': {\n              '0': 'AH'\n            }\n          },\n          'dateFormats': {\n            'full': 'EEEE, MMMM d, y G',\n            'long': 'MMMM d, y G',\n            'medium': 'MMM d, y G',\n            'short': 'M/d/y GGGGG'\n          },\n          'timeFormats': {\n            'full': 'h:mm:ss a zzzz',\n            'long': 'h:mm:ss a z',\n            'medium': 'h:mm:ss a',\n            'short': 'h:mm a'\n          },\n          'dateTimeFormats': {\n            'full': '{1} \\'at\\' {0}',\n            'long': '{1} \\'at\\' {0}',\n            'medium': '{1}, {0}',\n            'short': '{1}, {0}',\n            'availableFormats': {\n              'd': 'd',\n              'E': 'ccc',\n              'Ed': 'd E',\n              'Ehm': 'E h:mm a',\n              'EHm': 'E HH:mm',\n              'Ehms': 'E h:mm:ss a',\n              'EHms': 'E HH:mm:ss',\n              'Gy': 'y G',\n              'GyMMM': 'MMM y G',\n              'GyMMMd': 'MMM d, y G',\n              'GyMMMEd': 'E, MMM d, y G',\n              'h': 'h a',\n              'H': 'HH',\n              'hm': 'h:mm a',\n              'Hm': 'HH:mm',\n              'hms': 'h:mm:ss a',\n              'Hms': 'HH:mm:ss',\n              'M': 'L',\n              'Md': 'M/d',\n              'MEd': 'E, M/d',\n              'MMM': 'LLL',\n              'MMMd': 'MMM d',\n              'MMMEd': 'E, MMM d',\n              'MMMMd': 'MMMM d',\n              'ms': 'mm:ss',\n              'y': 'y G',\n              'yyyy': 'y G',\n              'yyyyM': 'M/y GGGGG',\n              'yyyyMd': 'M/d/y GGGGG',\n              'yyyyMEd': 'E, M/d/y GGGGG',\n              'yyyyMMM': 'MMM y G',\n              'yyyyMMMd': 'MMM d, y G',\n              'yyyyMMMEd': 'E, MMM d, y G',\n              'yyyyMMMM': 'MMMM y G',\n              'yyyyQQQ': 'QQQ y G',\n              'yyyyQQQQ': 'QQQQ y G'\n            }\n          }\n        }\n      },\n      'timeZoneNames': {\n        'hourFormat': '+HH:mm;-HH:mm',\n        'gmtFormat': 'GMT{0}',\n        'gmtZeroFormat': 'GMT'\n      }\n    },\n    'numbers': {\n      'currencies': {\n        'USD': {\n          'displayName': 'US Dollar',\n          'symbol': '$',\n          'symbol-alt-narrow': '$'\n        },\n        'EUR': {\n          'displayName': 'Euro',\n          'symbol': '€',\n          'symbol-alt-narrow': '€'\n        },\n        'GBP': {\n          'displayName': 'British Pound',\n          'symbol-alt-narrow': '£'\n        }\n      },\n      'defaultNumberingSystem': 'latn',\n      'minimumGroupingDigits': '1',\n      'symbols-numberSystem-latn': {\n        'decimal': '.',\n        'group': ',',\n        'list': ';',\n        'percentSign': '%',\n        'plusSign': '+',\n        'minusSign': '-',\n        'exponential': 'E',\n        'superscriptingExponent': '×',\n        'perMille': '‰',\n        'infinity': '∞',\n        'nan': 'NaN',\n        'timeSeparator': ':'\n      },\n      'decimalFormats-numberSystem-latn': {\n        'standard': '#,##0.###'\n      },\n      'percentFormats-numberSystem-latn': {\n        'standard': '#,##0%'\n      },\n      'currencyFormats-numberSystem-latn': {\n        'standard': '¤#,##0.00',\n        'accounting': '¤#,##0.00;(¤#,##0.00)'\n      },\n      'scientificFormats-numberSystem-latn': {\n        'standard': '#E0'\n      }\n    }\n  };\n  IntlBase.blazorDefaultObject = {\n    'numbers': {\n      'mapper': {\n        '0': '0',\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9'\n      },\n      'mapperDigits': '0123456789',\n      'numberSymbols': {\n        'decimal': '.',\n        'group': ',',\n        'plusSign': '+',\n        'minusSign': '-',\n        'percentSign': '%',\n        'nan': 'NaN',\n        'timeSeparator': ':',\n        'infinity': '∞'\n      },\n      'timeSeparator': ':',\n      'currencySymbol': '$',\n      'currencypData': {\n        'nlead': '$',\n        'nend': '',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'percentpData': {\n        'nlead': '',\n        'nend': '%',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'percentnData': {\n        'nlead': '-',\n        'nend': '%',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'currencynData': {\n        'nlead': '($',\n        'nend': ')',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'decimalnData': {\n        'nlead': '-',\n        'nend': '',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'decimalpData': {\n        'nlead': '',\n        'nend': '',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      }\n    },\n    'dates': {\n      'dayPeriods': {\n        'am': 'AM',\n        'pm': 'PM'\n      },\n      'dateSeperator': '/',\n      'days': {\n        'abbreviated': {\n          'sun': 'Sun',\n          'mon': 'Mon',\n          'tue': 'Tue',\n          'wed': 'Wed',\n          'thu': 'Thu',\n          'fri': 'Fri',\n          'sat': 'Sat'\n        },\n        'short': {\n          'sun': 'Su',\n          'mon': 'Mo',\n          'tue': 'Tu',\n          'wed': 'We',\n          'thu': 'Th',\n          'fri': 'Fr',\n          'sat': 'Sa'\n        },\n        'wide': {\n          'sun': 'Sunday',\n          'mon': 'Monday',\n          'tue': 'Tuesday',\n          'wed': 'Wednesday',\n          'thu': 'Thursday',\n          'fri': 'Friday',\n          'sat': 'Saturday'\n        }\n      },\n      'months': {\n        'abbreviated': {\n          '1': 'Jan',\n          '2': 'Feb',\n          '3': 'Mar',\n          '4': 'Apr',\n          '5': 'May',\n          '6': 'Jun',\n          '7': 'Jul',\n          '8': 'Aug',\n          '9': 'Sep',\n          '10': 'Oct',\n          '11': 'Nov',\n          '12': 'Dec'\n        },\n        'wide': {\n          '1': 'January',\n          '2': 'February',\n          '3': 'March',\n          '4': 'April',\n          '5': 'May',\n          '6': 'June',\n          '7': 'July',\n          '8': 'August',\n          '9': 'September',\n          '10': 'October',\n          '11': 'November',\n          '12': 'December'\n        }\n      },\n      'eras': {\n        '1': 'AD'\n      }\n    }\n  };\n  /* tslint:enable:quotemark */\n\n  IntlBase.monthIndex = {\n    3: 'abbreviated',\n    4: 'wide',\n    5: 'narrow',\n    1: 'abbreviated'\n  };\n  /**\n   *\n   */\n\n  IntlBase.month = 'months';\n  IntlBase.days = 'days';\n  /**\n   * Default numerber Object\n   */\n\n  IntlBase.patternMatcher = {\n    C: 'currency',\n    P: 'percent',\n    N: 'decimal',\n    A: 'currency',\n    E: 'scientific'\n  };\n  /**\n   * Returns the resultant pattern based on the skeleton, dateObject and the type provided\n   *\n   * @private\n   * @param {string} skeleton ?\n   * @param {Object} dateObject ?\n   * @param {string} type ?\n   * @param {boolean} isIslamic ?\n   * @param {string} blazorCulture ?\n   * @returns {string} ?\n   */\n\n  function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {\n    let resPattern;\n    const iType = type || 'date';\n\n    if (blazorCulture) {\n      resPattern = compareBlazorDateFormats({\n        skeleton: skeleton\n      }, blazorCulture).format || compareBlazorDateFormats({\n        skeleton: 'd'\n      }, 'en-US').format;\n    } else {\n      if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {\n        resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);\n\n        if (iType === 'dateTime') {\n          const dPattern = getValue('dateFormats.' + skeleton, dateObject);\n          const tPattern = getValue('timeFormats.' + skeleton, dateObject);\n          resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);\n        }\n      } else {\n        resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);\n      }\n\n      if (isUndefined(resPattern) && skeleton === 'yMd') {\n        resPattern = 'M/d/y';\n      }\n    }\n\n    return resPattern;\n  }\n\n  IntlBase.getResultantPattern = getResultantPattern;\n  /**\n   * Returns the dependable object for provided cldr data and culture\n   *\n   * @private\n   * @param {Object} cldr ?\n   * @param {string} culture ?\n   * @param {string} mode ?\n   * @param {boolean} isNumber ?\n   * @returns {any} ?\n   */\n\n  function getDependables(cldr, culture, mode, isNumber) {\n    const ret = {};\n    const calendartype = mode || 'gregorian';\n    ret.parserObject = ParserBase.getMainObject(cldr, culture) || (isBlazor() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);\n\n    if (isNumber) {\n      ret.numericObject = getValue('numbers', ret.parserObject);\n    } else {\n      const dateString = isBlazor() ? 'dates' : 'dates.calendars.' + calendartype;\n      ret.dateObject = getValue(dateString, ret.parserObject);\n    }\n\n    return ret;\n  }\n\n  IntlBase.getDependables = getDependables;\n  /**\n   * Returns the symbol pattern for provided parameters\n   *\n   * @private\n   * @param {string} type ?\n   * @param {string} numSystem ?\n   * @param {Object} obj ?\n   * @param {boolean} isAccount ?\n   * @returns {string} ?\n   */\n\n  function getSymbolPattern(type, numSystem, obj, isAccount) {\n    return getValue(type + 'Formats-numberSystem-' + numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' + numSystem + '.standard', obj) : '');\n  }\n\n  IntlBase.getSymbolPattern = getSymbolPattern;\n  /**\n   *\n   * @param {string} format ?\n   * @returns {string} ?\n   */\n\n  function ConvertDateToWeekFormat(format) {\n    const convertMapper = format.match(IntlBase.dateConverterMapper);\n\n    if (convertMapper && isBlazor()) {\n      const tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';\n      return format.replace(IntlBase.dateConverterMapper, tempString);\n    }\n\n    return format;\n  }\n\n  IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;\n  /**\n   *\n   * @param {DateFormatOptions} formatOptions ?\n   * @param {string} culture ?\n   * @returns {DateFormatOptions} ?\n   */\n\n  function compareBlazorDateFormats(formatOptions, culture) {\n    const format = formatOptions.format || formatOptions.skeleton;\n    let curFormatMapper = getValue((culture || 'en-US') + '.' + format, blazorCultureFormats);\n\n    if (!curFormatMapper) {\n      curFormatMapper = getValue('en-US.' + format, blazorCultureFormats);\n    }\n\n    if (curFormatMapper) {\n      curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);\n      formatOptions.format = curFormatMapper.replace(/tt/, 'a');\n    }\n\n    return formatOptions;\n  }\n\n  IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;\n  /**\n   * Returns proper numeric skeleton\n   *\n   * @private\n   * @param {string} skeleton ?\n   * @returns {any} ?\n   */\n\n  function getProperNumericSkeleton(skeleton) {\n    const matches = skeleton.match(IntlBase.formatRegex);\n    const ret = {};\n    const pattern = matches[1].toUpperCase();\n    ret.isAccount = pattern === 'A'; // eslint-disable-next-line\n\n    ret.type = IntlBase.patternMatcher[pattern];\n\n    if (skeleton.length > 1) {\n      ret.fractionDigits = parseInt(matches[2], 10);\n    }\n\n    return ret;\n  }\n\n  IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;\n  /**\n   * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,\n   *\n   * @private\n   * @param {string} pattern ?\n   * @param {boolean} needFraction ?\n   * @param {string} cSymbol ?\n   * @param {boolean} fractionOnly ?\n   * @returns {any} ?\n   */\n\n  function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {\n    const nData = fractionOnly ? {} : {\n      nlead: '',\n      nend: ''\n    };\n    const match = pattern.match(IntlBase.customRegex);\n\n    if (match) {\n      if (!fractionOnly) {\n        nData.nlead = changeCurrencySymbol(match[1], cSymbol);\n        nData.nend = changeCurrencySymbol(match[10], cSymbol);\n        nData.groupPattern = match[4];\n      }\n\n      const fraction = match[7];\n\n      if (fraction && needFraction) {\n        const fmatch = fraction.match(fractionRegex);\n\n        if (!isNullOrUndefined(fmatch)) {\n          nData.minimumFraction = fmatch.length;\n        } else {\n          nData.minimumFraction = 0;\n        }\n\n        nData.maximumFraction = fraction.length - 1;\n      }\n    }\n\n    return nData;\n  }\n\n  IntlBase.getFormatData = getFormatData;\n  /**\n   * Changes currency symbol\n   *\n   * @private\n   * @param {string} val ?\n   * @param {string} sym ?\n   * @returns {string} ?\n   */\n\n  function changeCurrencySymbol(val, sym) {\n    if (val) {\n      return val.replace(IntlBase.defaultCurrency, sym);\n    }\n\n    return '';\n  }\n\n  IntlBase.changeCurrencySymbol = changeCurrencySymbol;\n  /**\n   * Returns currency symbol based on currency code ?\n   *\n   * @private\n   * @param {Object} numericObject ?\n   * @param {string} currencyCode ?\n   * @param {string} altSymbol ?\n   * @returns {string} ?\n   */\n\n  function getCurrencySymbol(numericObject, currencyCode, altSymbol) {\n    const symbol = altSymbol ? '.' + altSymbol : '.symbol';\n    const getCurrency = getValue('currencies.' + currencyCode + symbol, numericObject) || getValue('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';\n    return getCurrency;\n  }\n\n  IntlBase.getCurrencySymbol = getCurrencySymbol;\n  /**\n   * Returns formatting options for custom number format\n   *\n   * @private\n   * @param {string} format ?\n   * @param {CommonOptions} dOptions ?\n   * @param {any} obj ?\n   * @returns {any} ?\n   */\n\n  function customFormat(format, dOptions, obj) {\n    const options = {};\n    const formatSplit = format.split(';');\n    const data = ['pData', 'nData', 'zeroData'];\n\n    for (let i = 0; i < formatSplit.length; i++) {\n      // eslint-disable-next-line\n      options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);\n    }\n\n    if (isNullOrUndefined(options.nData)) {\n      options.nData = extend({}, options.pData);\n      options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;\n    }\n\n    return options;\n  }\n\n  IntlBase.customFormat = customFormat;\n  /**\n   * Returns custom formatting options\n   *\n   * @private\n   * @param {string} format ?\n   * @param {CommonOptions} dOptions ?\n   * @param {Object} numObject ?\n   * @returns {any} ?\n   */\n\n  function customNumberFormat(format, dOptions, numObject) {\n    const cOptions = {\n      type: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    };\n    const pattern = format.match(IntlBase.customRegex);\n\n    if (isNullOrUndefined(pattern) || pattern[5] === '' && format !== 'N/A') {\n      cOptions.type = undefined;\n      return cOptions;\n    }\n\n    cOptions.nlead = pattern[1];\n    cOptions.nend = pattern[10];\n    let integerPart = pattern[6];\n    const spaceCapture = integerPart.match(/\\ $/g) ? true : false;\n    const spaceGrouping = integerPart.replace(/\\ $/g, '').indexOf(' ') !== -1;\n    cOptions.useGrouping = integerPart.indexOf(',') !== -1 || spaceGrouping;\n    integerPart = spaceGrouping ? integerPart.replace(/,/g, '') : integerPart.replace(/,/g, '').replace(/\\ $/g, '');\n    const fractionPart = pattern[7];\n\n    if (integerPart.indexOf('0') !== -1) {\n      cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');\n    }\n\n    if (!isNullOrUndefined(fractionPart)) {\n      cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');\n      cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');\n\n      if (cOptions.minimumFractionDigits === -1) {\n        cOptions.minimumFractionDigits = 0;\n      }\n\n      if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {\n        cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;\n      }\n    }\n\n    if (!isNullOrUndefined(dOptions)) {\n      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));\n\n      if (!cOptions.isCurrency) {\n        extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));\n      }\n    } else {\n      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));\n    }\n\n    if (!isNullOrUndefined(numObject)) {\n      const symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);\n\n      if (cOptions.useGrouping) {\n        // eslint-disable-next-line\n        cOptions.groupSeparator = spaceGrouping ? ' ' : dOptions.numberMapper.numberSymbols[mapper[2]];\n        cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);\n      }\n\n      cOptions.nlead = cOptions.nlead.replace(/'/g, '');\n      cOptions.nend = spaceCapture ? ' ' + cOptions.nend.replace(/'/g, '') : cOptions.nend.replace(/'/g, '');\n    }\n\n    return cOptions;\n  }\n\n  IntlBase.customNumberFormat = customNumberFormat;\n  /**\n   * Returns formatting options for currency or percent type\n   *\n   * @private\n   * @param {string[]} parts ?\n   * @param {string} actual ?\n   * @param {string} symbol ?\n   * @returns {any} ?\n   */\n\n  function isCurrencyPercent(parts, actual, symbol) {\n    const options = {\n      nlead: parts[0],\n      nend: parts[1]\n    };\n\n    for (let i = 0; i < 2; i++) {\n      const part = parts[i];\n      const loc = part.indexOf(actual);\n\n      if (loc !== -1 && (loc < part.indexOf('\\'') || loc > part.lastIndexOf('\\''))) {\n        // eslint-disable-next-line\n        options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1); // eslint-disable-next-line\n\n        options[typeMapper[actual]] = true;\n        options.type = options.isCurrency ? 'currency' : 'percent';\n        break;\n      }\n    }\n\n    return options;\n  }\n\n  IntlBase.isCurrencyPercent = isCurrencyPercent;\n  /**\n   * Returns culture based date separator\n   *\n   * @private\n   * @param {Object} dateObj ?\n   * @returns {string} ?\n   */\n\n  function getDateSeparator(dateObj) {\n    const value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);\n    return value ? value[1] : '/';\n  }\n\n  IntlBase.getDateSeparator = getDateSeparator;\n  /**\n   * Returns Native Date Time pattern\n   *\n   * @private\n   * @param {string} culture ?\n   * @param {DateFormatOptions} options ?\n   * @param {Object} cldr ?\n   * @param {boolean} isExcelFormat ?\n   * @returns {string} ?\n   */\n\n  function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {\n    const dependable = getDependables(cldr, culture, options.calendar);\n\n    if (isBlazor()) {\n      options = compareBlazorDateFormats(options, culture);\n    }\n\n    let actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);\n\n    if (isExcelFormat) {\n      actualPattern = actualPattern.replace(patternRegex, pattern => {\n        // eslint-disable-next-line\n        return patternMatch[pattern];\n      });\n\n      if (actualPattern.indexOf('z') !== -1) {\n        const tLength = actualPattern.match(/z/g).length;\n        let timeZonePattern;\n        const options = {\n          'timeZone': {}\n        };\n        options.numMapper = ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n        options.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n        const value = new Date();\n        const timezone = value.getTimezoneOffset();\n        let pattern = tLength < 4 ? '+H;-H' : options.timeZone.hourFormat;\n        pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n\n        if (timezone === 0) {\n          timeZonePattern = options.timeZone.gmtZeroFormat;\n        } else {\n          timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);\n          timeZonePattern = options.timeZone.gmtFormat.replace(/\\{0\\}/, timeZonePattern);\n        }\n\n        actualPattern = actualPattern.replace(/[z]+/, '\"' + timeZonePattern + '\"');\n      }\n\n      actualPattern = actualPattern.replace(/ $/, '');\n    }\n\n    return actualPattern;\n  }\n\n  IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;\n  /**\n   *\n   * @param {string} actual ?\n   * @param {any} option ?\n   * @returns {any} ?\n   */\n  // eslint-disable-next-line\n\n  function processSymbol(actual, option) {\n    if (actual.indexOf(',') !== -1) {\n      // eslint-disable-next-line\n      let split = actual.split(',');\n      actual = split[0] + getValue('numberMapper.numberSymbols.group', option) + split[1].replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n    } else {\n      actual = actual.replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n    }\n\n    return actual;\n  }\n  /**\n   * Returns Native Number pattern\n   *\n   * @private\n   * @param {string} culture ?\n   * @param {NumberFormatOptions} options ?\n   * @param {Object} cldr ?\n   * @param {boolean} isExcel ?\n   * @returns {string} ?\n   */\n\n\n  function getActualNumberFormat(culture, options, cldr, isExcel) {\n    const dependable = getDependables(cldr, culture, '', true);\n    const parseOptions = {\n      custom: true\n    };\n    const numrericObject = dependable.numericObject;\n    let minFrac;\n    const curObj = {};\n    const curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);\n    const type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};\n    const dOptions = {};\n\n    if (curMatch) {\n      dOptions.numberMapper = isBlazor() ? extend({}, dependable.numericObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n      const curCode = isBlazor() ? getValue('currencySymbol', dependable.numericObject) : getCurrencySymbol(dependable.numericObject, options.currency || defaultCurrencyCode, options.altSymbol);\n      let symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, /a/i.test(options.format));\n      symbolPattern = symbolPattern.replace(/\\u00A4/g, curCode);\n      const split = symbolPattern.split(';');\n      curObj.hasNegativePattern = isBlazor() ? true : split.length > 1;\n      curObj.nData = isBlazor() ? getValue(type.type + 'nData', numrericObject) : getFormatData(split[1] || '-' + split[0], true, curCode);\n      curObj.pData = isBlazor() ? getValue(type.type + 'pData', numrericObject) : getFormatData(split[0], false, curCode);\n\n      if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {\n        minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;\n      }\n    }\n\n    let actualPattern;\n\n    if (IntlBase.formatRegex.test(options.format) || !options.format) {\n      extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));\n      parseOptions.custom = false;\n      actualPattern = '###0';\n\n      if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {\n        const defaultMinimum = 0;\n\n        if (parseOptions.fractionDigits) {\n          options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;\n        }\n\n        actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits || options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);\n      }\n\n      if (options.minimumIntegerDigits) {\n        actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);\n      }\n\n      if (options.useGrouping) {\n        actualPattern = groupingPattern(actualPattern);\n      }\n\n      if (parseOptions.type === 'currency' || parseOptions.type && isBlazor()) {\n        if (isBlazor() && parseOptions.type !== 'currency') {\n          curObj.pData = getValue(parseOptions.type + 'pData', numrericObject);\n          curObj.nData = getValue(parseOptions.type + 'nData', numrericObject);\n        }\n\n        const cPattern = actualPattern;\n        actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;\n\n        if (curObj.hasNegativePattern || isBlazor()) {\n          actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;\n        }\n      }\n\n      if (parseOptions.type === 'percent' && !isBlazor()) {\n        actualPattern += ' %';\n      }\n    } else {\n      actualPattern = options.format.replace(/'/g, '\"');\n    }\n\n    if (Object.keys(dOptions).length > 0) {\n      actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;\n    }\n\n    return actualPattern;\n  }\n\n  IntlBase.getActualNumberFormat = getActualNumberFormat;\n  /**\n   *\n   * @param {string} pattern ?\n   * @param {number} minDigits ?\n   * @param {number} maxDigits ?\n   * @returns {string} ?\n   */\n\n  function fractionDigitsPattern(pattern, minDigits, maxDigits) {\n    pattern += '.';\n\n    for (let a = 0; a < minDigits; a++) {\n      pattern += '0';\n    }\n\n    if (minDigits < maxDigits) {\n      const diff = maxDigits - minDigits;\n\n      for (let b = 0; b < diff; b++) {\n        pattern += '#';\n      }\n    }\n\n    return pattern;\n  }\n\n  IntlBase.fractionDigitsPattern = fractionDigitsPattern;\n  /**\n   *\n   * @param {string} pattern ?\n   * @param {number} digits ?\n   * @returns {string} ?\n   */\n\n  function minimumIntegerPattern(pattern, digits) {\n    const temp = pattern.split('.');\n    let integer = '';\n\n    for (let x = 0; x < digits; x++) {\n      integer += '0';\n    }\n\n    return temp[1] ? integer + '.' + temp[1] : integer;\n  }\n\n  IntlBase.minimumIntegerPattern = minimumIntegerPattern;\n  /**\n   *\n   * @param {string} pattern ?\n   * @returns {string} ?\n   */\n\n  function groupingPattern(pattern) {\n    const temp = pattern.split('.');\n    let integer = temp[0];\n    const no = 3 - integer.length % 3;\n    const hash = no && no === 1 ? '#' : no === 2 ? '##' : '';\n    integer = hash + integer;\n    pattern = '';\n\n    for (let x = integer.length - 1; x > 0; x = x - 3) {\n      pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;\n    }\n\n    pattern = pattern.slice(1);\n    return temp[1] ? pattern + '.' + temp[1] : pattern;\n  }\n\n  IntlBase.groupingPattern = groupingPattern;\n  /**\n   *\n   * @param {string} culture ?\n   * @param {Object} cldr ?\n   * @returns {number} ?\n   */\n\n  function getWeekData(culture, cldr) {\n    let firstDay = defaultFirstDay;\n    const mapper = getValue('supplemental.weekData.firstDay', cldr);\n    let iCulture = culture;\n\n    if (/en-/.test(iCulture)) {\n      iCulture = iCulture.slice(3);\n    }\n\n    iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);\n\n    if (mapper) {\n      firstDay = mapper[iCulture] || mapper[iCulture.slice(0, 2)] || defaultFirstDay;\n    }\n\n    return firstDayMapper[firstDay];\n  }\n\n  IntlBase.getWeekData = getWeekData;\n  /**\n   * @private\n   * @param {any} pData ?\n   * @param {string} aCurrency ?\n   * @param {string} rCurrency ?\n   * @returns {void} ?\n   */\n\n  function replaceBlazorCurrency(pData, aCurrency, rCurrency) {\n    const iCurrency = getBlazorCurrencySymbol(rCurrency);\n\n    if (aCurrency !== iCurrency) {\n      for (const data of pData) {\n        data.nend = data.nend.replace(aCurrency, iCurrency);\n        data.nlead = data.nlead.replace(aCurrency, iCurrency);\n      }\n    }\n  }\n\n  IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;\n  /**\n   * @private\n   * @param {Date} date ?\n   * @returns {number} ?\n   */\n\n  function getWeekOfYear(date) {\n    const newYear = new Date(date.getFullYear(), 0, 1);\n    let day = newYear.getDay();\n    let weeknum;\n    day = day >= 0 ? day : day + 7;\n    const daynum = Math.floor((date.getTime() - newYear.getTime() - (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n\n    if (day < 4) {\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n\n      if (weeknum > 52) {\n        const nYear = new Date(date.getFullYear() + 1, 0, 1);\n        let nday = nYear.getDay();\n        nday = nday >= 0 ? nday : nday + 7;\n        weeknum = nday < 4 ? 1 : 53;\n      }\n    } else {\n      weeknum = Math.floor((daynum + day - 1) / 7);\n    }\n\n    return weeknum;\n  }\n\n  IntlBase.getWeekOfYear = getWeekOfYear;\n})(IntlBase || (IntlBase = {}));\n\nconst headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nconst defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\n\nclass Ajax {\n  /**\n   * Constructor for Ajax class\n   *\n   * @param  {string|Object} options ?\n   * @param  {string} type ?\n   * @param  {boolean} async ?\n   * @returns defaultType any\n   */\n  constructor(options, type, async, contentType) {\n    /**\n     * A boolean value indicating whether the request should be sent asynchronous or not.\n     *\n     * @default true\n     */\n    this.mode = true;\n    /**\n     * A boolean value indicating whether to ignore the promise reject.\n     *\n     * @private\n     * @default true\n     */\n\n    this.emitError = true;\n    this.options = {};\n\n    if (typeof options === 'string') {\n      this.url = options;\n      this.type = type ? type.toUpperCase() : defaultType;\n      this.mode = !isNullOrUndefined(async) ? async : true;\n    } else if (typeof options === 'object') {\n      this.options = options;\n      merge(this, this.options);\n    }\n\n    this.type = this.type ? this.type.toUpperCase() : defaultType;\n    this.contentType = this.contentType !== undefined ? this.contentType : contentType;\n  }\n  /**\n   *\n   * Send the request to server.\n   *\n   * @param {any} data - To send the user data\n   * @return {Promise} ?\n   */\n\n\n  send(data) {\n    this.data = isNullOrUndefined(data) ? this.data : data;\n    const eventArgs = {\n      cancel: false,\n      httpRequest: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.httpRequest = new XMLHttpRequest();\n\n      this.httpRequest.onreadystatechange = () => {\n        this.stateChange(resolve, reject);\n      };\n\n      if (!isNullOrUndefined(this.onLoad)) {\n        this.httpRequest.onload = this.onLoad;\n      }\n\n      if (!isNullOrUndefined(this.onProgress)) {\n        this.httpRequest.onprogress = this.onProgress;\n      }\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onAbort)) {\n        this.httpRequest.onabort = this.onAbort;\n      }\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onError)) {\n        this.httpRequest.onerror = this.onError;\n      } //** Upload Events **/\n\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onUploadProgress)) {\n        this.httpRequest.upload.onprogress = this.onUploadProgress;\n      }\n\n      this.httpRequest.open(this.type, this.url, this.mode); // Set default headers\n\n      if (!isNullOrUndefined(this.data) && this.contentType !== null) {\n        this.httpRequest.setRequestHeader('Content-Type', this.contentType || 'application/json; charset=utf-8');\n      }\n\n      if (this.beforeSend) {\n        eventArgs.httpRequest = this.httpRequest;\n        this.beforeSend(eventArgs);\n      }\n\n      if (!eventArgs.cancel) {\n        this.httpRequest.send(!isNullOrUndefined(this.data) ? this.data : null);\n      }\n    });\n    return promise;\n  }\n\n  successHandler(data) {\n    if (this.onSuccess) {\n      this.onSuccess(data, this);\n    }\n\n    return data;\n  }\n\n  failureHandler(reason) {\n    if (this.onFailure) {\n      this.onFailure(this.httpRequest);\n    }\n\n    return reason;\n  }\n\n  stateChange(resolve, reject) {\n    let data = this.httpRequest.responseText;\n\n    if (this.dataType && this.dataType.toLowerCase() === 'json') {\n      if (data === '') {\n        data = undefined;\n      } else {\n        try {\n          data = JSON.parse(data);\n        } catch (error) {// no exception handle\n        }\n      }\n    }\n\n    if (this.httpRequest.readyState === 4) {\n      //success range should be 200 to 299\n      if (this.httpRequest.status >= 200 && this.httpRequest.status <= 299 || this.httpRequest.status === 304) {\n        resolve(this.successHandler(data));\n      } else {\n        if (this.emitError) {\n          reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n        } else {\n          resolve();\n        }\n      }\n    }\n  }\n  /**\n   * To get the response header from XMLHttpRequest\n   *\n   * @param  {string} key Key to search in the response header\n   * @returns {string} ?\n   */\n\n\n  getResponseHeader(key) {\n    let responseHeaders;\n    let header; // eslint-disable-next-line\n\n    responseHeaders = {};\n    let headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n\n    while (headers) {\n      responseHeaders[headers[1].toLowerCase()] = headers[2];\n      headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n    } // eslint-disable-next-line\n\n\n    header = responseHeaders[key.toLowerCase()];\n    return isNullOrUndefined(header) ? null : header;\n  }\n\n}\n\nconst REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nconst REGX_IE = /msie|trident/i;\nconst REGX_IE11 = /Trident\\/7\\./;\nconst REGX_IOS = /(ipad|iphone|ipod touch)/i;\nconst REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nconst REGX_ANDROID = /android/i;\nconst REGX_WINDOWS = /trident|windows phone|edge/i;\nconst REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nconst REGX_BROWSER = {\n  OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n  EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n  CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n  PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n  SAFARI: /(safari)[ /]([\\w.]+)/i,\n  WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n  MSIE: /(msie|trident) ([\\w.]+)/i,\n  MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\n\nif (typeof window !== 'undefined') {\n  window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\n\n\nclass Browser {\n  static extractBrowserDetail() {\n    const browserInfo = {\n      culture: {}\n    };\n    const keys = Object.keys(REGX_BROWSER);\n    let clientInfo = [];\n\n    for (const key of keys) {\n      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n\n      if (clientInfo) {\n        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();\n        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;\n        browserInfo.version = clientInfo[2];\n        browserInfo.culture.name = browserInfo.culture.language = navigator.language; // eslint-disable-next-line\n\n        if (!!Browser.userAgent.match(REGX_IE11)) {\n          browserInfo.name = 'msie';\n          break;\n        }\n\n        const version = Browser.userAgent.match(REGX_VERSION);\n\n        if (browserInfo.name === 'safari' && version) {\n          browserInfo.version = version[2];\n        }\n\n        break;\n      }\n    }\n\n    return browserInfo;\n  }\n  /**\n   * To get events from the browser\n   *\n   * @param {string} event - type of event triggered.\n   * @returns {boolean}\n   */\n\n\n  static getEvent(event) {\n    // eslint-disable-next-line\n    const events = {\n      start: {\n        isPointer: 'pointerdown',\n        isTouch: 'touchstart',\n        isDevice: 'mousedown'\n      },\n      move: {\n        isPointer: 'pointermove',\n        isTouch: 'touchmove',\n        isDevice: 'mousemove'\n      },\n      end: {\n        isPointer: 'pointerup',\n        isTouch: 'touchend',\n        isDevice: 'mouseup'\n      },\n      cancel: {\n        isPointer: 'pointercancel',\n        isTouch: 'touchcancel',\n        isDevice: 'mouseleave'\n      }\n    };\n    return Browser.isPointer ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;\n  }\n  /**\n   * To get the Touch start event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchStartEvent() {\n    return Browser.getEvent('start');\n  }\n  /**\n   * To get the Touch end event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchEndEvent() {\n    return Browser.getEvent('end');\n  }\n  /**\n   * To get the Touch move event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchMoveEvent() {\n    return Browser.getEvent('move');\n  }\n  /**\n   * To cancel the touch event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchCancelEvent() {\n    return Browser.getEvent('cancel');\n  }\n  /**\n   * To get the value based on provided key and regX\n   *\n   * @param {string} key ?\n   * @param {RegExp} regX ?\n   * @returns {Object} ?\n   */\n\n\n  static getValue(key, regX) {\n    const browserDetails = window.browserDetails;\n\n    if ('undefined' === typeof browserDetails[key]) {\n      return browserDetails[key] = regX.test(Browser.userAgent);\n    }\n\n    if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\n      browserDetails['isIos'] = true;\n      browserDetails['isDevice'] = true;\n      browserDetails['isTouch'] = true;\n      browserDetails['isPointer'] = true;\n    }\n\n    return browserDetails[key];\n  } //Properties\n\n  /**\n   * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n   * Also we can set our own userAgent.\n   *\n   * @param {string} uA ?\n   */\n\n\n  static set userAgent(uA) {\n    Browser.uA = uA;\n    window.browserDetails = {};\n  }\n\n  static get userAgent() {\n    return Browser.uA;\n  } //Read Only Properties\n\n  /**\n   * Property is to get the browser information like Name, Version and Language\n   *\n   * @returns {BrowserInfo} ?\n   */\n\n\n  static get info() {\n    if (isUndefined(window.browserDetails.info)) {\n      return window.browserDetails.info = Browser.extractBrowserDetail();\n    }\n\n    return window.browserDetails.info;\n  }\n  /**\n   * Property is to get whether the userAgent is based IE.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIE() {\n    return Browser.getValue('isIE', REGX_IE);\n  }\n  /**\n   * Property is to get whether the browser has touch support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isTouch() {\n    if (isUndefined(window.browserDetails.isTouch)) {\n      return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;\n    }\n\n    return window.browserDetails.isTouch;\n  }\n  /**\n   * Property is to get whether the browser has Pointer support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isPointer() {\n    if (isUndefined(window.browserDetails.isPointer)) {\n      return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;\n    }\n\n    return window.browserDetails.isPointer;\n  }\n  /**\n   * Property is to get whether the browser has MSPointer support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isMSPointer() {\n    if (isUndefined(window.browserDetails.isMSPointer)) {\n      return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;\n    }\n\n    return window.browserDetails.isMSPointer;\n  }\n  /**\n   * Property is to get whether the userAgent is device based.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isDevice() {\n    return Browser.getValue('isDevice', REGX_MOBILE);\n  }\n  /**\n   * Property is to get whether the userAgent is IOS.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIos() {\n    return Browser.getValue('isIos', REGX_IOS);\n  }\n  /**\n   * Property is to get whether the userAgent is Ios7.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIos7() {\n    return Browser.getValue('isIos7', REGX_IOS7);\n  }\n  /**\n   * Property is to get whether the userAgent is Android.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isAndroid() {\n    return Browser.getValue('isAndroid', REGX_ANDROID);\n  }\n  /**\n   * Property is to identify whether application ran in web view.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isWebView() {\n    if (isUndefined(window.browserDetails.isWebView)) {\n      window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');\n      return window.browserDetails.isWebView;\n    }\n\n    return window.browserDetails.isWebView;\n  }\n  /**\n   * Property is to get whether the userAgent is Windows.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isWindows() {\n    return Browser.getValue('isWindows', REGX_WINDOWS);\n  }\n  /**\n   * Property is to get the touch start event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchStartEvent() {\n    if (isUndefined(window.browserDetails.touchStartEvent)) {\n      return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n    }\n\n    return window.browserDetails.touchStartEvent;\n  }\n  /**\n   * Property is to get the touch move event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchMoveEvent() {\n    if (isUndefined(window.browserDetails.touchMoveEvent)) {\n      return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n    }\n\n    return window.browserDetails.touchMoveEvent;\n  }\n  /**\n   * Property is to get the touch end event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchEndEvent() {\n    if (isUndefined(window.browserDetails.touchEndEvent)) {\n      return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n    }\n\n    return window.browserDetails.touchEndEvent;\n  }\n  /**\n   * Property is to cancel the touch end event.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchCancelEvent() {\n    if (isUndefined(window.browserDetails.touchCancelEvent)) {\n      return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n    }\n\n    return window.browserDetails.touchCancelEvent;\n  }\n\n}\n/* istanbul ignore next */\n\n\nBrowser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n/**\n * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element\n * ```html\n * <div id=\"Eventdiv\">  </div>\n * <script>\n *   let node: HTMLElement = document.querySelector(\"#Eventdiv\");\n *   EventHandler.addEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   EventHandler.addEventListener(node, \"onmouseover\", function(){\n *       // mouseover handler function code\n *   });\n *   EventHandler.removeEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   eventObj.clearEvents();\n * </script>\n * ```\n */\n\nclass EventHandler {\n  // to get the event data based on element\n  static addOrGetEventData(element) {\n    if ('__eventList' in element) {\n      return element.__eventList.events;\n    } else {\n      element.__eventList = {};\n      return element.__eventList.events = [];\n    }\n  }\n  /**\n   * Add an event to the specified DOM element.\n   *\n   * @param {any} element - Target HTML DOM element\n   * @param {string} eventName - A string that specifies the name of the event\n   * @param {Function} listener - Specifies the function to run when the event occurs\n   * @param {Object} bindTo - A object that binds 'this' variable in the event handler\n   * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.\n   * @returns {Function} ?\n   */\n\n\n  static add(element, eventName, listener, bindTo, intDebounce) {\n    const eventData = EventHandler.addOrGetEventData(element);\n    let debounceListener;\n\n    if (intDebounce) {\n      debounceListener = debounce(listener, intDebounce);\n    } else {\n      debounceListener = listener;\n    }\n\n    if (bindTo) {\n      debounceListener = debounceListener.bind(bindTo);\n    }\n\n    const event = eventName.split(' ');\n\n    for (let i = 0; i < event.length; i++) {\n      eventData.push({\n        name: event[i],\n        listener: listener,\n        debounce: debounceListener\n      });\n\n      if (Browser.isIE) {\n        element.addEventListener(event[i], debounceListener);\n      } else {\n        element.addEventListener(event[i], debounceListener, {\n          passive: false\n        });\n      }\n    }\n\n    return debounceListener;\n  }\n  /**\n   * Remove an event listener that has been attached before.\n   *\n   * @param {any} element - Specifies the target html element to remove the event\n   * @param {string} eventName - A string that specifies the name of the event to remove\n   * @param {Function} listener - Specifies the function to remove\n   * @returns {void} ?\n   */\n\n\n  static remove(element, eventName, listener) {\n    const eventData = EventHandler.addOrGetEventData(element);\n    const event = eventName.split(' ');\n\n    for (let j = 0; j < event.length; j++) {\n      let index = -1;\n      let debounceListener;\n\n      if (eventData && eventData.length !== 0) {\n        eventData.some((x, i) => {\n          return x.name === event[j] && x.listener === listener ? (index = i, debounceListener = x.debounce, true) : false;\n        });\n      }\n\n      if (index !== -1) {\n        eventData.splice(index, 1);\n      }\n\n      if (debounceListener) {\n        element.removeEventListener(event[j], debounceListener);\n      }\n    }\n  }\n  /**\n   * Clear all the event listeners that has been previously attached to the element.\n   *\n   * @param {any} element - Specifies the target html element to clear the events\n   * @returns {void} ?\n   */\n\n\n  static clearEvents(element) {\n    let eventData;\n    let copyData; // eslint-disable-next-line\n\n    eventData = EventHandler.addOrGetEventData(element); // eslint-disable-next-line\n\n    copyData = extend([], copyData, eventData);\n\n    for (let i = 0; i < copyData.length; i++) {\n      element.removeEventListener(copyData[i].name, copyData[i].debounce);\n      eventData.shift();\n    }\n  }\n  /**\n   * Trigger particular event of the element.\n   *\n   * @param {any} element - Specifies the target html element to trigger the events\n   * @param {string} eventName - Specifies the event to trigger for the specified element.\n   * Can be a custom event, or any of the standard events.\n   * @param {any} eventProp - Additional parameters to pass on to the event properties\n   * @returns {void} ?\n   */\n\n\n  static trigger(element, eventName, eventProp) {\n    const eventData = EventHandler.addOrGetEventData(element);\n\n    for (const event of eventData) {\n      if (event.name === eventName) {\n        event.debounce.call(this, eventProp);\n      }\n    }\n  }\n\n}\n/**\n * Functions related to dom operations.\n */\n\n\nconst SVG_REG = /^svg|^path|^g/;\n/**\n * Function to create Html element.\n *\n * @param {string} tagName - Name of the tag, id and class names.\n * @param {ElementProperties} properties - Object to set properties in the element.\n * @param {ElementProperties} properties.id - To set the id to the created element.\n * @param {ElementProperties} properties.className - To add classes to the element.\n * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.\n * @param {ElementProperties} properties.styles - To set the some custom styles to element.\n * @param {ElementProperties} properties.attrs - To set the attributes to element.\n * @returns {any} ?\n * @private\n */\n\nfunction createElement(tagName, properties) {\n  const element = SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName);\n\n  if (typeof properties === 'undefined') {\n    return element;\n  }\n\n  element.innerHTML = properties.innerHTML ? properties.innerHTML : '';\n\n  if (properties.className !== undefined) {\n    element.className = properties.className;\n  }\n\n  if (properties.id !== undefined) {\n    element.id = properties.id;\n  }\n\n  if (properties.styles !== undefined) {\n    element.setAttribute('style', properties.styles);\n  }\n\n  if (properties.attrs !== undefined) {\n    attributes(element, properties.attrs);\n  }\n\n  return element;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\n\n\nfunction addClass(elements, classes) {\n  const classList = getClassList(classes);\n\n  for (const ele of elements) {\n    for (const className of classList) {\n      if (isObject(ele)) {\n        const curClass = getValue('attributes.className', ele);\n\n        if (isNullOrUndefined(curClass)) {\n          setValue('attributes.className', className, ele);\n        } else if (!new RegExp('\\\\b' + className + '\\\\b', 'i').test(curClass)) {\n          setValue('attributes.className', curClass + ' ' + className, ele);\n        }\n      } else {\n        if (!ele.classList.contains(className)) {\n          ele.classList.add(className);\n        }\n      }\n    }\n  }\n\n  return elements;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\n\n\nfunction removeClass(elements, classes) {\n  const classList = getClassList(classes);\n\n  for (const ele of elements) {\n    const flag = isObject(ele);\n    const canRemove = flag ? getValue('attributes.className', ele) : ele.className !== '';\n\n    if (canRemove) {\n      for (const className of classList) {\n        if (flag) {\n          const classes = getValue('attributes.className', ele);\n          const classArr = classes.split(' ');\n          const index = classArr.indexOf(className);\n\n          if (index !== -1) {\n            classArr.splice(index, 1);\n          }\n\n          setValue('attributes.className', classArr.join(' '), ele);\n        } else {\n          ele.classList.remove(className);\n        }\n      }\n    }\n  }\n\n  return elements;\n}\n/**\n * The function used to get classlist.\n *\n * @param  {string | string[]} classes - An element the need to check visibility\n * @returns {string[]} ?\n * @private\n */\n\n\nfunction getClassList(classes) {\n  let classList = [];\n\n  if (typeof classes === 'string') {\n    classList.push(classes);\n  } else {\n    classList = classes;\n  }\n\n  return classList;\n}\n/**\n * The function used to check element is visible or not.\n *\n * @param  {Element|Node} element - An element the need to check visibility\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isVisible(element) {\n  const ele = element;\n  return ele.style.visibility === '' && ele.offsetWidth > 0;\n}\n/**\n * The function used to insert an array of elements into a first of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\n\n\nfunction prepend(fromElements, toElement, isEval) {\n  const docFrag = document.createDocumentFragment();\n\n  for (const ele of fromElements) {\n    docFrag.appendChild(ele);\n  }\n\n  toElement.insertBefore(docFrag, toElement.firstElementChild);\n\n  if (isEval) {\n    executeScript(toElement);\n  }\n\n  return fromElements;\n}\n/**\n * The function used to insert an array of elements into last of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\n\n\nfunction append(fromElements, toElement, isEval) {\n  const docFrag = document.createDocumentFragment();\n\n  for (const ele of fromElements) {\n    docFrag.appendChild(ele);\n  }\n\n  toElement.appendChild(docFrag);\n\n  if (isEval) {\n    executeScript(toElement);\n  }\n\n  return fromElements;\n}\n/**\n * The function is used to evaluate script from Ajax request\n *\n * @param {Element} ele - An element is going to evaluate the script\n * @returns {void} ?\n */\n\n\nfunction executeScript(ele) {\n  const eleArray = ele.querySelectorAll('script');\n  eleArray.forEach(element => {\n    const script = document.createElement('script');\n    script.text = element.innerHTML;\n    document.head.appendChild(script);\n    detach(script);\n  });\n}\n/**\n * The function used to remove the element from parentnode\n *\n * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction detach(element) {\n  const parentNode = element.parentNode;\n\n  if (parentNode) {\n    return parentNode.removeChild(element);\n  }\n}\n/**\n * The function used to remove the element from Dom also clear the bounded events\n *\n * @param  {Element|Node|HTMLElement} element - An element remove from the Dom\n * @returns {void} ?\n * @private\n */\n\n\nfunction remove(element) {\n  const parentNode = element.parentNode;\n  EventHandler.clearEvents(element);\n  parentNode.removeChild(element);\n}\n/**\n * The function helps to set multiple attributes to an element\n *\n * @param  {Element|Node} element - An element that need to set attributes.\n * @param  {string} attributes - JSON Object that is going to as attributes.\n * @returns {Element} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction attributes(element, attributes) {\n  const keys = Object.keys(attributes);\n  const ele = element;\n\n  for (const key of keys) {\n    if (isObject(ele)) {\n      let iKey = key;\n\n      if (key === 'tabindex') {\n        iKey = 'tabIndex';\n      }\n\n      ele.attributes[iKey] = attributes[key];\n    } else {\n      ele.setAttribute(key, attributes[key]);\n    }\n  }\n\n  return ele;\n}\n/**\n * The function selects the element from giving context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction select(selector, context = document, needsVDOM) {\n  selector = querySelectId(selector);\n  return context.querySelector(selector);\n}\n/**\n * The function selects an array of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {HTMLElement[]} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction selectAll(selector, context = document, needsVDOM) {\n  selector = querySelectId(selector);\n  const nodeList = context.querySelectorAll(selector);\n  return nodeList;\n}\n/**\n * The function selects an id of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @returns {string} ?\n * @private\n */\n\n\nfunction querySelectId(selector) {\n  const charRegex = /(!|\"|\\$|%|&|'|\\(|\\)|\\*|\\/|:|;|<|=|\\?|@|\\]|\\^|`|{|}|\\||\\+|~)/g;\n\n  if (selector.match(/#[0-9]/g) || selector.match(charRegex)) {\n    const idList = selector.split(',');\n\n    for (let i = 0; i < idList.length; i++) {\n      const list = idList[i].split(' ');\n\n      for (let j = 0; j < list.length; j++) {\n        if (list[j].indexOf('#') > -1) {\n          if (!list[j].match(/\\[.*\\]/)) {\n            const splitId = list[j].split('#');\n\n            if (splitId[1].match(/^\\d/) || splitId[1].match(charRegex)) {\n              const setId = list[j].split('.');\n              setId[0] = setId[0].replace(/#/, '[id=\\'') + '\\']';\n              list[j] = setId.join('.');\n            }\n          }\n        }\n      }\n\n      idList[i] = list.join(' ');\n    }\n\n    return idList.join(',');\n  }\n\n  return selector;\n}\n/**\n * Returns single closest parent element based on class selector.\n *\n * @param  {Element} element - An element that need to find the closest element.\n * @param  {string} selector - A classSelector of closest element.\n * @returns {Element} ?\n * @private\n */\n\n\nfunction closest(element, selector) {\n  let el = element;\n\n  if (typeof el.closest === 'function') {\n    return el.closest(selector);\n  }\n\n  while (el && el.nodeType === 1) {\n    if (matches(el, selector)) {\n      return el;\n    }\n\n    el = el.parentNode;\n  }\n\n  return null;\n}\n/**\n * Returns all sibling elements of the given element.\n *\n * @param  {Element|Node} element - An element that need to get siblings.\n * @returns {Element[]} ?\n * @private\n */\n\n\nfunction siblings(element) {\n  const siblings = [];\n  const childNodes = Array.prototype.slice.call(element.parentNode.childNodes);\n\n  for (const curNode of childNodes) {\n    if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {\n      siblings.push(curNode);\n    }\n  }\n\n  return siblings;\n}\n/**\n * set the value if not exist. Otherwise set the existing value\n *\n * @param  {HTMLElement} element - An element to which we need to set value.\n * @param  {string} property - Property need to get or set.\n * @param  {string} value - value need to set.\n * @returns {string} ?\n * @private\n */\n\n\nfunction getAttributeOrDefault(element, property, value) {\n  let attrVal;\n  const isObj = isObject(element);\n\n  if (isObj) {\n    attrVal = getValue('attributes.' + property, element);\n  } else {\n    attrVal = element.getAttribute(property);\n  }\n\n  if (isNullOrUndefined(attrVal) && value) {\n    if (!isObj) {\n      element.setAttribute(property, value.toString());\n    } else {\n      element.attributes[property] = value;\n    }\n\n    attrVal = value;\n  }\n\n  return attrVal;\n}\n/**\n * Set the style attributes to Html element.\n *\n * @param {HTMLElement} element - Element which we want to set attributes\n * @param {any} attrs - Set the given attributes to element\n * @returns {void} ?\n * @private\n */\n\n\nfunction setStyleAttribute(element, attrs) {\n  if (attrs !== undefined) {\n    Object.keys(attrs).forEach(key => {\n      // eslint-disable-next-line\n      element.style[key] = attrs[key];\n    });\n  }\n}\n/**\n * Method for add and remove classes to a dom element.\n *\n * @param {Element} element - Element for add and remove classes\n * @param {string[]} addClasses - List of classes need to be add to the element\n * @param {string[]} removeClasses - List of classes need to be remove from the element\n * @returns {void} ?\n * @private\n */\n\n\nfunction classList(element, addClasses, removeClasses) {\n  addClass([element], addClasses);\n  removeClass([element], removeClasses);\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Element} element - Element to compare with the selector.\n * @param {string} selector - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\n\n\nfunction matches(element, selector) {\n  // eslint-disable-next-line\n  let matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n\n  if (matches) {\n    return matches.call(element, selector);\n  } else {\n    return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;\n  }\n}\n/**\n * Method to get the html text from DOM.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} innerHTML - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\n\n\nfunction includeInnerHTML(ele, innerHTML) {\n  ele.innerHTML = innerHTML;\n}\n/**\n * Method to get the containsclass.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} className - String selector which element will satisfy.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction containsClass(ele, className) {\n  if (isObject(ele)) {\n    // eslint-disable-next-line\n    return new RegExp('\\\\b' + className + '\\\\b', 'i').test(ele.attributes.className);\n  } else {\n    return ele.classList.contains(className);\n  }\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Object} element - Element to compare with the selector.\n * @param {boolean} deep ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction cloneNode(element, deep) {\n  if (isObject(element)) {\n    if (deep) {\n      return extend({}, {}, element, true);\n    }\n  } else {\n    return element.cloneNode(deep);\n  }\n}\n\nconst isColEName = new RegExp(']');\n/* tslint:enable:no-any */\n\n/**\n * Base library module is common module for Framework modules like touch,keyboard and etc.,\n *\n * @private\n */\n\nclass Base {\n  /**\n   * Base constructor accept options and element\n   *\n   * @param {Object} options ?\n   * @param {string} element ?\n   */\n  constructor(options, element) {\n    this.isRendered = false;\n    this.isComplexArraySetter = false;\n    this.isServerRendered = false;\n    this.allowServerDataBinding = true;\n    this.isProtectedOnChange = true;\n    this.properties = {};\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.bulkChanges = {};\n    this.refreshing = false;\n    this.ignoreCollectionWatch = false; // eslint-disable-next-line\n\n    this.finalUpdate = () => {};\n\n    this.childChangedProperties = {};\n    this.modelObserver = new Observer(this);\n\n    if (!isUndefined(element)) {\n      if ('string' === typeof element) {\n        this.element = document.querySelector(element);\n      } else {\n        this.element = element;\n      }\n\n      if (!isNullOrUndefined(this.element)) {\n        this.isProtectedOnChange = false;\n        this.addInstance();\n      }\n    }\n\n    if (!isUndefined(options)) {\n      this.setProperties(options, true);\n    }\n\n    this.isDestroyed = false;\n  }\n  /** Property base section */\n\n  /**\n   * Function used to set bunch of property at a time.\n   *\n   * @private\n   * @param  {Object} prop - JSON object which holds components properties.\n   * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.\n   * @returns {void} ?\n   */\n\n\n  setProperties(prop, muteOnChange) {\n    const prevDetection = this.isProtectedOnChange;\n    this.isProtectedOnChange = !!muteOnChange;\n    merge(this, prop);\n\n    if (muteOnChange !== true) {\n      merge(this.changedProperties, prop);\n      this.dataBind();\n    } else if (isBlazor() && this.isRendered) {\n      this.serverDataBind(prop);\n    }\n\n    this.finalUpdate();\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.isProtectedOnChange = prevDetection;\n  }\n  /**\n   * Calls for child element data bind\n   *\n   * @param {Object} obj ?\n   * @param {Object} parent ?\n   * @returns {void} ?\n   */\n  // tslint:disable-next-line:no-any\n\n\n  static callChildDataBind(obj, parent) {\n    const keys = Object.keys(obj);\n\n    for (const key of keys) {\n      if (parent[key] instanceof Array) {\n        for (const obj of parent[key]) {\n          if (obj.dataBind !== undefined) {\n            obj.dataBind();\n          }\n        }\n      } else {\n        parent[key].dataBind();\n      }\n    }\n  }\n\n  clearChanges() {\n    this.finalUpdate();\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.childChangedProperties = {};\n  }\n  /**\n   * Bind property changes immediately to components\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    Base.callChildDataBind(this.childChangedProperties, this);\n\n    if (Object.getOwnPropertyNames(this.changedProperties).length) {\n      const prevDetection = this.isProtectedOnChange;\n      const newChanges = this.changedProperties;\n      const oldChanges = this.oldProperties;\n      this.clearChanges();\n      this.isProtectedOnChange = true;\n      this.onPropertyChanged(newChanges, oldChanges);\n      this.isProtectedOnChange = prevDetection;\n    }\n  }\n  /* tslint:disable:no-any */\n\n\n  serverDataBind(newChanges) {\n    if (!isBlazor()) {\n      return;\n    }\n\n    newChanges = newChanges ? newChanges : {};\n    extend(this.bulkChanges, {}, newChanges, true);\n    const sfBlazor = 'sfBlazor';\n\n    if (this.allowServerDataBinding && window[sfBlazor].updateModel) {\n      window[sfBlazor].updateModel(this);\n      this.bulkChanges = {};\n    }\n  }\n  /* tslint:enable:no-any */\n\n\n  saveChanges(key, newValue, oldValue) {\n    if (isBlazor()) {\n      // tslint:disable-next-line:no-any\n      const newChanges = {};\n      newChanges[key] = newValue;\n      this.serverDataBind(newChanges);\n    }\n\n    if (this.isProtectedOnChange) {\n      return;\n    }\n\n    this.oldProperties[key] = oldValue;\n    this.changedProperties[key] = newValue;\n    this.finalUpdate();\n    this.finalUpdate = setImmediate(this.dataBind.bind(this));\n  }\n  /** Event Base Section */\n\n  /**\n   * Adds the handler to the given event listener.\n   *\n   * @param {string} eventName - A String that specifies the name of the event\n   * @param {Function} handler - Specifies the call to run when the event occurs.\n   * @returns {void} ?\n   */\n\n\n  addEventListener(eventName, handler) {\n    this.modelObserver.on(eventName, handler);\n  }\n  /**\n   * Removes the handler from the given event listener.\n   *\n   * @param {string} eventName - A String that specifies the name of the event to remove\n   * @param {Function} handler - Specifies the function to remove\n   * @returns {void} ?\n   */\n\n\n  removeEventListener(eventName, handler) {\n    this.modelObserver.off(eventName, handler);\n  }\n  /**\n   * Triggers the handlers in the specified event.\n   *\n   * @private\n   * @param {string} eventName - Specifies the event to trigger for the specified component properties.\n   * Can be a custom event, or any of the standard events.\n   * @param {Event} eventProp - Additional parameters to pass on to the event properties\n   * @param {Function} successHandler - this function will invoke after event successfully triggered\n   * @param {Function} errorHandler - this function will invoke after event if it failured to call.\n   * @returns {void} ?\n   */\n\n\n  trigger(eventName, eventProp, successHandler, errorHandler) {\n    if (this.isDestroyed !== true) {\n      const prevDetection = this.isProtectedOnChange;\n      this.isProtectedOnChange = false;\n      let data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);\n\n      if (isColEName.test(eventName)) {\n        const handler = getValue(eventName, this);\n\n        if (handler) {\n          const blazor = 'Blazor';\n\n          if (window[blazor]) {\n            const promise = handler.call(this, eventProp);\n\n            if (promise && typeof promise.then === 'function') {\n              if (!successHandler) {\n                data = promise;\n              } else {\n                promise.then(data => {\n                  if (successHandler) {\n                    data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                    successHandler.call(this, data);\n                  }\n                }).catch(data => {\n                  if (errorHandler) {\n                    data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                    errorHandler.call(this, data);\n                  }\n                });\n              }\n            } else if (successHandler) {\n              successHandler.call(this, eventProp);\n            }\n          } else {\n            handler.call(this, eventProp);\n\n            if (successHandler) {\n              successHandler.call(this, eventProp);\n            }\n          }\n        } else if (successHandler) {\n          successHandler.call(this, eventProp);\n        }\n      }\n\n      this.isProtectedOnChange = prevDetection;\n      return data;\n    }\n  }\n  /**\n   * To maintain instance in base class\n   *\n   * @returns {void} ?\n   */\n\n\n  addInstance() {\n    // Add module class to the root element\n    const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n    addClass([this.element], ['e-lib', moduleClass]);\n\n    if (!isNullOrUndefined(this.element.ej2_instances)) {\n      this.element.ej2_instances.push(this);\n    } else {\n      setValue('ej2_instances', [this], this.element);\n    }\n  }\n  /**\n   * To remove the instance from the element\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    // eslint-disable-next-line\n    this.element.ej2_instances = this.element.ej2_instances.filter(i => {\n      return i !== this;\n    });\n    removeClass([this.element], ['e-' + this.getModuleName()]);\n\n    if (this.element.ej2_instances.length === 0) {\n      // Remove module class from the root element\n      removeClass([this.element], ['e-lib']);\n    }\n\n    this.clearChanges();\n    this.modelObserver.destroy();\n    this.isDestroyed = true;\n  }\n\n}\n/**\n * Global function to get the component instance from the rendered element.\n *\n * @param {HTMLElement} elem Specifies the HTMLElement or element id string.\n * @param {string} comp Specifies the component module name or Component.\n * @returns {any} ?\n */\n// tslint:disable-next-line:no-any\n\n\nfunction getComponent(elem, comp) {\n  let instance;\n  let i;\n  const ele = typeof elem === 'string' ? document.getElementById(elem) : elem;\n\n  for (i = 0; i < ele.ej2_instances.length; i++) {\n    instance = ele.ej2_instances[i];\n\n    if (typeof comp === 'string') {\n      const compName = instance.getModuleName();\n\n      if (comp === compName) {\n        return instance;\n      }\n    } else {\n      // tslint:disable-next-line:no-any\n      if (instance instanceof comp) {\n        return instance;\n      }\n    }\n  }\n\n  return undefined;\n}\n/**\n * Function to remove the child instances.\n *\n * @param {HTMLElement} element ?\n * @return {void}\n * @private\n */\n// tslint:disable-next-line:no-any\n\n\nfunction removeChildInstance(element) {\n  // tslint:disable-next-line:no-any\n  const childEle = [].slice.call(element.getElementsByClassName('e-control'));\n\n  for (let i = 0; i < childEle.length; i++) {\n    const compName = childEle[i].classList[1].split('e-')[1]; // tslint:disable-next-line:no-any\n\n    const compInstance = getComponent(childEle[i], compName);\n\n    if (!isUndefined(compInstance)) {\n      compInstance.destroy();\n    }\n  }\n}\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n\n  return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  const result = [];\n  const len = defaultValue ? defaultValue.length : 0;\n\n  for (let i = 0; i < len; i++) {\n    let curType = type;\n\n    if (isFactory) {\n      curType = type(defaultValue[i], instance);\n    }\n\n    if (isSetter) {\n      const inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[i], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n    }\n  }\n\n  return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[curKey] = defaultValue;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[curKey] !== newValue) {\n      // eslint-disable-next-line\n      let oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[curKey] = newValue;\n    }\n  };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    const curType = type({}); // eslint-disable-next-line\n\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    const curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      const defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    const ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch; // eslint-disable-next-line\n\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(extendFunc => {\n        const descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, this.properties[curKey]).bind(this),\n          configurable: true\n        };\n        Object.defineProperty(this.properties[curKey], extendFunc, descriptor);\n      });\n    } // eslint-disable-next-line\n\n\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    const oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    const newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    const oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    const newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    const curType = type({}); // eslint-disable-next-line\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      const defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\n\n\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function (...newValue) {\n    const keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n\n    switch (dFunc) {\n      case 'push':\n        for (let i = 0; i < newValue.length; i++) {\n          Array.prototype[dFunc].apply(prop, [newValue[i]]);\n          const model = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n          this.serverDataBind(model, newValue[i], false, dFunc);\n        }\n\n        break;\n\n      case 'pop':\n        Array.prototype[dFunc].apply(prop); // eslint-disable-next-line\n\n        let model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n\n    return prop;\n  };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\n\n\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  let modelObject = keyString;\n\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[keyString] = value;\n\n    if (value && typeof value === 'object') {\n      const action = 'ejsAction';\n      modelObject[keyString][action] = arrayFunction;\n    }\n  }\n\n  return modelObject;\n} // eslint-disable-next-line\n\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Property(defaultValue) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Complex(defaultValue, type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\n\n\nfunction ComplexFactory(type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Collection(defaultValue, type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction CollectionFactory(type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\n\n\nfunction Event$1() {\n  return (target, key) => {\n    const eventDescriptor = {\n      set: function (newValue) {\n        const oldValue = this.properties[key];\n\n        if (oldValue !== newValue) {\n          const finalContext = getParentContext(this, key);\n\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  } // eslint-disable-next-line\n\n\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  }); // eslint-disable-next-line\n\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    const rex = /complex/;\n\n    for (const key of Object.keys(component.prototype.propList)) {\n      for (const prop of component.prototype.propList[key]) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            const childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            let tempValue;\n\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      }\n    }\n  }\n\n  return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\n\n\nfunction CreateBuilder(component) {\n  const builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n\n  const instanceFunction = element => {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n\n      builderFunction.prototype.create = function () {\n        const temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n\n    return new builderFunction(element);\n  };\n\n  return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\n\n\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    const curText = getValue('propName', context);\n\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Animation_1;\n/**\n * The Animation framework provide options to animate the html DOM elements\n * ```typescript\n *   let animeObject = new Animation({\n *      name: 'SlideLeftIn',\n *      duration: 1000\n *   });\n *   animeObject.animate('#anime1');\n *   animeObject.animate('#anime2', { duration: 500 });\n * ```\n */\n\nlet Animation = Animation_1 = class Animation extends Base {\n  constructor(options) {\n    super(options, undefined);\n    /**\n     * @private\n     */\n\n    this.easing = {\n      ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',\n      linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',\n      easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',\n      easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',\n      easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',\n      elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',\n      elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',\n      elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'\n    };\n  }\n  /**\n   * Applies animation to the current element.\n   *\n   * @param {string | HTMLElement} element - Element which needs to be animated.\n   * @param {AnimationModel} options - Overriding default animation settings.\n   * @returns {void} ?\n   */\n\n\n  animate(element, options) {\n    options = !options ? {} : options;\n    const model = this.getModel(options);\n\n    if (typeof element === 'string') {\n      const elements = Array.prototype.slice.call(selectAll(element, document));\n\n      for (const element of elements) {\n        model.element = element;\n        Animation_1.delayAnimation(model);\n      }\n    } else {\n      model.element = element;\n      Animation_1.delayAnimation(model);\n    }\n  }\n  /**\n   * Stop the animation effect on animated element.\n   *\n   * @param {HTMLElement} element - Element which needs to be stop the animation.\n   * @param {AnimationOptions} model - Handling the animation model at stop function.\n   * @return {void}\n   */\n\n\n  static stop(element, model) {\n    element.style.animation = '';\n    element.removeAttribute('e-animate');\n    const animationId = element.getAttribute('e-animation-id');\n\n    if (animationId) {\n      const frameId = parseInt(animationId, 10);\n      cancelAnimationFrame(frameId);\n      element.removeAttribute('e-animation-id');\n    }\n\n    if (model && model.end) {\n      model.end.call(this, model);\n    }\n  }\n  /**\n   * Set delay to animation element\n   *\n   * @param {AnimationModel} model ?\n   * @returns {void}\n   */\n\n\n  static delayAnimation(model) {\n    if (model.delay) {\n      setTimeout(() => {\n        Animation_1.applyAnimation(model);\n      }, model.delay);\n    } else {\n      Animation_1.applyAnimation(model);\n    }\n  }\n  /**\n   * Triggers animation\n   *\n   * @param {AnimationModel} model ?\n   * @returns {void}\n   */\n\n\n  static applyAnimation(model) {\n    model.timeStamp = 0;\n    let step = 0;\n    let timerId = 0;\n    let prevTimeStamp = 0;\n    const duration = model.duration;\n    model.element.setAttribute('e-animate', 'true');\n\n    const startAnimation = timeStamp => {\n      try {\n        if (timeStamp) {\n          // let step: number = model.timeStamp = timeStamp - startTime;\n\n          /** phantomjs workaround for timestamp fix */\n          prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;\n          model.timeStamp = timeStamp + model.timeStamp - prevTimeStamp;\n          prevTimeStamp = timeStamp;\n          /** phantomjs workaround end */\n          // trigger animation begin event\n\n          if (!step && model.begin) {\n            model.begin.call(this, model);\n          }\n\n          step = step + 1;\n          const avg = model.timeStamp / step;\n\n          if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {\n            // apply animation effect to the current element\n            model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;\n\n            if (model.progress) {\n              model.progress.call(this, model);\n            } // repeat requestAnimationFrame\n\n\n            requestAnimationFrame(startAnimation);\n          } else {\n            // clear requestAnimationFrame\n            cancelAnimationFrame(timerId);\n            model.element.removeAttribute('e-animation-id');\n            model.element.removeAttribute('e-animate');\n            model.element.style.animation = '';\n\n            if (model.end) {\n              model.end.call(this, model);\n            }\n          }\n        } else {\n          //startTime = performance.now();\n          // set initial requestAnimationFrame\n          timerId = requestAnimationFrame(startAnimation);\n          model.element.setAttribute('e-animation-id', timerId.toString());\n        }\n      } catch (e) {\n        cancelAnimationFrame(timerId);\n        model.element.removeAttribute('e-animation-id');\n\n        if (model.fail) {\n          model.fail.call(this, e);\n        }\n      }\n    };\n\n    startAnimation();\n  }\n  /**\n   * Returns Animation Model\n   *\n   * @param {AnimationModel} options ?\n   * @returns {AnimationModel} ?\n   */\n\n\n  getModel(options) {\n    return {\n      name: options.name || this.name,\n      delay: options.delay || this.delay,\n      duration: options.duration !== undefined ? options.duration : this.duration,\n      begin: options.begin || this.begin,\n      end: options.end || this.end,\n      fail: options.fail || this.fail,\n      progress: options.progress || this.progress,\n      timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] : options.timingFunction || this.easing[this.timingFunction]\n    };\n  }\n  /**\n   * @private\n   * @param {AnimationModel} newProp ?\n   * @param {AnimationModel} oldProp ?\n   * @returns {void} ?\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {// no code needed\n  }\n  /**\n   * Returns module name as animation\n   *\n   * @private\n   * @returns {void} ?\n   */\n\n\n  getModuleName() {\n    return 'animation';\n  }\n  /**\n   *\n   * @private\n   * @returns {void} ?\n   */\n\n\n  destroy() {//Override base destroy;\n  }\n\n};\n\n__decorate([Property('FadeIn')], Animation.prototype, \"name\", void 0);\n\n__decorate([Property(400)], Animation.prototype, \"duration\", void 0);\n\n__decorate([Property('ease')], Animation.prototype, \"timingFunction\", void 0);\n\n__decorate([Property(0)], Animation.prototype, \"delay\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"progress\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"begin\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"end\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"fail\", void 0);\n\nAnimation = Animation_1 = __decorate([NotifyPropertyChanges], Animation);\n/**\n * Ripple provides material theme's wave effect when an element is clicked\n * ```html\n * <div id='ripple'></div>\n * <script>\n *   rippleEffect(document.getElementById('ripple'));\n * </script>\n * ```\n *\n * @private\n * @param {HTMLElement} element - Target element\n * @param {RippleOptions} rippleOptions - Ripple options .\n * @param {Function} done .\n * @returns {void} .\n */\n\nfunction rippleEffect(element, rippleOptions, done) {\n  const rippleModel = getRippleModel(rippleOptions);\n\n  if (rippleModel.rippleFlag === false || rippleModel.rippleFlag === undefined && !isRippleEnabled) {\n    return () => {};\n  }\n\n  element.setAttribute('data-ripple', 'true');\n  EventHandler.add(element, 'mousedown', rippleHandler, {\n    parent: element,\n    rippleOptions: rippleModel\n  });\n  EventHandler.add(element, 'mouseup', rippleUpHandler, {\n    parent: element,\n    rippleOptions: rippleModel,\n    done: done\n  });\n  EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {\n    parent: element,\n    rippleOptions: rippleModel\n  });\n\n  if (Browser.isPointer) {\n    EventHandler.add(element, 'transitionend', rippleLeaveHandler, {\n      parent: element,\n      rippleOptions: rippleModel\n    });\n  }\n\n  return () => {\n    element.removeAttribute('data-ripple');\n    EventHandler.remove(element, 'mousedown', rippleHandler);\n    EventHandler.remove(element, 'mouseup', rippleUpHandler);\n    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n    EventHandler.remove(element, 'transitionend', rippleLeaveHandler);\n  };\n}\n/**\n * Handler for ripple model\n *\n * @param {RippleOptions} rippleOptions ?\n * @returns {RippleOptions} ?\n */\n\n\nfunction getRippleModel(rippleOptions) {\n  const rippleModel = {\n    selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,\n    ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,\n    rippleFlag: rippleOptions && rippleOptions.rippleFlag,\n    isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,\n    duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350\n  };\n  return rippleModel;\n}\n/**\n * Handler for ripple event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleHandler(e) {\n  const target = e.target;\n  const selector = this.rippleOptions.selector;\n  const element = selector ? closest(target, selector) : target;\n\n  if (!element || this.rippleOptions && closest(target, this.rippleOptions.ignore)) {\n    return;\n  }\n\n  const offset = element.getBoundingClientRect();\n  const offsetX = e.pageX - document.body.scrollLeft;\n  const offsetY = e.pageY - (!document.body.scrollTop && document.documentElement ? document.documentElement.scrollTop : document.body.scrollTop);\n  const pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));\n  const pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));\n  const radius = Math.sqrt(pageX * pageX + pageY * pageY);\n  let diameter = radius * 2 + 'px';\n  let x = offsetX - offset.left - radius;\n  let y = offsetY - offset.top - radius;\n\n  if (this.rippleOptions && this.rippleOptions.isCenterRipple) {\n    x = 0;\n    y = 0;\n    diameter = '100%';\n  }\n\n  element.classList.add('e-ripple');\n  const duration = this.rippleOptions.duration.toString();\n  const styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' + 'transition-duration: ' + duration + 'ms;';\n  const rippleElement = createElement('div', {\n    className: 'e-ripple-element',\n    styles: styles\n  });\n  element.appendChild(rippleElement);\n  window.getComputedStyle(rippleElement).getPropertyValue('opacity');\n  rippleElement.style.transform = 'scale(1)';\n\n  if (element !== this.parent) {\n    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {\n      parent: this.parent,\n      rippleOptions: this.rippleOptions\n    });\n  }\n}\n/**\n * Handler for ripple element mouse up event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleUpHandler(e) {\n  removeRipple(e, this);\n}\n/**\n * Handler for ripple element mouse move event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleLeaveHandler(e) {\n  removeRipple(e, this);\n}\n/**\n * Handler for removing ripple element\n *\n * @param {MouseEvent} e ?\n * @param {RippleArgs} eventArgs ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction removeRipple(e, eventArgs) {\n  const duration = eventArgs.rippleOptions.duration;\n  const target = e.target;\n  const selector = eventArgs.rippleOptions.selector;\n  const element = selector ? closest(target, selector) : target;\n\n  if (!element || element && element.className.indexOf('e-ripple') === -1) {\n    return;\n  }\n\n  const rippleElements = selectAll('.e-ripple-element', element);\n  const rippleElement = rippleElements[rippleElements.length - 1];\n\n  if (rippleElement) {\n    rippleElement.style.opacity = '0.5';\n  }\n\n  if (eventArgs.parent !== element) {\n    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n  }\n  /* tslint:disable:align */\n\n\n  setTimeout(() => {\n    if (rippleElement && rippleElement.parentNode) {\n      rippleElement.parentNode.removeChild(rippleElement);\n    }\n\n    if (!element.getElementsByClassName('e-ripple-element').length) {\n      element.classList.remove('e-ripple');\n    }\n\n    if (eventArgs.done) {\n      eventArgs.done(e);\n    }\n  }, duration);\n}\n\nlet isRippleEnabled = false;\n/**\n * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.\n *\n * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.\n * @returns {boolean} ?\n */\n\nfunction enableRipple(isRipple) {\n  isRippleEnabled = isRipple;\n  return isRippleEnabled;\n}\n/**\n * Module loading operations\n */\n\n\nconst MODULE_SUFFIX = 'Module';\n\nclass ModuleLoader {\n  constructor(parent) {\n    this.loadedModules = [];\n    this.parent = parent;\n  }\n  /**\n   * Inject required modules in component library\n   *\n   * @returns {void} ?\n   * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n   * @param {Function[]} moduleList - Array of modules to be injected from sample side\n   */\n\n\n  inject(requiredModules, moduleList) {\n    const reqLength = requiredModules.length;\n\n    if (reqLength === 0) {\n      this.clean();\n      return;\n    }\n\n    if (this.loadedModules.length) {\n      this.clearUnusedModule(requiredModules);\n    }\n\n    for (let i = 0; i < reqLength; i++) {\n      const modl = requiredModules[i];\n\n      for (const module of moduleList) {\n        const modName = modl.member;\n\n        if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n          const moduleObject = createInstance(module, modl.args);\n          const memberName = this.getMemberName(modName);\n\n          if (modl.isProperty) {\n            setValue(memberName, module, this.parent);\n          } else {\n            setValue(memberName, moduleObject, this.parent);\n          }\n\n          const loadedModule = modl;\n          loadedModule.member = memberName;\n          this.loadedModules.push(loadedModule);\n        }\n      }\n    }\n  }\n  /**\n   * To remove the created object while destroying the control\n   *\n   * @returns {void}\n   */\n\n\n  clean() {\n    for (const modules of this.loadedModules) {\n      if (!modules.isProperty) {\n        getValue(modules.member, this.parent).destroy();\n      }\n    }\n\n    this.loadedModules = [];\n  }\n  /**\n   * Removes all unused modules\n   *\n   * @param {ModuleDeclaration[]} moduleList ?\n   * @returns {void} ?\n   */\n\n\n  clearUnusedModule(moduleList) {\n    const usedModules = moduleList.map(arg => {\n      return this.getMemberName(arg.member);\n    });\n    const removableModule = this.loadedModules.filter(module => {\n      return usedModules.indexOf(module.member) === -1;\n    });\n\n    for (const mod of removableModule) {\n      if (!mod.isProperty) {\n        getValue(mod.member, this.parent).destroy();\n      }\n\n      this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n      deleteObject(this.parent, mod.member);\n    }\n  }\n  /**\n   * To get the name of the member.\n   *\n   * @param {string} name ?\n   * @returns {string} ?\n   */\n\n\n  getMemberName(name) {\n    return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n  }\n  /**\n   * Returns boolean based on whether the module specified is loaded or not\n   *\n   * @param {string} modName ?\n   * @returns {boolean} ?\n   */\n\n\n  isModuleLoaded(modName) {\n    for (const mod of this.loadedModules) {\n      if (mod.member === this.getMemberName(modName)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\n\n\nclass ChildProperty {\n  constructor(parent, propName, defaultValue, isArray) {\n    this.isComplexArraySetter = false;\n    this.properties = {};\n    this.changedProperties = {};\n    this.childChangedProperties = {};\n    this.oldProperties = {}; // eslint-disable-next-line\n\n    this.finalUpdate = () => {};\n\n    this.callChildDataBind = getValue('callChildDataBind', Base);\n    this.parentObj = parent;\n    this.controlParent = this.parentObj.controlParent || this.parentObj;\n    this.propName = propName;\n    this.isParentArray = isArray;\n    this.setProperties(defaultValue, true);\n  }\n  /**\n   * Updates the property changes\n   *\n   * @param {boolean} val ?\n   * @param {string} propName ?\n   * @returns {void} ?\n   */\n\n\n  updateChange(val, propName) {\n    if (val === true) {\n      this.parentObj.childChangedProperties[propName] = val;\n    } else {\n      delete this.parentObj.childChangedProperties[propName];\n    }\n\n    if (this.parentObj.updateChange) {\n      this.parentObj.updateChange(val, this.parentObj.propName);\n    }\n  }\n  /**\n   * Updates time out duration\n   *\n   * @returns {void} ?\n   */\n\n\n  updateTimeOut() {\n    if (this.parentObj.updateTimeOut) {\n      this.parentObj.finalUpdate();\n      this.parentObj.updateTimeOut();\n    } else {\n      const changeTime = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n\n      const clearUpdate = () => {\n        clearTimeout(changeTime);\n      };\n\n      this.finalUpdate = clearUpdate;\n    }\n  }\n  /**\n   * Clears changed properties\n   *\n   * @returns {void} ?\n   */\n\n\n  clearChanges() {\n    this.finalUpdate();\n    this.updateChange(false, this.propName);\n    this.oldProperties = {};\n    this.changedProperties = {};\n  }\n  /**\n   * Set property changes\n   *\n   * @param {Object} prop ?\n   * @param {boolean} muteOnChange ?\n   * @returns {void} ?\n   */\n\n\n  setProperties(prop, muteOnChange) {\n    if (muteOnChange === true) {\n      merge(this, prop);\n      this.updateChange(false, this.propName);\n      this.clearChanges();\n    } else {\n      merge(this, prop);\n    }\n  }\n  /**\n   * Binds data\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    this.callChildDataBind(this.childChangedProperties, this);\n\n    if (this.isParentArray) {\n      const curIndex = this.parentObj[this.propName].indexOf(this);\n\n      if (Object.keys(this.changedProperties).length) {\n        setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n        setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n      }\n    } else {\n      this.parentObj.changedProperties[this.propName] = this.changedProperties;\n      this.parentObj.oldProperties[this.propName] = this.oldProperties;\n    }\n\n    this.clearChanges();\n  }\n  /**\n   * Saves changes to newer values\n   *\n   * @param {string} key ?\n   * @param {Object} newValue ?\n   * @param {Object} oldValue ?\n   * @param {boolean} restrictServerDataBind ?\n   * @returns {void} ?\n   */\n\n\n  saveChanges(key, newValue, oldValue, restrictServerDataBind) {\n    if (this.controlParent.isProtectedOnChange) {\n      return;\n    }\n\n    if (!restrictServerDataBind) {\n      this.serverDataBind(key, newValue, true);\n    }\n\n    this.oldProperties[key] = oldValue;\n    this.changedProperties[key] = newValue;\n    this.updateChange(true, this.propName);\n    this.finalUpdate();\n    this.updateTimeOut();\n  }\n\n  serverDataBind(key, value, isSaveChanges, action) {\n    if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n      let parent;\n      const newChanges = {};\n      const parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n      /* istanbul ignore else  */\n\n      if (parentKey.indexOf('.') !== -1) {\n        const complexKeys = parentKey.split('.');\n        parent = newChanges;\n\n        for (let i = 0; i < complexKeys.length; i++) {\n          const isFinal = i === complexKeys.length - 1;\n          parent[complexKeys[i]] = isFinal ? value : {};\n          parent = isFinal ? parent : parent[complexKeys[i]];\n        }\n      } else {\n        newChanges[parentKey] = {};\n        parent = newChanges[parentKey];\n        newChanges[parentKey][key] = value;\n      }\n      /* istanbul ignore next */\n\n\n      if (this.isParentArray) {\n        const actionProperty = 'ejsAction';\n        parent[actionProperty] = action ? action : 'none';\n      }\n\n      this.controlParent.serverDataBind(newChanges);\n    }\n  }\n\n  getParentKey(isSaveChanges) {\n    // eslint-disable-next-line\n    let index = '';\n    let propName = this.propName;\n    /* istanbul ignore next */\n\n    if (this.isParentArray) {\n      index = this.parentObj[this.propName].indexOf(this);\n      let valueLength = this.parentObj[this.propName].length;\n      valueLength = isSaveChanges ? valueLength : valueLength > 0 ? valueLength - 1 : 0;\n      index = index !== -1 ? '-' + index : '-' + valueLength;\n      propName = propName + index;\n    }\n\n    if (this.controlParent !== this.parentObj) {\n      propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n    }\n\n    return propName;\n  }\n\n}\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nlet componentCount = 0;\nlet lastPageID;\nlet lastHistoryLen = 0;\nlet versionBasedStatePersistence = false;\n/**\n * To enable or disable version based statePersistence functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.\n * @returns {void}\n */\n\nfunction enableVersionBasedPersistence(status) {\n  versionBasedStatePersistence = status;\n}\n/**\n * Base class for all Essential JavaScript components\n */\n\n\nlet Component = class Component extends Base {\n  /**\n   * Initialize the constructor for component base\n   *\n   * @param {Object} options ?\n   * @param {string} selector ?\n   */\n  constructor(options, selector) {\n    super(options, selector);\n    this.randomId = uniqueID();\n    /**\n     * string template option for Blazor template rendering\n     *\n     * @private\n     */\n\n    this.isStringTemplate = false;\n    this.needsID = false;\n    this.isReactHybrid = false;\n\n    if (isNullOrUndefined(this.enableRtl)) {\n      this.setProperties({\n        'enableRtl': rightToLeft\n      }, true);\n    }\n\n    if (isNullOrUndefined(this.locale)) {\n      this.setProperties({\n        'locale': defaultCulture\n      }, true);\n    }\n\n    this.moduleLoader = new ModuleLoader(this);\n    this.localObserver = new Observer(this); // tslint:disable-next-line:no-function-constructor-with-string-args\n\n    onIntlChange.on('notifyExternalChange', this.detectFunction, this, this.randomId);\n\n    if (!isUndefined(selector)) {\n      this.appendTo();\n    }\n  }\n\n  requiredModules() {\n    return [];\n  }\n  /**\n   * Destroys the sub modules while destroying the widget\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.enablePersistence) {\n      this.setPersistData();\n    }\n\n    this.localObserver.destroy();\n\n    if (this.refreshing) {\n      return;\n    }\n\n    removeClass([this.element], ['e-control']);\n    this.trigger('destroyed', {\n      cancel: false\n    });\n    super.destroy();\n    this.moduleLoader.clean();\n    onIntlChange.off('notifyExternalChange', this.detectFunction, this.randomId);\n  }\n  /**\n   * Applies all the pending property changes and render the component again.\n   *\n   * @returns {void} ?\n   */\n\n\n  refresh() {\n    this.refreshing = true;\n    this.moduleLoader.clean();\n    this.destroy();\n    this.clearChanges();\n    this.localObserver = new Observer(this);\n    this.preRender();\n    this.injectModules();\n    this.render();\n    this.refreshing = false;\n  }\n\n  accessMount() {\n    if (this.mount && !this.isReactHybrid) {\n      this.mount();\n    }\n  }\n  /**\n   * Returns the route element of the component\n   *\n   * @returns {HTMLElement} ?\n   */\n\n\n  getRootElement() {\n    if (this.isReactHybrid) {\n      // eslint-disable-next-line\n      return this.actualElement;\n    } else {\n      return this.element;\n    }\n  }\n  /**\n   * Returns the persistence data for component\n   *\n   * @returns {any} ?\n   */\n  // eslint-disable-next-line\n\n\n  getLocalData() {\n    const eleId = this.getModuleName() + this.element.id;\n\n    if (versionBasedStatePersistence) {\n      return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);\n    } else {\n      return window.localStorage.getItem(eleId);\n    }\n  }\n  /**\n   * Appends the control within the given HTML element\n   *\n   * @param {string | HTMLElement} selector - Target element where control needs to be appended\n   * @returns {void} ?\n   */\n\n\n  appendTo(selector) {\n    if (!isNullOrUndefined(selector) && typeof selector === 'string') {\n      this.element = select(selector, document);\n    } else if (!isNullOrUndefined(selector)) {\n      this.element = selector;\n    }\n\n    if (!isNullOrUndefined(this.element)) {\n      const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n      addClass([this.element], ['e-control', moduleClass]);\n      this.isProtectedOnChange = false;\n\n      if (this.needsID && !this.element.id) {\n        this.element.id = this.getUniqueID(this.getModuleName());\n      }\n\n      if (this.enablePersistence) {\n        this.mergePersistData();\n        window.addEventListener('unload', this.setPersistData.bind(this));\n      }\n\n      const inst = getValue('ej2_instances', this.element);\n\n      if (!inst || inst.indexOf(this) === -1) {\n        super.addInstance();\n      }\n\n      this.preRender();\n      this.injectModules();\n      this.render();\n\n      if (!this.mount) {\n        this.trigger('created');\n      } else {\n        this.accessMount();\n      }\n    }\n  }\n  /**\n   * It is used to process the post rendering functionalities to a component.\n   *\n   * @param {Node} wrapperElement ?\n   * @returns {void} ?\n   */\n\n\n  renderComplete(wrapperElement) {\n    if (isBlazor()) {\n      const sfBlazor = 'sfBlazor'; // eslint-disable-next-line\n\n      window[sfBlazor].renderComplete(this.element, wrapperElement);\n    }\n\n    this.isRendered = true;\n  }\n  /**\n   * When invoked, applies the pending property changes immediately to the component.\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    this.injectModules();\n    super.dataBind();\n  }\n  /**\n   * Attach one or more  event handler to the current component context.\n   * It is used for internal handling event internally within the component only.\n   *\n   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n   * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs\n   * @param {Object} context - optional parameter Specifies the context to be bind in the handler.\n   * @returns {void} ?\n   * @private\n   */\n\n\n  on(event, handler, context) {\n    if (typeof event === 'string') {\n      this.localObserver.on(event, handler, context);\n    } else {\n      for (const arg of event) {\n        this.localObserver.on(arg.event, arg.handler, arg.context);\n      }\n    }\n  }\n  /**\n   * To remove one or more event handler that has been attached with the on() method.\n   *\n   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n   * @param {Function} handler - optional parameter Specifies the function to run when the event occurs\n   * @returns {void} ?\n   * @private\n   */\n\n\n  off(event, handler) {\n    if (typeof event === 'string') {\n      this.localObserver.off(event, handler);\n    } else {\n      for (const arg of event) {\n        this.localObserver.off(arg.event, arg.handler);\n      }\n    }\n  }\n  /**\n   * To notify the handlers in the specified event.\n   *\n   * @param {string} property - Specifies the event to be notify.\n   * @param {Object} argument - Additional parameters to pass while calling the handler.\n   * @returns {void} ?\n   * @private\n   */\n\n\n  notify(property, argument) {\n    if (this.isDestroyed !== true) {\n      this.localObserver.notify(property, argument);\n    }\n  }\n  /**\n   * Get injected modules\n   *\n   * @returns {Function} ?\n   * @private\n   */\n\n\n  getInjectedModules() {\n    return this.injectedModules;\n  }\n  /**\n   * Dynamically injects the required modules to the component.\n   *\n   * @param {Function} moduleList ?\n   * @returns {void} ?\n   */\n\n\n  static Inject(...moduleList) {\n    if (!this.prototype.injectedModules) {\n      this.prototype.injectedModules = [];\n    }\n\n    for (let i = 0; i < moduleList.length; i++) {\n      if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {\n        this.prototype.injectedModules.push(moduleList[i]);\n      }\n    }\n  }\n  /**\n   * This is a instance method to create an element.\n   *\n   * @param {string} tagName ?\n   * @param {ElementProperties} prop ?\n   * @param {boolean} isVDOM ?\n   * @returns {any} ?\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  createElement(tagName, prop, isVDOM) {\n    return createElement(tagName, prop);\n  }\n  /**\n   *\n   * @param {Function} handler - handler to be triggered after state Updated.\n   * @param {any} argument - Arguments to be passed to caller.\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  triggerStateChange(handler, argument) {\n    if (this.isReactHybrid) {\n      // eslint-disable-next-line\n      this.setState();\n      this.currentContext = {\n        calls: handler,\n        args: argument\n      };\n    }\n  } // tslint: enable: no-any\n\n\n  injectModules() {\n    if (this.injectedModules && this.injectedModules.length) {\n      this.moduleLoader.inject(this.requiredModules(), this.injectedModules);\n    }\n  }\n\n  detectFunction(args) {\n    const prop = Object.keys(args);\n\n    if (prop.length) {\n      this[prop[0]] = args[prop[0]];\n    }\n  }\n\n  mergePersistData() {\n    let data;\n\n    if (versionBasedStatePersistence) {\n      data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);\n    } else {\n      data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n    }\n\n    if (!(isNullOrUndefined(data) || data === '')) {\n      this.setProperties(JSON.parse(data), true);\n    }\n  }\n\n  setPersistData() {\n    if (!this.isDestroyed) {\n      if (versionBasedStatePersistence) {\n        window.localStorage.setItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());\n      } else {\n        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());\n      }\n    }\n  } //tslint:disable-next-line\n\n\n  appendReactElement(element, container) {//No Code\n  }\n\n  //tslint:disable-next-line\n  renderReactTemplates() {//No Code\n  } // eslint-disable-next-line\n\n\n  clearTemplate(templateName, index) {//No Code\n  }\n\n  getUniqueID(definedName) {\n    if (this.isHistoryChanged()) {\n      componentCount = 0;\n    }\n\n    lastPageID = this.pageID(location.href);\n    lastHistoryLen = history.length;\n    return definedName + '_' + lastPageID + '_' + componentCount++;\n  }\n\n  pageID(url) {\n    let hash = 0;\n\n    if (url.length === 0) {\n      return hash;\n    }\n\n    for (let i = 0; i < url.length; i++) {\n      const char = url.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return Math.abs(hash);\n  }\n\n  isHistoryChanged() {\n    return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;\n  }\n\n  addOnPersist(options) {\n    const persistObj = {};\n\n    for (const key of options) {\n      let objValue; // eslint-disable-next-line\n\n      objValue = getValue(key, this);\n\n      if (!isUndefined(objValue)) {\n        setValue(key, this.getActualProperties(objValue), persistObj);\n      }\n    }\n\n    return JSON.stringify(persistObj, (key, value) => {\n      return this.getActualProperties(value);\n    });\n  }\n\n  getActualProperties(obj) {\n    if (obj instanceof ChildProperty) {\n      return getValue('properties', obj);\n    } else {\n      return obj;\n    }\n  }\n\n  ignoreOnPersist(options) {\n    return JSON.stringify(this.iterateJsonProperties(this.properties, options));\n  }\n\n  iterateJsonProperties(obj, ignoreList) {\n    const newObj = {};\n\n    for (const key of Object.keys(obj)) {\n      if (ignoreList.indexOf(key) === -1) {\n        // eslint-disable-next-line\n        const value = obj[key];\n\n        if (typeof value === 'object' && !(value instanceof Array)) {\n          const newList = ignoreList.filter(str => {\n            return new RegExp(key + '.').test(str);\n          }).map(str => {\n            return str.replace(key + '.', '');\n          });\n          newObj[key] = this.iterateJsonProperties(this.getActualProperties(value), newList);\n        } else {\n          newObj[key] = value;\n        }\n      }\n    }\n\n    return newObj;\n  }\n\n};\n\n__decorate$1([Property(false)], Component.prototype, \"enablePersistence\", void 0);\n\n__decorate$1([Property()], Component.prototype, \"enableRtl\", void 0);\n\n__decorate$1([Property()], Component.prototype, \"locale\", void 0);\n\nComponent = __decorate$1([NotifyPropertyChanges], Component); //Function handling for page navigation detection\n\n/* istanbul ignore next */\n\n(() => {\n  if (typeof window !== 'undefined') {\n    window.addEventListener('popstate',\n    /* istanbul ignore next */\n    () => {\n      componentCount = 0;\n    });\n  }\n})();\n\nvar __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Draggable_1;\nconst defaultPosition = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0\n};\nconst isDraggedObject = {\n  isDragged: false\n};\n/**\n * Specifies the position coordinates\n */\n\nclass Position extends ChildProperty {}\n\n__decorate$2([Property(0)], Position.prototype, \"left\", void 0);\n\n__decorate$2([Property(0)], Position.prototype, \"top\", void 0);\n/**\n * Draggable Module provides support to enable draggable functionality in Dom Elements.\n * ```html\n * <div id='drag'>Draggable</div>\n * <script>\n * var ele = document.getElementById('drag');\n * var drag:Draggable = new Draggable(ele,{\n *     clone:false,\n *     drag: function(e) {\n *      //drag handler code.\n *      },\n *     handle:'.class'\n * });\n * </script>\n * ```\n */\n\n\nlet Draggable = Draggable_1 = class Draggable extends Base {\n  constructor(element, options) {\n    super(options, element);\n    this.dragLimit = Draggable_1.getDefaultPosition();\n    this.borderWidth = Draggable_1.getDefaultPosition();\n    this.padding = Draggable_1.getDefaultPosition();\n    this.diffX = 0;\n    this.prevLeft = 0;\n    this.prevTop = 0;\n    this.dragProcessStarted = false;\n    /* tslint:disable no-any */\n\n    this.eleTop = 0;\n    this.tapHoldTimer = 0;\n    this.externalInitialize = false;\n    this.diffY = 0;\n    this.parentScrollX = 0;\n    this.parentScrollY = 0;\n    this.droppables = {};\n    this.bind();\n  }\n\n  bind() {\n    this.toggleEvents();\n\n    if (Browser.isIE) {\n      addClass([this.element], 'e-block-touch');\n    }\n\n    this.droppables[this.scope] = {};\n  }\n\n  static getDefaultPosition() {\n    return extend({}, defaultPosition);\n  }\n\n  toggleEvents(isUnWire) {\n    let ele;\n\n    if (!isUndefined(this.handle)) {\n      ele = select(this.handle, this.element);\n    }\n\n    let handler = this.enableTapHold && Browser.isDevice && Browser.isTouch ? this.mobileInitialize : this.initialize;\n\n    if (isUnWire) {\n      EventHandler.remove(ele || this.element, Browser.touchStartEvent, handler);\n    } else {\n      EventHandler.add(ele || this.element, Browser.touchStartEvent, handler, this);\n    }\n  }\n  /* istanbul ignore next */\n\n\n  mobileInitialize(evt) {\n    let target = evt.currentTarget;\n    this.tapHoldTimer = setTimeout(() => {\n      this.externalInitialize = true;\n      this.removeTapholdTimer();\n      this.initialize(evt, target);\n    }, this.tapHoldThreshold);\n    EventHandler.add(document, Browser.touchMoveEvent, this.removeTapholdTimer, this);\n    EventHandler.add(document, Browser.touchEndEvent, this.removeTapholdTimer, this);\n  }\n  /* istanbul ignore next */\n\n\n  removeTapholdTimer() {\n    clearTimeout(this.tapHoldTimer);\n    EventHandler.remove(document, Browser.touchMoveEvent, this.removeTapholdTimer);\n    EventHandler.remove(document, Browser.touchEndEvent, this.removeTapholdTimer);\n  }\n  /* istanbul ignore next */\n\n\n  getScrollableParent(element, axis) {\n    let scroll = {\n      'vertical': 'scrollHeight',\n      'horizontal': 'scrollWidth'\n    };\n    let client = {\n      'vertical': 'clientHeight',\n      'horizontal': 'clientWidth'\n    };\n\n    if (isNullOrUndefined(element)) {\n      return null;\n    }\n\n    if (element[scroll[axis]] > element[client[axis]]) {\n      if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {\n        if (axis === 'vertical') {\n          this.parentScrollY = this.parentScrollY + (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);\n          this.tempScrollHeight = element.scrollHeight;\n        } else {\n          this.parentScrollX = this.parentScrollX + (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);\n          this.tempScrollWidth = element.scrollWidth;\n        }\n\n        if (!isNullOrUndefined(element)) {\n          return this.getScrollableParent(element.parentNode, axis);\n        } else {\n          return element;\n        }\n      } else {\n        return this.getScrollableParent(element.parentNode, axis);\n      }\n    } else {\n      return this.getScrollableParent(element.parentNode, axis);\n    }\n  }\n\n  getScrollableValues() {\n    this.parentScrollX = 0;\n    this.parentScrollY = 0;\n    let isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');\n    let verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');\n    let horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');\n  }\n\n  initialize(evt, curTarget) {\n    this.currentStateTarget = evt.target;\n\n    if (this.isDragStarted()) {\n      return;\n    } else {\n      this.isDragStarted(true);\n      this.externalInitialize = false;\n    }\n\n    this.target = evt.currentTarget || curTarget;\n    this.dragProcessStarted = false;\n\n    if (this.abort) {\n      /* tslint:disable no-any */\n      let abortSelectors = this.abort;\n\n      if (typeof abortSelectors === 'string') {\n        abortSelectors = [abortSelectors];\n      }\n\n      for (let i = 0; i < abortSelectors.length; i++) {\n        if (!isNullOrUndefined(closest(evt.target, abortSelectors[i]))) {\n          /* istanbul ignore next */\n          if (this.isDragStarted()) {\n            this.isDragStarted(true);\n          }\n\n          return;\n        }\n      }\n    }\n\n    if (this.preventDefault && !isUndefined(evt.changedTouches) && evt.type !== 'touchstart') {\n      evt.preventDefault();\n    }\n\n    this.element.setAttribute('aria-grabbed', 'true');\n    let intCoord = this.getCoordinates(evt);\n    this.initialPosition = {\n      x: intCoord.pageX,\n      y: intCoord.pageY\n    };\n\n    if (!this.clone) {\n      let pos = this.element.getBoundingClientRect();\n      this.getScrollableValues();\n\n      if (evt.clientX === evt.pageX) {\n        this.parentScrollX = 0;\n      }\n\n      if (evt.clientY === evt.pageY) {\n        this.parentScrollY = 0;\n      }\n\n      this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);\n      this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);\n    }\n\n    if (this.externalInitialize) {\n      this.intDragStart(evt);\n    } else {\n      EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);\n      EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);\n    }\n\n    this.toggleEvents(true);\n\n    if (evt.type !== 'touchstart' && this.isPreventSelect) {\n      document.body.classList.add('e-prevent-select');\n    }\n\n    this.externalInitialize = false;\n    EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);\n  }\n\n  intDragStart(evt) {\n    this.removeTapholdTimer();\n    let isChangeTouch = !isUndefined(evt.changedTouches);\n\n    if (isChangeTouch && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    if (isChangeTouch) {\n      evt.preventDefault();\n    }\n\n    let intCordinate = this.getCoordinates(evt);\n    let pos;\n    let styleProp = getComputedStyle(this.element);\n    this.margin = {\n      left: parseInt(styleProp.marginLeft, 10),\n      top: parseInt(styleProp.marginTop, 10),\n      right: parseInt(styleProp.marginRight, 10),\n      bottom: parseInt(styleProp.marginBottom, 10)\n    };\n    let element = this.element;\n\n    if (this.clone && this.dragTarget) {\n      let intClosest = closest(evt.target, this.dragTarget);\n\n      if (!isNullOrUndefined(intClosest)) {\n        element = intClosest;\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.isReplaceDragEle) {\n      element = this.currentStateCheck(evt.target, element);\n    }\n\n    this.offset = this.calculateParentPosition(element);\n    this.position = this.getMousePosition(evt, this.isDragScroll);\n    let x = this.initialPosition.x - intCordinate.pageX;\n    let y = this.initialPosition.y - intCordinate.pageY;\n    let distance = Math.sqrt(x * x + y * y);\n\n    if (distance >= this.distance || this.externalInitialize) {\n      let ele = this.getHelperElement(evt);\n\n      if (!ele || isNullOrUndefined(ele)) {\n        return;\n      }\n\n      let dragTargetElement = this.helperElement = ele;\n      this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);\n\n      if (this.dragStart) {\n        let curTarget = this.getProperTargetElement(evt);\n        let args = {\n          event: evt,\n          element: element,\n          target: curTarget,\n          bindEvents: isBlazor() ? this.bindDragEvents.bind(this) : null,\n          dragElement: dragTargetElement\n        };\n        this.trigger('dragStart', args);\n      }\n\n      if (this.dragArea) {\n        this.setDragArea();\n      } else {\n        this.dragLimit = {\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0\n        };\n        this.borderWidth = {\n          top: 0,\n          left: 0\n        };\n      }\n\n      pos = {\n        left: this.position.left - this.parentClientRect.left,\n        top: this.position.top - this.parentClientRect.top\n      };\n\n      if (this.clone && !this.enableTailMode) {\n        this.diffX = this.position.left - this.offset.left;\n        this.diffY = this.position.top - this.offset.top;\n      }\n\n      this.getScrollableValues(); // when drag element has margin-top\n\n      let styles = getComputedStyle(element);\n      let marginTop = parseFloat(styles.marginTop);\n      /* istanbul ignore next */\n\n      if (this.clone && marginTop !== 0) {\n        pos.top += marginTop;\n      }\n\n      this.eleTop = !isNaN(parseFloat(styles.top)) ? parseFloat(styles.top) - this.offset.top : 0;\n      /* istanbul ignore next */\n      // if (this.eleTop > 0) {\n      //     pos.top += this.eleTop;\n      // }\n\n      if (this.enableScrollHandler && !this.clone) {\n        pos.top -= this.parentScrollY;\n        pos.left -= this.parentScrollX;\n      }\n\n      let posValue = this.getProcessedPositionValue({\n        top: pos.top - this.diffY + 'px',\n        left: pos.left - this.diffX + 'px'\n      });\n      this.dragElePosition = {\n        top: pos.top,\n        left: pos.left\n      };\n      setStyleAttribute(dragTargetElement, this.getDragPosition({\n        position: 'absolute',\n        left: posValue.left,\n        top: posValue.top\n      }));\n      EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n      EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n\n      if (!isBlazor()) {\n        this.bindDragEvents(dragTargetElement);\n      }\n    }\n  }\n\n  bindDragEvents(dragTargetElement) {\n    if (isVisible(dragTargetElement)) {\n      EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);\n      EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);\n      this.setGlobalDroppables(false, this.element, dragTargetElement);\n    } else {\n      this.toggleEvents();\n      document.body.classList.remove('e-prevent-select');\n    }\n  }\n\n  elementInViewport(el) {\n    this.top = el.offsetTop;\n    this.left = el.offsetLeft;\n    this.width = el.offsetWidth;\n    this.height = el.offsetHeight;\n\n    while (el.offsetParent) {\n      el = el.offsetParent;\n      this.top += el.offsetTop;\n      this.left += el.offsetLeft;\n    }\n\n    return this.top >= window.pageYOffset && this.left >= window.pageXOffset && this.top + this.height <= window.pageYOffset + window.innerHeight && this.left + this.width <= window.pageXOffset + window.innerWidth;\n  }\n\n  getProcessedPositionValue(value) {\n    if (this.queryPositionInfo) {\n      return this.queryPositionInfo(value);\n    }\n\n    return value;\n  }\n\n  calculateParentPosition(ele) {\n    if (isNullOrUndefined(ele)) {\n      return {\n        left: 0,\n        top: 0\n      };\n    }\n\n    let rect = ele.getBoundingClientRect();\n    let style = getComputedStyle(ele);\n    return {\n      left: rect.left + window.pageXOffset - parseInt(style.marginLeft, 10),\n      top: rect.top + window.pageYOffset - parseInt(style.marginTop, 10)\n    };\n  } // tslint:disable-next-line:max-func-body-length\n\n\n  intDrag(evt) {\n    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    let left;\n    let top;\n    this.position = this.getMousePosition(evt, this.isDragScroll);\n    let docHeight = this.getDocumentWidthHeight('Height');\n\n    if (docHeight < this.position.top) {\n      this.position.top = docHeight;\n    }\n\n    let docWidth = this.getDocumentWidthHeight('Width');\n\n    if (docWidth < this.position.left) {\n      this.position.left = docWidth;\n    }\n\n    if (this.drag) {\n      let curTarget = this.getProperTargetElement(evt);\n      this.trigger('drag', {\n        event: evt,\n        element: this.element,\n        target: curTarget\n      });\n    }\n\n    let eleObj = this.checkTargetElement(evt);\n\n    if (eleObj.target && eleObj.instance) {\n      /* tslint:disable no-any */\n      let flag = true;\n\n      if (this.hoverObject) {\n        if (this.hoverObject.instance !== eleObj.instance) {\n          this.triggerOutFunction(evt, eleObj);\n        } else {\n          flag = false;\n        }\n      }\n\n      if (flag) {\n        eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n        eleObj.instance.intOver(evt, eleObj.target);\n        this.hoverObject = eleObj;\n      }\n    } else if (this.hoverObject) {\n      this.triggerOutFunction(evt, eleObj);\n    }\n\n    let helperElement = this.droppables[this.scope].helper;\n    this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);\n    let tLeft = this.parentClientRect.left;\n    let tTop = this.parentClientRect.top;\n    let intCoord = this.getCoordinates(evt);\n    let pagex = intCoord.pageX;\n    let pagey = intCoord.pageY;\n    let dLeft = this.position.left - this.diffX;\n    let dTop = this.position.top - this.diffY;\n    let styles = getComputedStyle(helperElement);\n\n    if (this.dragArea) {\n      if (this.pageX !== pagex || this.skipDistanceCheck) {\n        let helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft) + parseFloat(styles.marginRight));\n\n        if (this.dragLimit.left > dLeft && dLeft > 0) {\n          left = this.dragLimit.left;\n        } else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {\n          left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;\n        } else {\n          left = dLeft < 0 ? this.dragLimit.left : dLeft;\n        }\n      }\n\n      if (this.pageY !== pagey || this.skipDistanceCheck) {\n        let helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop) + parseFloat(styles.marginBottom));\n\n        if (this.dragLimit.top > dTop && dTop > 0) {\n          top = this.dragLimit.top;\n        } else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {\n          top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;\n        } else {\n          top = dTop < 0 ? this.dragLimit.top : dTop;\n        }\n      }\n    } else {\n      left = dLeft;\n      top = dTop;\n    }\n\n    let iTop = tTop + this.borderWidth.top;\n    let iLeft = tLeft + this.borderWidth.left;\n\n    if (this.dragProcessStarted) {\n      if (isNullOrUndefined(top)) {\n        top = this.prevTop;\n      }\n\n      if (isNullOrUndefined(left)) {\n        left = this.prevLeft;\n      }\n    }\n\n    let draEleTop;\n    let draEleLeft;\n\n    if (this.dragArea) {\n      this.dragLimit.top = this.clone ? this.dragLimit.top : 0;\n      draEleTop = top - iTop < 0 ? this.dragLimit.top : top - iTop;\n      draEleLeft = left - iLeft < 0 ? this.dragElePosition.left : left - iLeft;\n    } else {\n      draEleTop = top - iTop;\n      draEleLeft = left - iLeft;\n    }\n\n    let marginTop = parseFloat(getComputedStyle(this.element).marginTop); // when drag-element has margin-top\n\n    /* istanbul ignore next */\n\n    if (marginTop > 0) {\n      if (this.clone) {\n        draEleTop += marginTop;\n\n        if (dTop < 0) {\n          if (marginTop + dTop >= 0) {\n            draEleTop = marginTop + dTop;\n          } else {\n            draEleTop -= marginTop;\n          }\n        }\n\n        draEleTop = this.dragLimit.bottom < draEleTop ? this.dragLimit.bottom : draEleTop;\n      }\n\n      if (top - iTop < 0) {\n        if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {\n          let tempDraEleTop = this.dragLimit.top + dTop - iTop;\n\n          if (tempDraEleTop + marginTop + iTop < 0) {\n            draEleTop -= marginTop + iTop;\n          } else {\n            draEleTop = tempDraEleTop;\n          }\n        } else {\n          draEleTop -= marginTop + iTop;\n        }\n      }\n    }\n    /* istanbul ignore next */\n    // if(this.eleTop > 0) {\n    //      draEleTop += this.eleTop;\n    // }\n\n\n    if (this.enableScrollHandler && !this.clone) {\n      draEleTop -= this.parentScrollY;\n      draEleLeft -= this.parentScrollX;\n    }\n\n    let dragValue = this.getProcessedPositionValue({\n      top: draEleTop + 'px',\n      left: draEleLeft + 'px'\n    });\n    setStyleAttribute(helperElement, this.getDragPosition(dragValue));\n\n    if (!this.elementInViewport(helperElement) && this.enableAutoScroll) {\n      this.helperElement.scrollIntoView();\n    }\n\n    this.dragProcessStarted = true;\n    this.prevLeft = left;\n    this.prevTop = top;\n    this.position.left = left;\n    this.position.top = top;\n    this.pageX = pagex;\n    this.pageY = pagey;\n  }\n\n  triggerOutFunction(evt, eleObj) {\n    this.hoverObject.instance.intOut(evt, eleObj.target);\n    this.hoverObject.instance.dragData[this.scope] = null;\n    this.hoverObject = null;\n  }\n\n  getDragPosition(dragValue) {\n    let temp = extend({}, dragValue);\n\n    if (this.axis) {\n      if (this.axis === 'x') {\n        delete temp.top;\n      } else if (this.axis === 'y') {\n        delete temp.left;\n      }\n    }\n\n    return temp;\n  }\n\n  getDocumentWidthHeight(str) {\n    let docBody = document.body;\n    let docEle = document.documentElement;\n    let returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);\n    return returnValue;\n  }\n\n  intDragStop(evt) {\n    this.dragProcessStarted = false;\n\n    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    let type = ['touchend', 'pointerup', 'mouseup'];\n\n    if (type.indexOf(evt.type) !== -1) {\n      if (this.dragStop) {\n        let curTarget = this.getProperTargetElement(evt);\n        this.trigger('dragStop', {\n          event: evt,\n          element: this.element,\n          target: curTarget,\n          helper: this.helperElement\n        });\n      }\n\n      this.intDestroy(evt);\n    } else {\n      this.element.setAttribute('aria-grabbed', 'false');\n    }\n\n    let eleObj = this.checkTargetElement(evt);\n\n    if (eleObj.target && eleObj.instance) {\n      eleObj.instance.dragStopCalled = true;\n      eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n      eleObj.instance.intDrop(evt, eleObj.target);\n    }\n\n    this.setGlobalDroppables(true);\n    document.body.classList.remove('e-prevent-select');\n  }\n  /**\n   * @private\n   */\n\n\n  intDestroy(evt) {\n    this.dragProcessStarted = false;\n    this.toggleEvents();\n    document.body.classList.remove('e-prevent-select');\n    this.element.setAttribute('aria-grabbed', 'false');\n    EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n    EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);\n    EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n    EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);\n\n    if (this.isDragStarted()) {\n      this.isDragStarted(true);\n    }\n  } // triggers when property changed\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  getModuleName() {\n    return 'draggable';\n  }\n\n  isDragStarted(change) {\n    if (change) {\n      isDraggedObject.isDragged = !isDraggedObject.isDragged;\n    }\n\n    return isDraggedObject.isDragged;\n  }\n\n  setDragArea() {\n    let eleWidthBound;\n    let eleHeightBound;\n    let top = 0;\n    let left = 0;\n    let ele;\n    let type = typeof this.dragArea;\n\n    if (type === 'string') {\n      ele = select(this.dragArea);\n    } else {\n      ele = this.dragArea;\n    }\n\n    if (ele) {\n      let elementArea = ele.getBoundingClientRect();\n      eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;\n      eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;\n      let keys = ['Top', 'Left', 'Bottom', 'Right'];\n      let styles = getComputedStyle(ele);\n\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let tborder = styles['border' + key + 'Width'];\n        let tpadding = styles['padding' + key];\n        let lowerKey = key.toLowerCase();\n        this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);\n        this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);\n      }\n\n      top = elementArea.top;\n      left = elementArea.left;\n      this.dragLimit.left = left + this.borderWidth.left + this.padding.left;\n      this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;\n      this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);\n      this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);\n    }\n  }\n\n  getProperTargetElement(evt) {\n    let intCoord = this.getCoordinates(evt);\n    let ele;\n    let prevStyle = this.helperElement.style.pointerEvents || '';\n\n    if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {\n      this.helperElement.style.pointerEvents = 'none';\n      ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);\n      this.helperElement.style.pointerEvents = prevStyle;\n    } else {\n      ele = evt.target;\n    }\n\n    return ele;\n  }\n  /* istanbul ignore next */\n\n\n  currentStateCheck(ele, oldEle) {\n    let elem;\n\n    if (!isNullOrUndefined(this.currentStateTarget) && this.currentStateTarget !== ele) {\n      elem = this.currentStateTarget;\n    } else {\n      elem = !isNullOrUndefined(oldEle) ? oldEle : ele;\n    }\n\n    return elem;\n  }\n\n  getMousePosition(evt, isdragscroll) {\n    /* tslint:disable no-any */\n    let dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;\n    let intCoord = this.getCoordinates(evt);\n    let pageX;\n    let pageY;\n    let isOffsetParent = isNullOrUndefined(dragEle.offsetParent);\n    /* istanbul ignore next */\n\n    if (isdragscroll) {\n      pageX = this.clone ? intCoord.pageX : intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft) - this.relativeXPosition;\n      pageY = this.clone ? intCoord.pageY : intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop) - this.relativeYPosition;\n    } else {\n      pageX = this.clone ? intCoord.pageX : intCoord.pageX + window.pageXOffset - this.relativeXPosition;\n      pageY = this.clone ? intCoord.pageY : intCoord.pageY + window.pageYOffset - this.relativeYPosition;\n    }\n\n    return {\n      left: pageX - (this.margin.left + this.cursorAt.left),\n      top: pageY - (this.margin.top + this.cursorAt.top)\n    };\n  }\n\n  getCoordinates(evt) {\n    if (evt.type.indexOf('touch') > -1) {\n      return evt.changedTouches[0];\n    }\n\n    return evt;\n  }\n\n  getHelperElement(evt) {\n    let element;\n\n    if (this.clone) {\n      if (this.helper) {\n        element = this.helper({\n          sender: evt,\n          element: this.target\n        });\n      } else {\n        element = createElement('div', {\n          className: 'e-drag-helper e-block-touch',\n          innerHTML: 'Draggable'\n        });\n        document.body.appendChild(element);\n      }\n    } else {\n      element = this.element;\n    }\n\n    return element;\n  }\n\n  setGlobalDroppables(reset, drag, helper) {\n    this.droppables[this.scope] = reset ? null : {\n      draggable: drag,\n      helper: helper,\n      draggedElement: this.element\n    };\n  }\n\n  checkTargetElement(evt) {\n    let target = this.getProperTargetElement(evt);\n    let dropIns = this.getDropInstance(target);\n\n    if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {\n      let parent = closest(target.parentNode, '.e-droppable') || target.parentElement;\n\n      if (parent) {\n        dropIns = this.getDropInstance(parent);\n      }\n    }\n\n    return {\n      target: target,\n      instance: dropIns\n    };\n  }\n\n  getDropInstance(ele) {\n    let name = 'getModuleName';\n    let drop;\n    let eleInst = ele && ele.ej2_instances;\n\n    if (eleInst) {\n      for (let inst of eleInst) {\n        if (inst[name]() === 'droppable') {\n          drop = inst;\n          break;\n        }\n      }\n    }\n\n    return drop;\n  }\n\n  destroy() {\n    this.toggleEvents(true);\n    super.destroy();\n  }\n\n};\n\n__decorate$2([Complex({}, Position)], Draggable.prototype, \"cursorAt\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"clone\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"dragArea\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"isDragScroll\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"isReplaceDragEle\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"isPreventSelect\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"drag\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"dragStart\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"dragStop\", void 0);\n\n__decorate$2([Property(1)], Draggable.prototype, \"distance\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"handle\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"abort\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"helper\", void 0);\n\n__decorate$2([Property('default')], Draggable.prototype, \"scope\", void 0);\n\n__decorate$2([Property('')], Draggable.prototype, \"dragTarget\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"axis\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"queryPositionInfo\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableTailMode\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"skipDistanceCheck\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"preventDefault\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableAutoScroll\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableTapHold\", void 0);\n\n__decorate$2([Property(750)], Draggable.prototype, \"tapHoldThreshold\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableScrollHandler\", void 0);\n\nDraggable = Draggable_1 = __decorate$2([NotifyPropertyChanges], Draggable);\n\nvar __decorate$3 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Droppable Module provides support to enable droppable functionality in Dom Elements.\n * ```html\n * <div id='drop'>Droppable</div>\n * <script>\n * let ele:HTMLElement = document.getElementById('drop');\n * var drag:Droppable = new Droppable(ele,{\n *     accept:'.drop',\n *     drop: function(e) {\n *      //drop handler code.\n *     }\n * });\n * </script>\n * ```\n */\n\n\nlet Droppable = class Droppable extends Base {\n  constructor(element, options) {\n    super(options, element);\n    this.mouseOver = false;\n    this.dragData = {};\n    this.dragStopCalled = false;\n    this.bind();\n  }\n\n  bind() {\n    this.wireEvents();\n  }\n\n  wireEvents() {\n    EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);\n  } // triggers when property changed\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  getModuleName() {\n    return 'droppable';\n  }\n\n  intOver(event, element) {\n    if (!this.mouseOver) {\n      const drag = this.dragData[this.scope];\n      this.trigger('over', {\n        event: event,\n        target: element,\n        dragData: drag\n      });\n      this.mouseOver = true;\n    }\n  }\n\n  intOut(event, element) {\n    if (this.mouseOver) {\n      this.trigger('out', {\n        evt: event,\n        target: element\n      });\n      this.mouseOver = false;\n    }\n  }\n\n  intDrop(evt, element) {\n    if (!this.dragStopCalled) {\n      return;\n    } else {\n      this.dragStopCalled = false;\n    }\n\n    let accept = true;\n    const drag = this.dragData[this.scope];\n    const isDrag = drag ? drag.helper && isVisible(drag.helper) : false;\n    let area;\n\n    if (isDrag) {\n      area = this.isDropArea(evt, drag.helper, element);\n\n      if (this.accept) {\n        accept = matches(drag.helper, this.accept);\n      }\n    }\n\n    if (isDrag && this.drop && area.canDrop && accept) {\n      this.trigger('drop', {\n        event: evt,\n        target: area.target,\n        droppedElement: drag.helper,\n        dragData: drag\n      });\n    }\n\n    this.mouseOver = false;\n  }\n\n  isDropArea(evt, helper, element) {\n    const area = {\n      canDrop: true,\n      target: element || evt.target\n    };\n    const isTouch = evt.type === 'touchend';\n\n    if (isTouch || area.target === helper) {\n      helper.style.display = 'none';\n      const coord = isTouch ? evt.changedTouches[0] : evt;\n      const ele = document.elementFromPoint(coord.clientX, coord.clientY);\n      area.canDrop = false;\n      area.canDrop = compareElementParent(ele, this.element);\n\n      if (area.canDrop) {\n        area.target = ele;\n      }\n\n      helper.style.display = '';\n    }\n\n    return area;\n  }\n\n  destroy() {\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);\n    super.destroy();\n  }\n\n};\n\n__decorate$3([Property()], Droppable.prototype, \"accept\", void 0);\n\n__decorate$3([Property('default')], Droppable.prototype, \"scope\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"drop\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"over\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"out\", void 0);\n\nDroppable = __decorate$3([NotifyPropertyChanges], Droppable);\n\nvar __decorate$4 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar KeyboardEvents_1;\nconst keyCode = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'control': 17,\n  'alt': 18,\n  'pause': 19,\n  'capslock': 20,\n  'space': 32,\n  'escape': 27,\n  'pageup': 33,\n  'pagedown': 34,\n  'end': 35,\n  'home': 36,\n  'leftarrow': 37,\n  'uparrow': 38,\n  'rightarrow': 39,\n  'downarrow': 40,\n  'insert': 45,\n  'delete': 46,\n  'f1': 112,\n  'f2': 113,\n  'f3': 114,\n  'f4': 115,\n  'f5': 116,\n  'f6': 117,\n  'f7': 118,\n  'f8': 119,\n  'f9': 120,\n  'f10': 121,\n  'f11': 122,\n  'f12': 123,\n  'semicolon': 186,\n  'plus': 187,\n  'comma': 188,\n  'minus': 189,\n  'dot': 190,\n  'forwardslash': 191,\n  'graveaccent': 192,\n  'openbracket': 219,\n  'backslash': 220,\n  'closebracket': 221,\n  'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\n\nlet KeyboardEvents = KeyboardEvents_1 = class KeyboardEvents extends Base {\n  /**\n   * Initializes the KeyboardEvents\n   *\n   * @param {HTMLElement} element ?\n   * @param {KeyboardEventsModel} options ?\n   */\n  constructor(element, options) {\n    super(options, element);\n    /**\n     * To handle a key press event returns null\n     *\n     * @param {KeyboardEventArgs} e ?\n     * @returns {void} ?\n     */\n\n    this.keyPressHandler = e => {\n      const isAltKey = e.altKey;\n      const isCtrlKey = e.ctrlKey;\n      const isShiftKey = e.shiftKey;\n      const curkeyCode = e.which;\n      const keys = Object.keys(this.keyConfigs);\n\n      for (const key of keys) {\n        const configCollection = this.keyConfigs[key].split(',');\n\n        for (const rconfig of configCollection) {\n          const rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n\n          if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey && isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n            e.action = key;\n\n            if (this.keyAction) {\n              this.keyAction(e);\n            }\n          }\n        }\n      }\n    };\n\n    this.bind();\n  }\n  /**\n   * Unwire bound events and destroy the instance.\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    this.unwireEvents();\n    super.destroy();\n  }\n  /**\n   * Function can be used to specify certain action if a property is changed\n   *\n   * @param {KeyboardEventsModel} newProp ?\n   * @param {KeyboardEventsModel} oldProp ?\n   * @returns {void} ?\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {// No code are needed\n  }\n\n  bind() {\n    this.wireEvents();\n  }\n  /**\n   * To get the module name, returns 'keyboard'.\n   *\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getModuleName() {\n    return 'keyboard';\n  }\n  /**\n   * Wiring event handlers to events\n   *\n   * @returns {void} ?\n   * @private\n   */\n\n\n  wireEvents() {\n    this.element.addEventListener(this.eventName, this.keyPressHandler);\n  }\n  /**\n   * Unwiring event handlers to events\n   *\n   * @returns {void} ?\n   * @private\n   */\n\n\n  unwireEvents() {\n    this.element.removeEventListener(this.eventName, this.keyPressHandler);\n  }\n  /**\n   * To get the key configuration data\n   *\n   * @param {string} config - configuration data\n   * @returns {KeyData} ?\n   */\n\n\n  static getKeyConfigData(config) {\n    if (config in this.configCache) {\n      return this.configCache[config];\n    }\n\n    const keys = config.toLowerCase().split('+');\n    const keyData = {\n      altKey: keys.indexOf('alt') !== -1 ? true : false,\n      ctrlKey: keys.indexOf('ctrl') !== -1 ? true : false,\n      shiftKey: keys.indexOf('shift') !== -1 ? true : false,\n      keyCode: null\n    };\n\n    if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n      keyData.keyCode = Number(keys[keys.length - 1]);\n    } else {\n      keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n    }\n\n    KeyboardEvents_1.configCache[config] = keyData;\n    return keyData;\n  } // Return the keycode value as string\n\n\n  static getKeyCode(keyVal) {\n    return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);\n  }\n\n};\nKeyboardEvents.configCache = {};\n\n__decorate$4([Property({})], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n\n__decorate$4([Property('keyup')], KeyboardEvents.prototype, \"eventName\", void 0);\n\n__decorate$4([Event$1()], KeyboardEvents.prototype, \"keyAction\", void 0);\n\nKeyboardEvents = KeyboardEvents_1 = __decorate$4([NotifyPropertyChanges], KeyboardEvents);\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\n\nclass L10n {\n  /**\n   * Constructor\n   *\n   * @param {string} controlName ?\n   * @param {Object} localeStrings ?\n   * @param {string} locale ?\n   */\n  constructor(controlName, localeStrings, locale) {\n    this.controlName = controlName;\n    this.localeStrings = localeStrings;\n    this.setLocale(locale || defaultCulture);\n  }\n  /**\n   * Sets the locale text\n   *\n   * @param {string} locale ?\n   * @returns {void} ?\n   */\n\n\n  setLocale(locale) {\n    const intLocale = this.intGetControlConstant(L10n.locale, locale);\n    this.currentLocale = intLocale || this.localeStrings;\n  }\n  /**\n   * Sets the global locale for all components.\n   *\n   * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n   * @returns {void} ?\n   */\n\n\n  static load(localeObject) {\n    this.locale = extend(this.locale, localeObject, {}, true);\n  }\n  /**\n   * Returns current locale text for the property based on the culture name and control name.\n   *\n   * @param {string} prop - specifies the property for which localize text to be returned.\n   * @returns {string} ?\n   */\n\n\n  getConstant(prop) {\n    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n    if (!isNullOrUndefined(this.currentLocale[prop])) {\n      return this.currentLocale[prop];\n    } else {\n      return this.localeStrings[prop] || '';\n    }\n  }\n  /**\n   * Returns the control constant object for current object and the locale specified.\n   *\n   * @param {Object} curObject ?\n   * @param {string} locale ?\n   * @returns {Object} ?\n   */\n\n\n  intGetControlConstant(curObject, locale) {\n    if (curObject[locale]) {\n      return curObject[locale][this.controlName];\n    }\n\n    return null;\n  }\n\n}\n\nL10n.locale = {};\n\nvar __decorate$5 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\n\n\nclass SwipeSettings extends ChildProperty {}\n\n__decorate$5([Property(50)], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\n\nconst swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\n\nlet Touch = class Touch extends Base {\n  /* End-Properties */\n  constructor(element, options) {\n    super(options, element);\n    this.touchAction = true;\n    this.tapCount = 0;\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n    this.startEvent = evt => {\n      if (this.touchAction === true) {\n        const point = this.updateChangeTouches(evt);\n\n        if (evt.changedTouches !== undefined) {\n          this.touchAction = false;\n        }\n\n        this.isTouchMoved = false;\n        this.movedDirection = '';\n        this.startPoint = this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n        this.startEventData = point;\n        this.hScrollLocked = this.vScrollLocked = false;\n        this.tStampStart = Date.now();\n        this.timeOutTapHold = setTimeout(() => {\n          this.tapHoldEvent(evt);\n        }, this.tapHoldThreshold);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.moveEvent, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.endEvent, this);\n        EventHandler.add(this.element, Browser.touchCancelEvent, this.cancelEvent, this);\n      }\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.moveEvent = evt => {\n      const point = this.updateChangeTouches(evt);\n      this.movedPoint = point;\n      this.isTouchMoved = !(point.clientX === this.startPoint.clientX && point.clientY === this.startPoint.clientY);\n      let eScrollArgs = {};\n\n      if (this.isTouchMoved) {\n        clearTimeout(this.timeOutTapHold);\n        this.calcScrollPoints(evt);\n        const scrollArg = {\n          startEvents: this.startEventData,\n          originalEvent: evt,\n          startX: this.startPoint.clientX,\n          startY: this.startPoint.clientY,\n          distanceX: this.distanceX,\n          distanceY: this.distanceY,\n          scrollDirection: this.scrollDirection,\n          velocity: this.getVelocity(point)\n        };\n        eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n        this.trigger('scroll', eScrollArgs);\n        this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n      }\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.cancelEvent = evt => {\n      clearTimeout(this.timeOutTapHold);\n      clearTimeout(this.timeOutTap);\n      this.tapCount = 0;\n      this.swipeFn(evt);\n      EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.endEvent = evt => {\n      this.swipeFn(evt);\n\n      if (!this.isTouchMoved) {\n        if (typeof this.tap === 'function') {\n          this.trigger('tap', {\n            originalEvent: evt,\n            tapCount: ++this.tapCount\n          });\n          this.timeOutTap = setTimeout(() => {\n            this.tapCount = 0;\n          }, this.tapThreshold);\n        }\n      }\n\n      this.modeclear();\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.swipeFn = evt => {\n      clearTimeout(this.timeOutTapHold);\n      clearTimeout(this.timeOutTap);\n      const point = this.updateChangeTouches(evt);\n      let diffX = point.clientX - this.startPoint.clientX;\n      let diffY = point.clientY - this.startPoint.clientY;\n      diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n      diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n      this.isTouchMoved = diffX > 1 || diffY > 1;\n      this.endPoint = point;\n      this.calcPoints(evt);\n      const swipeArgs = {\n        originalEvent: evt,\n        startEvents: this.startEventData,\n        startX: this.startPoint.clientX,\n        startY: this.startPoint.clientY,\n        distanceX: this.distanceX,\n        distanceY: this.distanceY,\n        swipeDirection: this.movedDirection,\n        velocity: this.getVelocity(point)\n      };\n\n      if (this.isTouchMoved) {\n        let eSwipeArgs;\n        const tDistance = this.swipeSettings.swipeThresholdDistance; // eslint-disable-next-line\n\n        eSwipeArgs = extend(eSwipeArgs, this.defaultArgs, swipeArgs);\n        let canTrigger = false;\n        const ele = this.element;\n        const scrollBool = this.isScrollable(ele);\n        const moved = swipeRegex.test(this.movedDirection);\n\n        if (tDistance < this.distanceX && !moved || tDistance < this.distanceY && moved) {\n          if (!scrollBool) {\n            canTrigger = true;\n          } else {\n            canTrigger = this.checkSwipe(ele, moved);\n          }\n        }\n\n        if (canTrigger) {\n          this.trigger('swipe', eSwipeArgs);\n        }\n      }\n\n      this.modeclear();\n    };\n\n    this.modeclear = () => {\n      this.modeClear = setTimeout(() => {\n        this.touchAction = true;\n      }, typeof this.tap !== 'function' ? 0 : 20);\n      this.lastTapTime = new Date().getTime();\n      EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n      EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n      EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    };\n\n    this.bind();\n  } // triggers when property changed\n\n  /**\n   *\n   * @private\n   * @param {TouchModel} newProp ?\n   * @param {TouchModel} oldProp ?\n   * @returns {void} ?\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  bind() {\n    this.wireEvents();\n\n    if (Browser.isIE) {\n      this.element.classList.add('e-block-touch');\n    }\n  }\n  /**\n   * To destroy the touch instance.\n   *\n   * @returns {void}\n   */\n\n\n  destroy() {\n    this.unwireEvents();\n    super.destroy();\n  } // Need to changes the event binding once we updated the event handler.\n\n\n  wireEvents() {\n    EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n  }\n\n  unwireEvents() {\n    EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n  }\n  /**\n   * Returns module name as touch\n   *\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getModuleName() {\n    return 'touch';\n  }\n  /**\n   * Returns if the HTML element is Scrollable.\n   *\n   * @param {HTMLElement} element - HTML Element to check if Scrollable.\n   * @returns {boolean} ?\n   */\n\n\n  isScrollable(element) {\n    const eleStyle = getComputedStyle(element);\n    const style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n\n    if (/(auto|scroll)/.test(style)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   *\n   * @param {MouseEventArgs | TouchEventArgs} evt ?\n   * @returns {void} ?\n   */\n\n\n  tapHoldEvent(evt) {\n    this.tapCount = 0;\n    this.touchAction = true;\n    let eTapArgs;\n    EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent); // eslint-disable-next-line\n\n    eTapArgs = {\n      originalEvent: evt\n    };\n    this.trigger('tapHold', eTapArgs);\n    EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n  }\n\n  calcPoints(evt) {\n    const point = this.updateChangeTouches(evt);\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.startPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.startPoint.clientY));\n\n    if (this.distanceX > this.distanceY) {\n      this.movedDirection = point.clientX > this.startPoint.clientX ? 'Right' : 'Left';\n    } else {\n      this.movedDirection = point.clientY < this.startPoint.clientY ? 'Up' : 'Down';\n    }\n  }\n\n  calcScrollPoints(evt) {\n    const point = this.updateChangeTouches(evt);\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY));\n\n    if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n      this.scrollDirection = point.clientX > this.lastMovedPoint.clientX ? 'Right' : 'Left';\n      this.hScrollLocked = true;\n    } else {\n      this.scrollDirection = point.clientY < this.lastMovedPoint.clientY ? 'Up' : 'Down';\n      this.vScrollLocked = true;\n    }\n  }\n\n  getVelocity(pnt) {\n    const newX = pnt.clientX;\n    const newY = pnt.clientY;\n    const newT = Date.now();\n    const xDist = newX - this.startPoint.clientX;\n    const yDist = newY - this.startPoint.clientX;\n    const interval = newT - this.tStampStart;\n    return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n  } // eslint-disable-next-line\n\n\n  checkSwipe(ele, flag) {\n    const keys = ['scroll', 'offset'];\n    const temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n\n    if (ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]]) {\n      return true;\n    }\n\n    return ele[keys[0] + temp[1]] === 0 || ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]];\n  }\n\n  updateChangeTouches(evt) {\n    const point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;\n    return point;\n  }\n\n};\n\n__decorate$5([Event$1()], Touch.prototype, \"tap\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"tapHold\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"swipe\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"scroll\", void 0);\n\n__decorate$5([Property(350)], Touch.prototype, \"tapThreshold\", void 0);\n\n__decorate$5([Property(750)], Touch.prototype, \"tapHoldThreshold\", void 0);\n\n__decorate$5([Complex({}, SwipeSettings)], Touch.prototype, \"swipeSettings\", void 0);\n\nTouch = __decorate$5([NotifyPropertyChanges], Touch);\n/**\n * Template Engine\n */\n\nconst LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nconst QUOTES = new RegExp(/'|\"/g);\nconst IF_STMT = new RegExp('if ?\\\\(');\nconst ELSEIF_STMT = new RegExp('else if ?\\\\(');\nconst ELSE_STMT = new RegExp('else');\nconst FOR_STMT = new RegExp('for ?\\\\(');\nconst IF_OR_FOR = new RegExp('(/if|/for)');\nconst CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nconst NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nconst WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nconst DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nconst WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nlet exp = new RegExp('\\\\${([^}]*)}', 'g'); // let cachedTemplate: Object = {};\n\nconst ARR_OBJ = /^\\..*/gm;\nconst SINGLE_SLASH = /\\\\/gi;\nconst DOUBLE_SLASH = /\\\\\\\\/gi;\nconst WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nconst WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\n\nfunction compile$1(template, helper, ignorePrefix) {\n  const argName = 'data';\n  const evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n  const condtion = `var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-■\\\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\\\s='\"./]+)([\\\\w-./?=&\\\\\\\\#\"]+)((.)([\\\\w)(!-;/?-■\\\\s]+)['])/g);\n    if((str.match(valueRegEx)) && (str.match('svg') === null)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if (str.match(/(?:href='')/) === null) {\n        if((str.match(hrefRegex)) && (str.match('svg') === null)) {\n            var check = str.match(hrefRegex);\n            var str1 = str;\n            for (var i=0; i < check.length; i++) {\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\n                var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n                change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n                str1 = str1.replace(check1, change);\n            }\n            str = str.replace(str, str1);\n        }\n    }\n    `;\n  const fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n  const fn = new Function(argName, fnCode);\n  return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n  let varCOunt = 0;\n  /**\n   * Variable containing Local Keys\n   */\n\n  const localKeys = [];\n  const isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n  let singleSpace = '';\n\n  if (isClass) {\n    isClass.forEach(value => {\n      singleSpace = value.replace(/\\s\\s+/g, ' ');\n      str = str.replace(value, singleSpace);\n    });\n  }\n\n  return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, // eslint-disable-next-line\n  (match, cnt, offset, matchStr) => {\n    const SPECIAL_CHAR = /@|#|\\$/gm;\n    const matches = cnt.match(CALL_FUNCTION); // matches to detect any function calls\n\n    if (matches) {\n      const rlStr = matches[1];\n\n      if (ELSEIF_STMT.test(cnt)) {\n        //handling else-if condition\n        cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, str => {\n          str = str.trim();\n          return addNameSpace(str, !QUOTES.test(str) && localKeys.indexOf(str) === -1, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (IF_STMT.test(cnt)) {\n        //handling if condition\n        cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, strs => {\n          return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (FOR_STMT.test(cnt)) {\n        //handling for condition\n        const rlStr = matches[1].split(' of '); // replace for each into actual JavaScript\n        // eslint-disable-next-line\n\n        cnt = '\"; ' + cnt.replace(matches[1], mtc => {\n          localKeys.push(rlStr[0]);\n          localKeys.push(rlStr[0] + 'Index');\n          varCOunt = varCOunt + 1; // tslint:disable-next-line\n\n          return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n        }) + '{ \\n ' + rlStr[0] + '= ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '[i' + varCOunt + ']; \\n var ' + rlStr[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n      } else {\n        //helper function handling\n        const fnStr = cnt.split('('); // eslint-disable-next-line\n\n        let fNameSpace = helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global';\n        fNameSpace = /\\./.test(fnStr[0]) ? '' : fNameSpace;\n        const ftArray = matches[1].split(',');\n\n        if (matches[1].length !== 0 && !/data/.test(ftArray[0]) && !/window./.test(ftArray[0])) {\n          matches[1] = fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1];\n        }\n\n        const splRegexp = /@|\\$|#/gm;\n        const arrObj = /\\]\\./gm;\n\n        if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n          const splArrRegexp = /@|\\$|#|\\]\\./gm;\n\n          if (splArrRegexp.test(cnt)) {\n            // tslint:disable-next-line\n            cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, strs => {\n              return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n            })) + '+ \"';\n          }\n        } else {\n          cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), fNameSpace === 'global' ? false : true, nameSpace, localKeys, ignorePrefix)) + '+\"';\n        }\n      }\n    } else if (ELSE_STMT.test(cnt)) {\n      // handling else condition\n      cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"'); // eslint-disable-next-line\n    } else if (!!cnt.match(IF_OR_FOR)) {\n      // close condition\n      cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n    } else if (SPECIAL_CHAR.test(cnt)) {\n      // template string with double slash with special character\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n      }\n\n      cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n    } else {\n      // template string with double slash\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n        cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n      } else {\n        // evaluate normal expression\n        cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), localKeys.indexOf(cnt) === -1, nameSpace, localKeys, ignorePrefix) + '+\"';\n      }\n    }\n\n    return cnt;\n  });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix ? nameSpace + '.' + str : str;\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\n\n\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n  const arrObjReg = /^\\..*/gm;\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !arrObjReg.test(str) ? nameSpace + '.' + str : str;\n} // // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\n\n\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 ? nameSpace + '[\"' + str : str;\n} // eslint-disable-next-line\n\n\nfunction SlashReplace(tempStr) {\n  const double = '\\\\\\\\';\n\n  if (tempStr.match(DOUBLE_SLASH)) {\n    // eslint-disable-next-line\n    tempStr = tempStr;\n  } else {\n    tempStr = tempStr.replace(SINGLE_SLASH, double);\n  }\n\n  return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n  str = str.trim();\n  const windowFunc = /\\window\\./gm;\n\n  if (!windowFunc.test(str)) {\n    const quotes = /'|\"/gm;\n    const splRegexp = /@|\\$|#/gm;\n\n    if (splRegexp.test(str)) {\n      str = NameSpaceForspecialChar(str, keys.indexOf(str) === -1, nameSpaceNew, keys) + '\"]';\n    }\n\n    if (ARR_OBJ.test(str)) {\n      return NameSpaceArrObj(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys);\n    } else {\n      return addNameSpace(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys, ignorePrefix);\n    }\n  } else {\n    return str;\n  }\n}\n/**\n * Template Engine Bridge\n */\n\n\nconst HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nconst HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nconst blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\n\nfunction getRandomId() {\n  return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction compile$$1(templateString, helper, ignorePrefix) {\n  const compiler = engineObj.compile(templateString, helper, ignorePrefix); // eslint-disable-next-line\n\n  return (data, component, propName, templateId, isStringTemplate, index, element) => {\n    const result = compiler(data, component, propName, element);\n    const blazorTemplateId = 'BlazorTemplateId';\n\n    if (isBlazor() && !isStringTemplate) {\n      const randomId = getRandomId();\n      let blazorId = templateId + randomId;\n\n      if (!blazorTemplates[templateId]) {\n        blazorTemplates[templateId] = [];\n      }\n\n      if (!isNullOrUndefined(index)) {\n        const keys = Object.keys(blazorTemplates[templateId][index]);\n\n        for (const key of keys) {\n          if (key !== blazorTemplateId && data[key]) {\n            blazorTemplates[templateId][index][key] = data[key];\n          }\n\n          if (key === blazorTemplateId) {\n            blazorId = blazorTemplates[templateId][index][key];\n          }\n        }\n      } else {\n        data[blazorTemplateId] = blazorId;\n        blazorTemplates[templateId].push(data);\n      } // eslint-disable-next-line\n\n\n      return propName === 'rowTemplate' ? [createElement('tr', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })] : // eslint-disable-next-line\n      [createElement('div', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })];\n    }\n\n    if (typeof result === 'string') {\n      if (HAS_SVG.test(result)) {\n        const ele = createElement('svg', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      } else {\n        const ele = createElement(HAS_ROW.test(result) ? 'table' : 'div', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      }\n    } else {\n      return result;\n    }\n  };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\n\n\nfunction updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n  if (isBlazor()) {\n    const ejsIntrop = 'sfBlazor';\n    window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n\n    if (isEmpty !== false) {\n      blazorTemplates[templateId] = [];\n    }\n  }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\n\n\nfunction resetBlazorTemplate(templateId, templateName, index) {\n  const templateDiv = document.getElementById(templateId);\n\n  if (templateDiv) {\n    // eslint-disable-next-line\n    const innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n\n    for (let i = 0; i < innerTemplates.length; i++) {\n      let tempId = ' ';\n\n      if (!isNullOrUndefined(index)) {\n        tempId = innerTemplates[index].getAttribute('data-templateId');\n      } else {\n        tempId = innerTemplates[i].getAttribute('data-templateId');\n      }\n\n      const tempElement = document.getElementById(tempId);\n\n      if (tempElement) {\n        const length = tempElement.childNodes.length;\n\n        for (let j = 0; j < length; j++) {\n          if (!isNullOrUndefined(index)) {\n            innerTemplates[index].appendChild(tempElement.childNodes[0]);\n            i = innerTemplates.length;\n          } else {\n            innerTemplates[i].appendChild(tempElement.childNodes[0]);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\n\n\nfunction setTemplateEngine(classObj) {\n  engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\n\n\nfunction getTemplateEngine() {\n  return engineObj.compile;\n} //Default Engine Class\n\n\nclass Engine {\n  // eslint-disable-next-line\n  compile(templateString, helper = {}, ignorePrefix) {\n    return compile$1(templateString, helper);\n  }\n\n}\n\nconst engineObj = {\n  compile: new Engine().compile\n};\n/**\n * SanitizeHtmlHelper for sanitize the value.\n */\n\nconst removeTags = ['script', 'style', 'iframe[src]', 'link[href*=\"javascript:\"]', 'object[type=\"text/x-scriptlet\"]', 'object[data^=\"data:text/html;base64\"]', 'img[src^=\"data:text/html;base64\"]', '[src^=\"javascript:\"]', '[dynsrc^=\"javascript:\"]', '[lowsrc^=\"javascript:\"]', '[type^=\"application/x-shockwave-flash\"]'];\nconst removeAttrs = [{\n  attribute: 'href',\n  selector: '[href*=\"javascript:\"]'\n}, {\n  attribute: 'background',\n  selector: '[background^=\"javascript:\"]'\n}, {\n  attribute: 'style',\n  selector: '[style*=\"javascript:\"]'\n}, {\n  attribute: 'style',\n  selector: '[style*=\"expression(\"]'\n}, {\n  attribute: 'href',\n  selector: 'a[href^=\"data:text/html;base64\"]'\n}];\nconst jsEvents = ['onchange', 'onclick', 'onmouseover', 'onmouseout', 'onkeydown', 'onload', 'onerror', 'onblur', 'onfocus', 'onbeforeload', 'onbeforeunload', 'onkeyup', 'onsubmit', 'onafterprint', 'onbeforeonload', 'onbeforeprint', 'onblur', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'oncontextmenu', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onerror', 'onfocus', 'onformchange', 'onforminput', 'onhaschange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'onoine', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onreadystatechange', 'onredo', 'onresize', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'onundo', 'onunload', 'onvolumechange', 'onwaiting', 'onmouseenter', 'onmouseleave', 'onmousewheel', 'onstart', 'onpropertychange'];\n\nclass SanitizeHtmlHelper {\n  static beforeSanitize() {\n    return {\n      selectors: {\n        tags: removeTags,\n        attributes: removeAttrs\n      }\n    };\n  }\n\n  static sanitize(value) {\n    const item = this.beforeSanitize();\n    const output = this.serializeValue(item, value);\n    return output;\n  }\n\n  static serializeValue(item, value) {\n    this.removeAttrs = item.selectors.attributes;\n    this.removeTags = item.selectors.tags;\n    this.wrapElement = document.createElement('div');\n    this.wrapElement.innerHTML = value;\n    this.removeXssTags();\n    this.removeJsEvents();\n    this.removeXssAttrs();\n    const tempEleValue = this.wrapElement.innerHTML;\n    this.removeElement();\n    return tempEleValue;\n  }\n\n  static removeElement() {\n    // Removes an element's attibute to avoid html tag validation\n    const nodes = this.wrapElement.children;\n\n    for (let j = 0; j < nodes.length; j++) {\n      const attribute = nodes[j].attributes;\n\n      for (let i = 0; i < attribute.length; i++) {\n        this.wrapElement.children[j].removeAttribute(attribute[i].localName);\n      }\n    }\n  }\n\n  static removeXssTags() {\n    const elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));\n\n    if (elements.length > 0) {\n      elements.forEach(element => {\n        detach(element);\n      });\n    } else {\n      return;\n    }\n  }\n\n  static removeJsEvents() {\n    const elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');\n\n    if (elements.length > 0) {\n      elements.forEach(element => {\n        jsEvents.forEach(attr => {\n          if (element.hasAttribute(attr)) {\n            element.removeAttribute(attr);\n          }\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  static removeXssAttrs() {\n    // eslint-disable-next-line\n    this.removeAttrs.forEach((item, index) => {\n      const elements = this.wrapElement.querySelectorAll(item.selector);\n\n      if (elements.length > 0) {\n        elements.forEach(element => {\n          element.removeAttribute(item.attribute);\n        });\n      }\n    });\n  }\n\n}\n/**\n * Base modules\n */\n\n\nexport { blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event$1 as Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile$$1 as compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper };","map":{"version":3,"names":["instances","uid","isBlazorPlatform","disableBlazorMode","createInstance","classFunction","params","arrayParam","unshift","undefined","Function","prototype","bind","apply","setImmediate","handler","unbind","num","Uint16Array","intCrypto","window","msCrypto","crypto","getRandomValues","secret","combineArray","messageHandler","event","source","data","length","addEventListener","postMessage","removeEventListener","getValue","nameSpace","obj","value","splits","replace","split","i","isUndefined","setValue","keys","start","fromObj","key","isNullOrUndefined","deleteObject","isObject","objCon","constructor","getEnumValue","enumObject","enumValue","merge","destination","temrObj","tempProp","Object","deepmerge","indexOf","Array","isArray","extend","copied","first","second","deep","result","arguments","obj1","forEach","src","copy","clone","isArrayChanged","blazorEventExtend","isBlazor","Event","hasOwnProperty","getUniqueID","definedName","debounce","eventFunction","delay","out","args","later","clearTimeout","setTimeout","queryParams","array","push","encodeURIComponent","join","isObjectArray","parser","toString","call","compareElementParent","child","parent","node","document","parentNode","throwError","message","Error","e","stack","print","element","printWindow","div","createElement","links","slice","getElementsByTagName","querySelectorAll","blinks","l","len","reference","open","appendChild","cloneNode","outerHTML","write","innerHTML","close","focus","interval","setInterval","ready","clearInterval","formatUnit","match","enableBlazorMode","getElement","xPath","Node","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","getInstance","component","elem","querySelector","inst","addInstance","instance","uniqueID","ret","defaultNumberingSystem","defaultNumberSymbols","latnNumberSystem","ParserBase","getMainObject","cName","getNumberingSystem","numberingSystems","reverseObject","prop","propKeys","res","getSymbolRegex","props","regexStr","map","str","RegExp","getSymbolMatch","matchKeys","constructRegex","val","convertValueParts","regex","getDefaultNumberingSystem","nSystem","getCurrentNumericOptions","curObj","numberSystem","needSymbols","blazorMode","cur","digits","numericPair","numberParseRegex","numericRegex","symbolNumberSystem","symbolMatch","getNumberMapper","isNumber","mapper","numberSymbols","timeSeparator","nPair","nRegex","blazorCurrencyData","getBlazorCurrencySymbol","currencyCode","HijriParser","dateCorrection","getHijriDate","gDate","day","getDate","month","getMonth","year","getFullYear","tMonth","tYear","yPrefix","Math","floor","julilanOffset","julianNumber","b","c","d","tempMonth","modifiedJulianDate","iyear","z","cyc","j","iy","im","tempDay","iln","ii","hYear","hmonth","hDate","date","toGregorian","id","mcjdn","julianDate","a","gDay","gMonth","gYear","Date","abbreviateRegexGlobal","standalone","weekdayKey","timeSetter","m","h","H","s","f","datePartMatcher","DateFormat","dateFormat","culture","option","cldr","dependable","IntlBase","getDependables","calendar","numObject","dateObject","formatOptions","isIslamic","islamicRegex","test","isServerRendered","compareBlazorDateFormats","resPattern","format","getResultantPattern","skeleton","type","dateSeperator","getDateSeparator","ConvertDateToWeekFormat","pattern","numMapper","parserObject","patternMatch","char","weekday","monthIndex","days","designator","eText","era","timeZone","isNaN","intDateFormatter","options","matches","dateParseRegex","dObject","getCurrentDateValue","curval","curvalstr","processNumber","curstr","getDay","substring","curlength","substr","desig","getHours","dec","retu","timezone","getTimezoneOffset","hourFormat","gmtZeroFormat","getTimeZoneValue","gmtFormat","getWeekOfYear","checkTwodigitNumber","latnParseRegex","tVal","splt","curPattern","no","abs","ishour","errorText","percentSign","minusSign","mapper$1","NumberFormat","numberFormatter","fOptions","cOptions","dOptions","symbolPattern","numericObject","numberMapper","currencySymbol","getCurrencySymbol","currency","defaultCurrencyCode","altSymbol","percentSymbol","minusSymbol","symbols","formatRegex","customFormat","getProperNumericSkeleton","isCurrency","isPercent","getSymbolPattern","isAccount","groupOne","checkValueRange","maximumSignificantDigits","minimumSignificantDigits","maximumFractionDigits","minimumFractionDigits","fractionDigits","useGrouping","defaultCurrency","nData","getFormatData","pData","groupSeparator","groupData","getGroupingDetails","replaceBlazorCurrency","minFrac","minimumFraction","mval","maximumFraction","mfrac","lfrac","isFinite","intNumberFormatter","negativeDataRegex","p","lastIndexOf","temp","primary","secondary","val1","val2","checkbothExist","isFraction","decide","dint","str1","str2","checkRange","text","range","curData","zeroData","fValue","processSignificantDigits","processFraction","minimumIntegerDigits","processMinimumIntegers","toExponential","groupNumbers","nlead","nend","min","max","tn","toPrecision","level1","sep","decimalSymbol","level2","flag","prefix","toFixed","lead","standalone$1","latnRegex","timeSetter$1","minute","hour","milliseconds","DateParser","dateParser","numOptions","parseOptions","regexString","hourOnly","evalposition","gmtCorrection","zCorrectTemp","isgmtTraversed","nRegx","numbers","canUpdate","charKey","optional","weekData","weekObject","monthData","hour12","opt","periodValur","tval","tzone","hpattern","parseTimeZoneRegx","iString","pos","parserRegex","parsedDateParts","internalDateParse","dobj","tDate","ystrig","is2DigitYear","parseInt","getDateObject","setMilliseconds","tKeys","y","century","setFullYear","tValue","setDate","pDate","lDate","lastDay","setHours","tzValue","setMinutes","getMinutes","retOptions","curObject","matchString","internalNumberParser","tmatch","getZoneValue","toUpperCase","toLowerCase","tZone","cRegex","splitStr","ival","parseRegex","groupRegex","NumberParser","numberParser","custom","symbolRegex","infinity","symbolpattern","getParsedNumber","isNegative","tempValue","end","Infinity","NaN","exponent","parseFloat","convertMaxFracDigits","decimalSplitValue","Observer","context","ranArray","boundedEvents","on","property","cntxt","notExist","isHandlerPresent","off","splice","indexLocation","notify","argument","successHandler","errorHandler","name","blazor","blazorCallback","objs","index","isTrigger","promise","then","isJson","JSON","parse","dateReviver","catch","dPattern","destroy","onIntlChange","rightToLeft","cldrData","defaultCulture","Internationalization","cultureName","getDateFormat","getCulture","getNumberFormat","getDateParser","getNumberParser","formatNumber","formatDate","parseDate","parseNumber","getDatePattern","isExcelFormat","getActualDateTimeFormat","getNumberPattern","isExcel","getActualNumberFormat","getFirstDayOfWeek","getWeekData","setCulture","setCurrencyCode","loadCldr","enableRtl","status","getNumericObject","locale","numSystem","symbPattern","getNumberDependable","getDefaultDateObject","mode","blazorCultureFormats","customRegex","fractionRegex","patternRegex","dateConverterMapper","defaultFirstDay","firstDayMapper","currencyFormatRegex","curWithoutNumberRegex","typeMapper","basicPatterns","defaultObject","blazorDefaultObject","patternMatcher","C","P","N","A","E","blazorCulture","iType","tPattern","calendartype","dateString","convertMapper","tempString","curFormatMapper","needFraction","cSymbol","fractionOnly","changeCurrencySymbol","groupPattern","fraction","fmatch","sym","symbol","getCurrency","formatSplit","customNumberFormat","integerPart","spaceCapture","spaceGrouping","fractionPart","isCurrencyPercent","parts","actual","part","loc","dateObj","actualPattern","tLength","timeZonePattern","processSymbol","numrericObject","curMatch","curCode","hasNegativePattern","defaultMinimum","fractionDigitsPattern","minimumIntegerPattern","groupingPattern","cPattern","minDigits","maxDigits","diff","integer","x","hash","firstDay","iCulture","aCurrency","rCurrency","iCurrency","newYear","weeknum","daynum","getTime","nYear","nday","headerRegex","defaultType","Ajax","async","contentType","emitError","url","send","eventArgs","cancel","httpRequest","Promise","resolve","reject","XMLHttpRequest","onreadystatechange","stateChange","onLoad","onload","onProgress","onprogress","onAbort","onabort","onError","onerror","onUploadProgress","upload","setRequestHeader","beforeSend","onSuccess","failureHandler","reason","onFailure","responseText","dataType","error","readyState","statusText","getResponseHeader","responseHeaders","header","headers","exec","getAllResponseHeaders","REGX_MOBILE","REGX_IE","REGX_IE11","REGX_IOS","REGX_IOS7","REGX_ANDROID","REGX_WINDOWS","REGX_VERSION","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","browserDetails","Browser","extractBrowserDetail","browserInfo","clientInfo","userAgent","version","language","navigator","getEvent","events","isPointer","isTouch","isDevice","move","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","getTouchCancelEvent","regX","platform","maxTouchPoints","uA","info","isIE","isMSPointer","isIos","isIos7","isAndroid","isWebView","cordova","PhoneGap","phonegap","forge","isWindows","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent","EventHandler","addOrGetEventData","__eventList","add","eventName","listener","bindTo","intDebounce","eventData","debounceListener","passive","remove","some","clearEvents","copyData","shift","trigger","eventProp","SVG_REG","tagName","properties","createElementNS","className","styles","setAttribute","attrs","attributes","addClass","elements","classes","classList","getClassList","ele","curClass","contains","removeClass","canRemove","classArr","isVisible","style","visibility","offsetWidth","prepend","fromElements","toElement","isEval","docFrag","createDocumentFragment","insertBefore","firstElementChild","executeScript","append","eleArray","script","head","detach","removeChild","iKey","select","selector","needsVDOM","querySelectId","selectAll","nodeList","charRegex","idList","list","splitId","setId","closest","el","nodeType","siblings","childNodes","curNode","ELEMENT_NODE","getAttributeOrDefault","attrVal","isObj","getAttribute","setStyleAttribute","addClasses","removeClasses","msMatchesSelector","webkitMatchesSelector","includeInnerHTML","containsClass","isColEName","Base","isRendered","isComplexArraySetter","allowServerDataBinding","isProtectedOnChange","changedProperties","oldProperties","bulkChanges","refreshing","ignoreCollectionWatch","finalUpdate","childChangedProperties","modelObserver","setProperties","isDestroyed","muteOnChange","prevDetection","dataBind","serverDataBind","callChildDataBind","clearChanges","getOwnPropertyNames","newChanges","oldChanges","onPropertyChanged","sfBlazor","updateModel","saveChanges","newValue","oldValue","moduleClass","getModuleName","ej2_instances","filter","getComponent","comp","getElementById","compName","removeChildInstance","childEle","getElementsByClassName","compInstance","getObject","curKey","defaultValue","getObjectArray","isSetter","isFactory","curType","propertyGetter","propertySetter","oldVal","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","defCollection","ignore","controlParent","extendFunc","descriptor","complexArrayDefinedCallback","configurable","defineProperty","complexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","keyString","propName","getParentKey","model","getArrayModel","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event$1","eventDescriptor","finalContext","getParentContext","NotifyPropertyChanges","classConstructor","propertyType","propList","complexProps","colProps","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","builderObject","propCollections","isPropertyArray","rex","childType","CreateBuilder","builderFunction","instanceFunction","create","curText","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","Animation_1","Animation","easing","ease","linear","easeIn","easeOut","easeInOut","elasticInOut","elasticIn","elasticOut","animate","getModel","delayAnimation","stop","animation","removeAttribute","animationId","frameId","cancelAnimationFrame","applyAnimation","timeStamp","step","timerId","prevTimeStamp","duration","startAnimation","begin","avg","timingFunction","progress","requestAnimationFrame","fail","newProp","oldProp","rippleEffect","rippleOptions","done","rippleModel","getRippleModel","rippleFlag","isRippleEnabled","rippleHandler","rippleUpHandler","rippleLeaveHandler","isCenterRipple","offset","getBoundingClientRect","offsetX","pageX","body","scrollLeft","offsetY","pageY","scrollTop","documentElement","left","right","top","bottom","radius","sqrt","diameter","rippleElement","getComputedStyle","getPropertyValue","transform","removeRipple","rippleElements","opacity","enableRipple","isRipple","MODULE_SUFFIX","ModuleLoader","loadedModules","inject","requiredModules","moduleList","reqLength","clean","clearUnusedModule","modl","module","modName","member","isModuleLoaded","moduleObject","memberName","getMemberName","isProperty","loadedModule","modules","usedModules","arg","removableModule","mod","ChildProperty","parentObj","isParentArray","updateChange","updateTimeOut","changeTime","clearUpdate","curIndex","restrictServerDataBind","isSaveChanges","parentKey","complexKeys","isFinal","actionProperty","valueLength","__decorate$1","componentCount","lastPageID","lastHistoryLen","versionBasedStatePersistence","enableVersionBasedPersistence","Component","randomId","isStringTemplate","needsID","isReactHybrid","moduleLoader","localObserver","detectFunction","appendTo","enablePersistence","setPersistData","refresh","preRender","injectModules","render","accessMount","mount","getRootElement","actualElement","getLocalData","eleId","localStorage","getItem","ej2StatePersistenceVersion","mergePersistData","renderComplete","wrapperElement","getInjectedModules","injectedModules","Inject","isVDOM","triggerStateChange","setState","currentContext","calls","setItem","getPersistData","appendReactElement","container","renderReactTemplates","clearTemplate","templateName","isHistoryChanged","pageID","location","href","history","charCodeAt","addOnPersist","persistObj","objValue","getActualProperties","stringify","ignoreOnPersist","iterateJsonProperties","ignoreList","newObj","newList","__decorate$2","Draggable_1","defaultPosition","isDraggedObject","isDragged","Position","Draggable","dragLimit","getDefaultPosition","borderWidth","padding","diffX","prevLeft","prevTop","dragProcessStarted","eleTop","tapHoldTimer","externalInitialize","diffY","parentScrollX","parentScrollY","droppables","toggleEvents","scope","isUnWire","handle","enableTapHold","mobileInitialize","initialize","evt","currentTarget","removeTapholdTimer","tapHoldThreshold","getScrollableParent","axis","scroll","client","tempScrollHeight","scrollHeight","tempScrollWidth","scrollWidth","getScrollableValues","isModalDialog","verticalScrollParent","horizontalScrollParent","curTarget","currentStateTarget","isDragStarted","abort","abortSelectors","preventDefault","changedTouches","intCoord","getCoordinates","initialPosition","clientX","clientY","relativeXPosition","relativeYPosition","intDragStart","intDestroy","isPreventSelect","isChangeTouch","intCordinate","styleProp","margin","marginLeft","marginTop","marginRight","marginBottom","dragTarget","intClosest","isReplaceDragEle","currentStateCheck","calculateParentPosition","position","getMousePosition","isDragScroll","distance","getHelperElement","dragTargetElement","helperElement","parentClientRect","offsetParent","dragStart","getProperTargetElement","bindEvents","bindDragEvents","dragElement","dragArea","setDragArea","enableTailMode","enableScrollHandler","posValue","getProcessedPositionValue","dragElePosition","getDragPosition","intDrag","intDragStop","setGlobalDroppables","elementInViewport","offsetTop","offsetLeft","width","height","offsetHeight","pageYOffset","pageXOffset","innerHeight","innerWidth","queryPositionInfo","rect","docHeight","getDocumentWidthHeight","docWidth","drag","eleObj","checkTargetElement","hoverObject","triggerOutFunction","dragData","intOver","helper","tLeft","tTop","pagex","pagey","dLeft","dTop","skipDistanceCheck","helperWidth","helperHeight","iTop","iLeft","draEleTop","draEleLeft","tempDraEleTop","dragValue","enableAutoScroll","scrollIntoView","intOut","docBody","docEle","returnValue","dragStop","dragStopCalled","intDrop","change","eleWidthBound","eleHeightBound","elementArea","tborder","tpadding","lowerKey","prevStyle","pointerEvents","elementFromPoint","oldEle","isdragscroll","dragEle","srcElement","isOffsetParent","cursorAt","sender","reset","draggable","draggedElement","dropIns","getDropInstance","parentElement","drop","eleInst","__decorate$3","Droppable","mouseOver","wireEvents","accept","isDrag","area","isDropArea","canDrop","droppedElement","display","coord","__decorate$4","KeyboardEvents_1","keyCode","KeyboardEvents","keyPressHandler","isAltKey","altKey","isCtrlKey","ctrlKey","isShiftKey","shiftKey","curkeyCode","which","keyConfigs","configCollection","rconfig","rKeyObj","getKeyConfigData","trim","keyAction","unwireEvents","config","configCache","keyData","Number","getKeyCode","keyVal","L10n","controlName","localeStrings","setLocale","intLocale","intGetControlConstant","currentLocale","load","localeObject","getConstant","__decorate$5","SwipeSettings","swipeRegex","Touch","touchAction","tapCount","startEvent","point","updateChangeTouches","isTouchMoved","movedDirection","startPoint","lastMovedPoint","startEventData","hScrollLocked","vScrollLocked","tStampStart","now","timeOutTapHold","tapHoldEvent","moveEvent","endEvent","cancelEvent","movedPoint","eScrollArgs","calcScrollPoints","scrollArg","startEvents","originalEvent","startX","startY","distanceX","distanceY","scrollDirection","velocity","getVelocity","timeOutTap","swipeFn","tap","tapThreshold","modeclear","endPoint","calcPoints","swipeArgs","swipeDirection","eSwipeArgs","tDistance","swipeSettings","swipeThresholdDistance","defaultArgs","canTrigger","scrollBool","isScrollable","moved","checkSwipe","modeClear","lastTapTime","eleStyle","overflow","overflowX","overflowY","eTapArgs","pnt","newX","newY","newT","xDist","yDist","LINES","QUOTES","IF_STMT","ELSEIF_STMT","ELSE_STMT","FOR_STMT","IF_OR_FOR","CALL_FUNCTION","NOT_NUMBER","WORD","DBL_QUOTED_STR","WORDIF","exp","ARR_OBJ","SINGLE_SLASH","DOUBLE_SLASH","WORDFUNC","WINDOWFUNC","compile$1","template","ignorePrefix","argName","evalExpResult","evalExp","condtion","fnCode","fn","varCOunt","localKeys","isClass","singleSpace","cnt","matchStr","SPECIAL_CHAR","rlStr","addNameSpace","strs","HandleSpecialCharArrObj","mtc","fnStr","fNameSpace","ftArray","splRegexp","arrObj","splArrRegexp","SlashReplace","NameSpaceForspecialChar","addNS","NameSpaceArrObj","arrObjReg","tempStr","double","nameSpaceNew","windowFunc","quotes","HAS_ROW","HAS_SVG","blazorTemplates","getRandomId","random","compile$$1","templateString","compiler","engineObj","compile","templateId","blazorTemplateId","blazorId","updateBlazorTemplate","isEmpty","callBack","ejsIntrop","updateTemplate","resetBlazorTemplate","templateDiv","innerTemplates","tempId","tempElement","setTemplateEngine","classObj","getTemplateEngine","Engine","removeTags","removeAttrs","attribute","jsEvents","SanitizeHtmlHelper","beforeSanitize","selectors","tags","sanitize","item","output","serializeValue","wrapElement","removeXssTags","removeJsEvents","removeXssAttrs","tempEleValue","removeElement","nodes","children","localName","attr","hasAttribute"],"sources":["/home/unutu/go/src/github.com/thteam47/admin-portal/node_modules/@syncfusion/ej2-base/dist/es6/ej2-base.es2015.js"],"sourcesContent":["const instances = 'ej2_instances';\nlet uid = 0;\nlet isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nfunction disableBlazorMode() {\n    isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction createInstance(classFunction, params) {\n    const arrayParam = params;\n    arrayParam.unshift(undefined);\n    return new (Function.prototype.bind.apply(classFunction, arrayParam));\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\nfunction setImmediate(handler) {\n    let unbind;\n    // eslint-disable-next-line\n    const num = new Uint16Array(5);\n    const intCrypto = window.msCrypto || window.crypto;\n    intCrypto.getRandomValues(num);\n    let secret = 'ej2' + combineArray(num);\n    // eslint-disable-next-line\n    let messageHandler = (event) => {\n        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n            handler();\n            unbind();\n        }\n    };\n    window.addEventListener('message', messageHandler, false);\n    window.postMessage(secret, '*');\n    return unbind = () => {\n        window.removeEventListener('message', messageHandler);\n        handler = messageHandler = secret = undefined;\n    };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getValue(nameSpace, obj) {\n    // eslint-disable-next-line\n    let value = obj;\n    const splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    for (let i = 0; i < splits.length && !isUndefined(value); i++) {\n        value = value[splits[i]];\n    }\n    return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction setValue(nameSpace, value, obj) {\n    const keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    // eslint-disable-next-line\n    const start = obj || {};\n    // eslint-disable-next-line\n    let fromObj = start;\n    let i;\n    const length = keys.length;\n    let key;\n    for (i = 0; i < length; i++) {\n        key = keys[i];\n        if (i + 1 === length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (isNullOrUndefined(fromObj[key])) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\nfunction deleteObject(obj, key) {\n    delete obj[key];\n}\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\nfunction isObject(obj) {\n    const objCon = {};\n    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getEnumValue(enumObject, enumValue) {\n    // eslint-disable-next-line\n    return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\nfunction merge(source, destination) {\n    if (!isNullOrUndefined(destination)) {\n        const temrObj = source;\n        const tempProp = destination;\n        const keys = Object.keys(destination);\n        const deepmerge = 'deepMerge';\n        for (const key of keys) {\n            if (!isNullOrUndefined(temrObj[deepmerge]) && (temrObj[deepmerge].indexOf(key) !== -1) &&\n                (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\n                extend(temrObj[key], temrObj[key], tempProp[key], true);\n            }\n            else {\n                temrObj[key] = tempProp[key];\n            }\n        }\n    }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\nfunction extend(copied, first, second, deep) {\n    const result = copied && typeof copied === 'object' ? copied : {};\n    let length = arguments.length;\n    if (deep) {\n        length = length - 1;\n    }\n    for (let i = 1; i < length; i++) {\n        // eslint-disable-next-line\n        if (!arguments[i]) {\n            continue;\n        }\n        // eslint-disable-next-line\n        let obj1 = arguments[i];\n        Object.keys(obj1).forEach((key) => {\n            const src = result[key];\n            const copy = obj1[key];\n            let clone;\n            const isArrayChanged = Array.isArray(copy) && Array.isArray(src) && (copy.length !== src.length);\n            // eslint-disable-next-line\n            const blazorEventExtend = isBlazor() ? (!(src instanceof Event) && !isArrayChanged) : true;\n            if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n                if (isObject(copy)) {\n                    clone = src ? src : {};\n                    // eslint-disable-next-line\n                    if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n                        extend(clone, {}, copy, deep);\n                    }\n                    else {\n                        result[key] = extend(clone, {}, copy, deep);\n                    }\n                }\n                else {\n                    /* istanbul ignore next */\n                    clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n                    result[key] = extend([], clone, copy, deep);\n                }\n            }\n            else {\n                result[key] = copy;\n            }\n        });\n    }\n    return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\nfunction isNullOrUndefined(value) {\n    return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\nfunction isUndefined(value) {\n    return ('undefined' === typeof value);\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\nfunction getUniqueID(definedName) {\n    return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\nfunction debounce(eventFunction, delay) {\n    // eslint-disable-next-line\n    let out;\n    return function () {\n        // eslint-disable-next-line\n        const args = arguments;\n        const later = () => {\n            out = null;\n            return eventFunction.apply(this, args);\n        };\n        clearTimeout(out);\n        out = setTimeout(later, delay);\n    };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\nfunction queryParams(data) {\n    const array = [];\n    const keys = Object.keys(data);\n    for (const key of keys) {\n        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n    }\n    return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\nfunction isObjectArray(value) {\n    const parser = Object.prototype.toString;\n    if (parser.call(value) === '[object Array]') {\n        if (parser.call(value[0]) === '[object Object]') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\nfunction compareElementParent(child, parent) {\n    const node = child;\n    if (node === parent) {\n        return true;\n    }\n    else if (node === document || !node) {\n        return false;\n    }\n    else {\n        return compareElementParent(node.parentNode, parent);\n    }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\nfunction throwError(message) {\n    try {\n        throw new Error(message);\n    }\n    catch (e) {\n        // eslint-disable-next-line\n        throw e.message + '\\n' + e.stack;\n    }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\nfunction print(element, printWindow) {\n    const div = document.createElement('div');\n    const links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n    const blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\n    if (blinks.length) {\n        for (let l = 0, len = blinks.length; l < len; l++) {\n            links.push(blinks[l]);\n        }\n    }\n    let reference = '';\n    if (isNullOrUndefined(printWindow)) {\n        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n    }\n    div.appendChild(element.cloneNode(true));\n    for (let i = 0, len = links.length; i < len; i++) {\n        reference += links[i].outerHTML;\n    }\n    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +\n        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n    printWindow.document.close();\n    printWindow.focus();\n    // eslint-disable-next-line\n    const interval = setInterval(() => {\n        if (printWindow.ready) {\n            printWindow.print();\n            printWindow.close();\n            clearInterval(interval);\n        }\n    }, 500);\n    return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\nfunction formatUnit(value) {\n    const result = value + '';\n    if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\n        return result;\n    }\n    return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nfunction enableBlazorMode() {\n    isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\nfunction isBlazor() {\n    return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\nfunction getElement(element) {\n    const xPath = 'xPath';\n    if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\n        return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n    }\n    return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getInstance(element, component) {\n    // eslint-disable-next-line\n    let elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        for (const inst of elem[instances]) {\n            if (inst instanceof component) {\n                return inst;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\nfunction addInstance(element, instance) {\n    // eslint-disable-next-line\n    let elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        elem[instances].push(instance);\n    }\n    else {\n        elem[instances] = [instance];\n    }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction uniqueID() {\n    if ((typeof window) === 'undefined') {\n        return;\n    }\n    // eslint-disable-next-line\n    let num = new Uint16Array(5);\n    const intCrypto = window.msCrypto || window.crypto;\n    return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\nfunction combineArray(num) {\n    let ret = '';\n    for (let i = 0; i < 5; i++) {\n        ret += (i ? ',' : '') + num[i];\n    }\n    return ret;\n}\n\n/**\n * Parser\n */\nconst defaultNumberingSystem = {\n    'latn': {\n        '_digits': '0123456789',\n        '_type': 'numeric'\n    }\n};\nconst defaultNumberSymbols = {\n    'decimal': '.',\n    'group': ',',\n    'percentSign': '%',\n    'plusSign': '+',\n    'minusSign': '-',\n    'infinity': '∞',\n    'nan': 'NaN',\n    'exponential': 'E'\n};\nconst latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\nclass ParserBase {\n    /**\n     * Returns the cldr object for the culture specifies\n     *\n     * @param {Object} obj - Specifies the object from which culture object to be acquired.\n     * @param {string} cName - Specifies the culture name.\n     * @returns {Object} ?\n     */\n    static getMainObject(obj, cName) {\n        const value = isBlazor() ? cName : 'main.' + cName;\n        return getValue(value, obj);\n    }\n    /**\n     * Returns the numbering system object from given cldr data.\n     *\n     * @param {Object} obj - Specifies the object from which number system is acquired.\n     * @returns {Object} ?\n     */\n    static getNumberingSystem(obj) {\n        return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n    }\n    /**\n     * Returns the reverse of given object keys or keys specified.\n     *\n     * @param {Object} prop - Specifies the object to be reversed.\n     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n     * @returns {Object} ?\n     */\n    static reverseObject(prop, keys) {\n        const propKeys = keys || Object.keys(prop);\n        const res = {};\n        for (const key of propKeys) {\n            // eslint-disable-next-line\n            if (!res.hasOwnProperty(prop[key])) {\n                // eslint-disable-next-line\n                res[prop[key]] = key;\n            }\n        }\n        return res;\n    }\n    /**\n     * Returns the symbol regex by skipping the escape sequence.\n     *\n     * @param {string[]} props - Specifies the array values to be skipped.\n     * @returns {RegExp} ?\n     */\n    static getSymbolRegex(props) {\n        const regexStr = props.map((str) => {\n            return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n        }).join('|');\n        return new RegExp(regexStr, 'g');\n    }\n    /**\n     *\n     * @param {Object} prop ?\n     * @returns {Object} ?\n     */\n    static getSymbolMatch(prop) {\n        const matchKeys = Object.keys(defaultNumberSymbols);\n        const ret = {};\n        for (const key of matchKeys) {\n            // eslint-disable-next-line\n            ret[prop[key]] = defaultNumberSymbols[key];\n        }\n        return ret;\n    }\n    /**\n     * Returns regex string for provided value\n     *\n     * @param {string} val ?\n     * @returns {string} ?\n     */\n    static constructRegex(val) {\n        const len = val.length;\n        let ret = '';\n        for (let i = 0; i < len; i++) {\n            if (i !== len - 1) {\n                ret += val[i] + '|';\n            }\n            else {\n                ret += val[i];\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {string} value - Specifies the  values to be replaced.\n     * @param {RegExp} regex - Specifies the  regex to search.\n     * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n     * @returns {string} ?\n     */\n    static convertValueParts(value, regex, obj) {\n        return value.replace(regex, (str) => {\n            // eslint-disable-next-line\n            return obj[str];\n        });\n    }\n    /**\n     * Returns default numbering system object for formatting from cldr data\n     *\n     * @param {Object} obj ?\n     * @returns {NumericObject} ?\n     */\n    static getDefaultNumberingSystem(obj) {\n        const ret = {};\n        ret.obj = getValue('numbers', obj);\n        ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n        return ret;\n    }\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} needSymbols ?\n     * @param {boolean} blazorMode ?\n     * @returns {Object} ?\n     */\n    static getCurrentNumericOptions(curObj, numberSystem, needSymbols, blazorMode) {\n        const ret = {};\n        const cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem) || blazorMode) {\n            const digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n                if (needSymbols) {\n                    ret.numericRegex = digits[0] + '-' + digits[9];\n                    ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n                    ret.numberSystem = cur.nSystem;\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns number mapper object for the provided cldr data\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} isNumber ?\n     * @returns {NumberMapper} ?\n     */\n    // eslint-disable-next-line\n    static getNumberMapper(curObj, numberSystem, isNumber) {\n        const ret = { mapper: {} };\n        const cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem)) {\n            ret.numberSystem = cur.nSystem;\n            ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n            ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n            const digits = getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                for (const i of latnNumberSystem) {\n                    // eslint-disable-next-line\n                    ret.mapper[i] = digits[i];\n                }\n            }\n        }\n        return ret;\n    }\n}\nParserBase.nPair = 'numericPair';\nParserBase.nRegex = 'numericRegex';\nParserBase.numberingSystems = defaultNumberingSystem;\n/**\n * @private\n */\nconst blazorCurrencyData = {\n    'DJF': 'Fdj',\n    'ERN': 'Nfk',\n    'ETB': 'Br',\n    'NAD': '$',\n    'ZAR': 'R',\n    'XAF': 'FCFA',\n    'GHS': 'GH₵',\n    'XDR': 'XDR',\n    'AED': 'د.إ.‏',\n    'BHD': 'د.ب.‏',\n    'DZD': 'د.ج.‏',\n    'EGP': 'ج.م.‏',\n    'ILS': '₪',\n    'IQD': 'د.ع.‏',\n    'JOD': 'د.ا.‏',\n    'KMF': 'CF',\n    'KWD': 'د.ك.‏',\n    'LBP': 'ل.ل.‏',\n    'LYD': 'د.ل.‏',\n    'MAD': 'د.م.‏',\n    'MRU': 'أ.م.',\n    'OMR': 'ر.ع.‏',\n    'QAR': 'ر.ق.‏',\n    'SAR': 'ر.س.‏',\n    'SDG': 'ج.س.',\n    'SOS': 'S',\n    'SSP': '£',\n    'SYP': 'ل.س.‏',\n    'TND': 'د.ت.‏',\n    'YER': 'ر.ي.‏',\n    'CLP': '$',\n    'INR': '₹',\n    'TZS': 'TSh',\n    'EUR': '€',\n    'AZN': '₼',\n    'RUB': '₽',\n    'BYN': 'Br',\n    'ZMW': 'K',\n    'BGN': 'лв.',\n    'NGN': '₦',\n    'XOF': 'CFA',\n    'BDT': '৳',\n    'CNY': '¥',\n    'BAM': 'КМ',\n    'UGX': 'USh',\n    'USD': '$',\n    'CZK': 'Kč',\n    'GBP': '£',\n    'DKK': 'kr.',\n    'KES': 'Ksh',\n    'CHF': 'CHF',\n    'MVR': 'ރ.',\n    'BTN': 'Nu.',\n    'XCD': 'EC$',\n    'AUD': '$',\n    'BBD': '$',\n    'BIF': 'FBu',\n    'BMD': '$',\n    'BSD': '$',\n    'BWP': 'P',\n    'BZD': '$',\n    'CAD': '$',\n    'NZD': '$',\n    'FJD': '$',\n    'FKP': '£',\n    'GIP': '£',\n    'GMD': 'D',\n    'GYD': '$',\n    'HKD': '$',\n    'IDR': 'Rp',\n    'JMD': '$',\n    'KYD': '$',\n    'LRD': '$',\n    'MGA': 'Ar',\n    'MOP': 'MOP$',\n    'MUR': 'Rs',\n    'MWK': 'MK',\n    'MYR': 'RM',\n    'PGK': 'K',\n    'PHP': '₱',\n    'PKR': 'Rs',\n    'RWF': 'RF',\n    'SBD': '$',\n    'SCR': 'SR',\n    'SEK': 'kr',\n    'SGD': '$',\n    'SHP': '£',\n    'SLL': 'Le',\n    'ANG': 'NAf.',\n    'SZL': 'E',\n    'TOP': 'T$',\n    'TTD': '$',\n    'VUV': 'VT',\n    'WST': 'WS$',\n    'ARS': '$',\n    'BOB': 'Bs',\n    'BRL': 'R$',\n    'COP': '$',\n    'CRC': '₡',\n    'CUP': '$',\n    'DOP': '$',\n    'GTQ': 'Q',\n    'HNL': 'L',\n    'MXN': '$',\n    'NIO': 'C$',\n    'PAB': 'B/.',\n    'PEN': 'S/',\n    'PYG': '₲',\n    'UYU': '$',\n    'VES': 'Bs.S',\n    'IRR': 'ريال',\n    'GNF': 'FG',\n    'CDF': 'FC',\n    'HTG': 'G',\n    'XPF': 'FCFP',\n    'HRK': 'kn',\n    'HUF': 'Ft',\n    'AMD': '֏',\n    'ISK': 'kr',\n    'JPY': '¥',\n    'GEL': '₾',\n    'CVE': '​',\n    'KZT': '₸',\n    'KHR': '៛',\n    'KPW': '₩',\n    'KRW': '₩',\n    'KGS': 'сом',\n    'AOA': 'Kz',\n    'LAK': '₭',\n    'MZN': 'MTn',\n    'MKD': 'ден',\n    'MNT': '₮',\n    'BND': '$',\n    'MMK': 'K',\n    'NOK': 'kr',\n    'NPR': 'रु',\n    'AWG': 'Afl.',\n    'SRD': '$',\n    'PLN': 'zł',\n    'AFN': '؋',\n    'STN': 'Db',\n    'MDL': 'L',\n    'RON': 'lei',\n    'UAH': '₴',\n    'LKR': 'රු.',\n    'ALL': 'Lekë',\n    'RSD': 'дин.',\n    'TJS': 'смн',\n    'THB': '฿',\n    'TMT': 'm.',\n    'TRY': '₺',\n    'UZS': 'сўм',\n    'VND': '₫',\n    'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\nfunction getBlazorCurrencySymbol(currencyCode) {\n    return getValue(currencyCode || '', blazorCurrencyData);\n}\n\n/***\n * Hijri parser\n */\n// eslint-disable-next-line\nvar HijriParser;\n(function (HijriParser) {\n    const dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990,\n        29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522,\n        29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053,\n        30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585,\n        30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116,\n        31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648,\n        31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180,\n        32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711,\n        32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243,\n        33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775,\n        33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306,\n        34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837,\n        34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370,\n        35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901,\n        35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433,\n        36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963,\n        36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495,\n        37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027,\n        38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558,\n        38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089,\n        39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621,\n        39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153,\n        40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685,\n        40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216,\n        41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748,\n        41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279,\n        42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810,\n        42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342,\n        43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873,\n        43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405,\n        44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936,\n        44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468,\n        45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999,\n        46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531,\n        46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063,\n        47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594,\n        47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125,\n        48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,\n        48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189,\n        49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720,\n        49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252,\n        50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784,\n        50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315,\n        51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846,\n        51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379,\n        52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910,\n        52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441,\n        53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973,\n        54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505,\n        54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036,\n        55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567,\n        55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100,\n        56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631,\n        56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162,\n        57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694,\n        57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226,\n        58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757,\n        58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288,\n        59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820,\n        59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352,\n        60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883,\n        60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415,\n        61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947,\n        61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478,\n        62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009,\n        63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541,\n        63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073,\n        64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603,\n        64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136,\n        65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667,\n        65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199,\n        66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730,\n        66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262,\n        67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793,\n        67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325,\n        68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857,\n        68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388,\n        69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919,\n        69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451,\n        70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983,\n        71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514,\n        71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046,\n        72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577,\n        72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109,\n        73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640,\n        73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172,\n        74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704,\n        74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235,\n        75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766,\n        75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299,\n        76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830,\n        76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361,\n        77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893,\n        77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425,\n        78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956,\n        78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487,\n        79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990\n    ];\n    /**\n     *\n     * @param {Date} gDate ?\n     * @returns {Object} ?\n     */\n    function getHijriDate(gDate) {\n        let day = gDate.getDate();\n        let month = gDate.getMonth();\n        let year = gDate.getFullYear();\n        let tMonth = month + 1;\n        let tYear = year;\n        if (tMonth < 3) {\n            tYear -= 1;\n            tMonth += 12;\n        }\n        let yPrefix = Math.floor(tYear / 100.);\n        let julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;\n        const julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;\n        yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);\n        julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;\n        const b = julianNumber + julilanOffset + 1524;\n        let c = Math.floor((b - 122.1) / 365.25);\n        const d = Math.floor(365.25 * c);\n        const tempMonth = Math.floor((b - d) / 30.6001);\n        day = (b - d) - Math.floor(30.6001 * tempMonth);\n        month = Math.floor((b - d) / 20.6001);\n        if (month > 13) {\n            c += 1;\n            month -= 12;\n        }\n        month -= 1;\n        year = c - 4716;\n        const modifiedJulianDate = julianNumber - 2400000;\n        // date calculation for year after 2077\n        const iyear = 10631. / 30.;\n        let z = julianNumber - 1948084;\n        const cyc = Math.floor(z / 10631.);\n        z = z - 10631 * cyc;\n        const j = Math.floor((z - 0.1335) / iyear);\n        const iy = 30 * cyc + j;\n        z = z - Math.floor(j * iyear + 0.1335);\n        let im = Math.floor((z + 28.5001) / 29.5);\n        /* istanbul ignore next */\n        if (im === 13) {\n            im = 12;\n        }\n        const tempDay = z - Math.floor(29.5001 * im - 29);\n        let i = 0;\n        for (; i < dateCorrection.length; i++) {\n            if (dateCorrection[i] > modifiedJulianDate) {\n                break;\n            }\n        }\n        const iln = i + 16260;\n        const ii = Math.floor((iln - 1) / 12);\n        let hYear = ii + 1;\n        let hmonth = iln - 12 * ii;\n        let hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;\n        if ((hDate + '').length > 2) {\n            hDate = tempDay;\n            hmonth = im;\n            hYear = iy;\n        }\n        return { year: hYear, month: hmonth, date: hDate };\n    }\n    HijriParser.getHijriDate = getHijriDate;\n    /**\n     *\n     * @param {number} year ?\n     * @param {number} month ?\n     * @param {number} day ?\n     * @returns {Date} ?\n     */\n    function toGregorian(year, month, day) {\n        const iy = year;\n        const im = month;\n        const id = day;\n        const ii = iy - 1;\n        const iln = (ii * 12) + 1 + (im - 1);\n        const i = iln - 16260;\n        const mcjdn = id + dateCorrection[i - 1] - 1;\n        const julianDate = mcjdn + 2400000;\n        const z = Math.floor(julianDate + 0.5);\n        let a = Math.floor((z - 1867216.25) / 36524.25);\n        a = z + 1 + a - Math.floor(a / 4);\n        const b = a + 1524;\n        const c = Math.floor((b - 122.1) / 365.25);\n        const d = Math.floor(365.25 * c);\n        const e = Math.floor((b - d) / 30.6001);\n        const gDay = b - d - Math.floor(e * 30.6001);\n        let gMonth = e - (e > 13.5 ? 13 : 1);\n        const gYear = c - (gMonth > 2.5 ? 4716 : 4715);\n        /* istanbul ignore next */\n        if (gYear <= 0) {\n            gMonth--;\n        } // No year zero\n        return new Date(gYear + '/' + (gMonth) + '/' + gDay);\n    }\n    HijriParser.toGregorian = toGregorian;\n})(HijriParser || (HijriParser = {}));\n\nconst abbreviateRegexGlobal = /\\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;\nconst standalone = 'stand-alone';\nconst weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\nconst timeSetter = {\n    m: 'getMinutes',\n    h: 'getHours',\n    H: 'getHours',\n    s: 'getSeconds',\n    d: 'getDate',\n    f: 'getMilliseconds'\n};\nconst datePartMatcher = {\n    'M': 'month',\n    'd': 'day',\n    'E': 'weekday',\n    'c': 'weekday',\n    'y': 'year',\n    'm': 'minute',\n    'h': 'hour',\n    'H': 'hour',\n    's': 'second',\n    'L': 'month',\n    'a': 'designator',\n    'z': 'timeZone',\n    'Z': 'timeZone',\n    'G': 'era',\n    'f': 'milliseconds'\n};\nconst timeSeparator = 'timeSeparator';\n/* tslint:disable no-any */\n/**\n * Date Format is a framework provides support for date formatting.\n *\n * @private\n */\nclass DateFormat {\n    /**\n     * Returns the formatter function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} option - Specific the format in which date  will format.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static dateFormat(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n        const numObject = getValue('parserObject.numbers', dependable);\n        const dateObject = dependable.dateObject;\n        const formatOptions = { isIslamic: IntlBase.islamicRegex.test(option.calendar) };\n        if (isBlazor() && option.isServerRendered) {\n            option = IntlBase.compareBlazorDateFormats(option, culture);\n        }\n        let resPattern = option.format ||\n            IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n        formatOptions.dateSeperator = isBlazor() ? getValue('dateSeperator', dateObject) : IntlBase.getDateSeparator(dependable.dateObject);\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n            if (isBlazor()) {\n                resPattern = resPattern.replace(/tt/, 'a');\n            }\n            formatOptions.pattern = resPattern;\n            formatOptions.numMapper = isBlazor() ?\n                extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n            const patternMatch = resPattern.match(abbreviateRegexGlobal) || [];\n            for (const str of patternMatch) {\n                const len = str.length;\n                let char = str[0];\n                if (char === 'K') {\n                    char = 'h';\n                }\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            formatOptions.weekday = getValue('days.' + IntlBase.monthIndex[len], dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            formatOptions.weekday = dependable.dateObject[IntlBase.days][standalone][IntlBase.monthIndex[len]];\n                        }\n                        break;\n                    case 'M':\n                    case 'L':\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            formatOptions.month = getValue('months.' + IntlBase.monthIndex[len], dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            formatOptions.month = dependable.dateObject[IntlBase.month][standalone][IntlBase.monthIndex[len]];\n                        }\n                        break;\n                    case 'a':\n                        formatOptions.designator = isBlazor() ?\n                            getValue('dayPeriods', dateObject) : getValue('dayPeriods.format.wide', dateObject);\n                        break;\n                    case 'G':\n                        // eslint-disable-next-line\n                        const eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        formatOptions.era = isBlazor() ? getValue('eras', dateObject) : getValue('eras.' + eText, dependable.dateObject);\n                        break;\n                    case 'z':\n                        formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                        break;\n                }\n            }\n        }\n        return (value) => {\n            if (isNaN(value.getDate())) {\n                return null;\n            }\n            return this.intDateFormatter(value, formatOptions);\n        };\n    }\n    /**\n     * Returns formatted date string based on options passed.\n     *\n     * @param {Date} value ?\n     * @param {FormatOptions} options ?\n     * @returns {string} ?\n     */\n    static intDateFormatter(value, options) {\n        const pattern = options.pattern;\n        let ret = '';\n        const matches = pattern.match(IntlBase.dateParseRegex);\n        const dObject = this.getCurrentDateValue(value, options.isIslamic);\n        for (const match of matches) {\n            const length = match.length;\n            let char = match[0];\n            if (char === 'K') {\n                char = 'h';\n            }\n            let curval;\n            let curvalstr = '';\n            let isNumber;\n            let processNumber;\n            let curstr = '';\n            switch (char) {\n                case 'M':\n                case 'L':\n                    curval = dObject.month;\n                    if (length > 2) {\n                        // eslint-disable-next-line\n                        ret += options.month[curval];\n                    }\n                    else {\n                        isNumber = true;\n                    }\n                    break;\n                case 'E':\n                case 'c':\n                    // eslint-disable-next-line\n                    ret += options.weekday[weekdayKey[value.getDay()]];\n                    break;\n                case 'H':\n                case 'h':\n                case 'm':\n                case 's':\n                case 'd':\n                case 'f':\n                    isNumber = true;\n                    if (char === 'd') {\n                        curval = dObject.date;\n                    }\n                    else if (char === 'f') {\n                        isNumber = false;\n                        processNumber = true;\n                        // eslint-disable-next-line\n                        curvalstr = value[timeSetter[char]]().toString();\n                        curvalstr = curvalstr.substring(0, length);\n                        const curlength = curvalstr.length;\n                        if (length !== curlength) {\n                            if (length > 3) {\n                                continue;\n                            }\n                            for (let i = 0; i < length - curlength; i++) {\n                                curvalstr = '0' + curvalstr.toString();\n                            }\n                        }\n                        curstr += curvalstr;\n                    }\n                    else {\n                        // eslint-disable-next-line\n                        curval = value[timeSetter[char]]();\n                    }\n                    if (char === 'h') {\n                        curval = curval % 12 || 12;\n                    }\n                    break;\n                case 'y':\n                    processNumber = true;\n                    curstr += dObject.year;\n                    if (length === 2) {\n                        curstr = curstr.substr(curstr.length - 2);\n                    }\n                    break;\n                case 'a':\n                    // eslint-disable-next-line\n                    let desig = value.getHours() < 12 ? 'am' : 'pm';\n                    // eslint-disable-next-line\n                    ret += options.designator[desig];\n                    break;\n                case 'G':\n                    // eslint-disable-next-line\n                    let dec = value.getFullYear() < 0 ? 0 : 1;\n                    // eslint-disable-next-line\n                    let retu = options.era[dec];\n                    if (isNullOrUndefined(retu)) {\n                        // eslint-disable-next-line\n                        retu = options.era[dec ? 0 : 1];\n                    }\n                    ret += retu || '';\n                    break;\n                case '\\'':\n                    ret += (match === '\\'\\'') ? '\\'' : match.replace(/'/g, '');\n                    break;\n                case 'z':\n                    // eslint-disable-next-line\n                    let timezone = value.getTimezoneOffset();\n                    // eslint-disable-next-line\n                    let pattern = (length < 4) ? '+H;-H' : options.timeZone.hourFormat;\n                    pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n                    if (timezone === 0) {\n                        ret += options.timeZone.gmtZeroFormat;\n                    }\n                    else {\n                        processNumber = true;\n                        curstr = this.getTimeZoneValue(timezone, pattern);\n                    }\n                    curstr = options.timeZone.gmtFormat.replace(/\\{0\\}/, curstr);\n                    break;\n                case ':':\n                    // eslint-disable-next-line\n                    ret += options.numMapper.numberSymbols[timeSeparator];\n                    break;\n                case '/':\n                    ret += options.dateSeperator;\n                    break;\n                case 'W':\n                    isNumber = true;\n                    curval = IntlBase.getWeekOfYear(value);\n                    break;\n                default:\n                    ret += match;\n            }\n            if (isNumber) {\n                processNumber = true;\n                curstr = this.checkTwodigitNumber(curval, length);\n            }\n            if (processNumber) {\n                ret += ParserBase.convertValueParts(curstr, IntlBase.latnParseRegex, options.numMapper.mapper);\n            }\n        }\n        return ret;\n    }\n    static getCurrentDateValue(value, isIslamic) {\n        if (isIslamic) {\n            return HijriParser.getHijriDate(value);\n        }\n        return { year: value.getFullYear(), month: value.getMonth() + 1, date: value.getDate() };\n    }\n    /**\n     * Returns two digit numbers for given value and length\n     *\n     * @param {number} val ?\n     * @param {number} len ?\n     * @returns {string} ?\n     */\n    static checkTwodigitNumber(val, len) {\n        const ret = val + '';\n        if (len === 2 && ret.length !== 2) {\n            return '0' + ret;\n        }\n        return ret;\n    }\n    /**\n     * Returns the value of the Time Zone.\n     *\n     * @param {number} tVal ?\n     * @param {string} pattern ?\n     * @returns {string} ?\n     * @private\n     */\n    static getTimeZoneValue(tVal, pattern) {\n        const splt = pattern.split(';');\n        let curPattern = splt[tVal > 0 ? 1 : 0];\n        const no = Math.abs(tVal);\n        return curPattern = curPattern.replace(/HH?|mm/g, (str) => {\n            const len = str.length;\n            const ishour = str.indexOf('H') !== -1;\n            return this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);\n        });\n    }\n}\n\nconst errorText = {\n    'ms': 'minimumSignificantDigits',\n    'ls': 'maximumSignificantDigits',\n    'mf': 'minimumFractionDigits',\n    'lf': 'maximumFractionDigits',\n};\nconst percentSign = 'percentSign';\nconst minusSign = 'minusSign';\nconst mapper$1 = ['infinity', 'nan', 'group', 'decimal', 'exponential'];\n/**\n * Module for number formatting.\n *\n * @private\n */\nclass NumberFormat {\n    /**\n     * Returns the formatter function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} option - Specific the format in which number  will format.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static numberFormatter(culture, option, cldr) {\n        const fOptions = extend({}, option);\n        let cOptions = {};\n        const dOptions = {};\n        let symbolPattern;\n        const dependable = IntlBase.getDependables(cldr, culture, '', true);\n        const numObject = dependable.numericObject;\n        dOptions.numberMapper = isBlazor() ? extend({}, numObject) :\n            ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n        dOptions.currencySymbol = isBlazor() ? getValue('currencySymbol', numObject) : IntlBase.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode, option.altSymbol);\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        dOptions.percentSymbol = isBlazor() ? getValue('numberSymbols.percentSign', numObject) :\n            dOptions.numberMapper.numberSymbols[percentSign];\n        dOptions.minusSymbol = isBlazor() ? getValue('numberSymbols.minusSign', numObject) :\n            dOptions.numberMapper.numberSymbols[minusSign];\n        const symbols = dOptions.numberMapper.numberSymbols;\n        if ((option.format) && !(IntlBase.formatRegex.test(option.format))) {\n            cOptions = IntlBase.customFormat(option.format, dOptions, dependable.numericObject);\n        }\n        else {\n            extend(fOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n            fOptions.isCurrency = fOptions.type === 'currency';\n            fOptions.isPercent = fOptions.type === 'percent';\n            if (!isBlazor()) {\n                symbolPattern = IntlBase.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);\n            }\n            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);\n            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);\n            if (!isUndefined(fOptions.fractionDigits)) {\n                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;\n            }\n            if (isUndefined(fOptions.useGrouping)) {\n                fOptions.useGrouping = true;\n            }\n            if (fOptions.isCurrency && !isBlazor()) {\n                symbolPattern = symbolPattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n            }\n            if (!isBlazor()) {\n                const split = symbolPattern.split(';');\n                cOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);\n                cOptions.pData = IntlBase.getFormatData(split[0], false, dOptions.currencySymbol);\n                if (fOptions.useGrouping) {\n                    fOptions.groupSeparator = symbols[mapper$1[2]];\n                    fOptions.groupData = this.getGroupingDetails(split[0]);\n                }\n            }\n            else {\n                cOptions.nData = extend({}, {}, getValue(fOptions.type + 'nData', numObject));\n                cOptions.pData = extend({}, {}, getValue(fOptions.type + 'pData', numObject));\n                if (fOptions.type === 'currency' && option.currency) {\n                    IntlBase.replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);\n                }\n            }\n            const minFrac = isUndefined(fOptions.minimumFractionDigits);\n            if (minFrac) {\n                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;\n            }\n            if (isUndefined(fOptions.maximumFractionDigits)) {\n                const mval = cOptions.nData.maximumFraction;\n                fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;\n            }\n            const mfrac = fOptions.minimumFractionDigits;\n            const lfrac = fOptions.maximumFractionDigits;\n            if (!isUndefined(mfrac) && !isUndefined(lfrac)) {\n                if (mfrac > lfrac) {\n                    fOptions.maximumFractionDigits = mfrac;\n                }\n            }\n        }\n        extend(cOptions.nData, fOptions);\n        extend(cOptions.pData, fOptions);\n        return (value) => {\n            if (isNaN(value)) {\n                return symbols[mapper$1[1]];\n            }\n            else if (!isFinite(value)) {\n                return symbols[mapper$1[0]];\n            }\n            return this.intNumberFormatter(value, cOptions, dOptions);\n        };\n    }\n    /**\n     * Returns grouping details for the pattern provided\n     *\n     * @param {string} pattern ?\n     * @returns {GroupDetails} ?\n     */\n    static getGroupingDetails(pattern) {\n        const ret = {};\n        const match = pattern.match(IntlBase.negativeDataRegex);\n        if (match && match[4]) {\n            const pattern = match[4];\n            const p = pattern.lastIndexOf(',');\n            if (p !== -1) {\n                const temp = pattern.split('.')[0];\n                ret.primary = (temp.length - p) - 1;\n                const s = pattern.lastIndexOf(',', p - 1);\n                if (s !== -1) {\n                    ret.secondary = p - 1 - s;\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns if the provided integer range is valid.\n     *\n     * @param {number} val1 ?\n     * @param {number} val2 ?\n     * @param {boolean} checkbothExist ?\n     * @param {boolean} isFraction ?\n     * @returns {boolean} ?\n     */\n    static checkValueRange(val1, val2, checkbothExist, isFraction) {\n        const decide = isFraction ? 'f' : 's';\n        let dint = 0;\n        const str1 = errorText['l' + decide];\n        // eslint-disable-next-line\n        let str2 = errorText['m' + decide];\n        if (!isUndefined(val1)) {\n            this.checkRange(val1, str1, isFraction);\n            dint++;\n        }\n        if (!isUndefined(val2)) {\n            this.checkRange(val2, str2, isFraction);\n            dint++;\n        }\n        if (dint === 2) {\n            if (val1 < val2) {\n                throwError(str2 + 'specified must be less than the' + str1);\n            }\n            else {\n                return true;\n            }\n        }\n        else if (checkbothExist && dint === 1) {\n            throwError('Both' + str2 + 'and' + str2 + 'must be present');\n        }\n        return false;\n    }\n    /**\n     * Check if the provided fraction range is valid\n     *\n     * @param {number} val ?\n     * @param {string} text ?\n     * @param {boolean} isFraction ?\n     * @returns {void} ?\n     */\n    static checkRange(val, text, isFraction) {\n        const range = isFraction ? [0, 20] : [1, 21];\n        if (val < range[0] || val > range[1]) {\n            throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);\n        }\n    }\n    /**\n     * Returns formatted numeric string for provided formatting options\n     *\n     * @param {number} value ?\n     * @param {base.GenericFormatOptions} fOptions ?\n     * @param {CommonOptions} dOptions ?\n     * @returns {string} ?\n     */\n    static intNumberFormatter(value, fOptions, dOptions) {\n        let curData;\n        if (isUndefined(fOptions.nData.type)) {\n            return undefined;\n        }\n        else {\n            if (value < 0) {\n                value = value * -1;\n                curData = fOptions.nData;\n            }\n            else if (value === 0) {\n                curData = fOptions.zeroData || fOptions.pData;\n            }\n            else {\n                curData = fOptions.pData;\n            }\n            let fValue = '';\n            if (curData.isPercent) {\n                value = value * 100;\n            }\n            if (curData.groupOne) {\n                fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);\n            }\n            else {\n                fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);\n                if (curData.minimumIntegerDigits) {\n                    fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);\n                }\n            }\n            if (curData.type === 'scientific') {\n                fValue = value.toExponential(curData.maximumFractionDigits);\n                fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper$1[4]]);\n            }\n            fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper$1[3]]);\n            if (curData.useGrouping) {\n                /* eslint-disable  @typescript-eslint/no-explicit-any */\n                fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper$1[3]] || '.', curData.groupData.secondary);\n            }\n            fValue = ParserBase.convertValueParts(fValue, IntlBase.latnParseRegex, dOptions.numberMapper.mapper);\n            if (curData.nlead === 'N/A') {\n                return curData.nlead;\n            }\n            else {\n                return curData.nlead + fValue + curData.nend;\n            }\n        }\n    }\n    /**\n     * Returns significant digits processed numeric string\n     *\n     * @param {number} value ?\n     * @param {number} min ?\n     * @param {number} max ?\n     * @returns {string} ?\n     */\n    static processSignificantDigits(value, min, max) {\n        let temp = value + '';\n        let tn;\n        const length = temp.length;\n        if (length < min) {\n            return value.toPrecision(min);\n        }\n        else {\n            temp = value.toPrecision(max);\n            tn = +temp;\n            return tn + '';\n        }\n    }\n    /**\n     * Returns grouped numeric string\n     *\n     * @param {string} val ?\n     * @param {number} level1 ?\n     * @param {string} sep ?\n     * @param {string} decimalSymbol ?\n     * @param {number} level2 ?\n     * @returns {string} ?\n     */\n    static groupNumbers(val, level1, sep, decimalSymbol, level2) {\n        let flag = !isNullOrUndefined(level2) && level2 !== 0;\n        const split = val.split(decimalSymbol);\n        const prefix = split[0];\n        let length = prefix.length;\n        let str = '';\n        while (length > level1) {\n            str = prefix.slice(length - level1, length) + (str.length ?\n                (sep + str) : '');\n            length -= level1;\n            if (flag) {\n                level1 = level2;\n                flag = false;\n            }\n        }\n        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;\n        return split.join(decimalSymbol);\n    }\n    /**\n     * Returns fraction processed numeric string\n     *\n     * @param {number} value ?\n     * @param {number} min ?\n     * @param {number} max ?\n     * @returns {string} ?\n     */\n    static processFraction(value, min, max) {\n        const temp = (value + '').split('.')[1];\n        const length = temp ? temp.length : 0;\n        if (min && length < min) {\n            let ret = '';\n            if (length === 0) {\n                ret = value.toFixed(min);\n            }\n            else {\n                ret += value;\n                for (let j = 0; j < min - length; j++) {\n                    ret += '0';\n                }\n                return ret;\n            }\n            return value.toFixed(min);\n        }\n        else if (!isNullOrUndefined(max) && (length > max || max === 0)) {\n            return value.toFixed(max);\n        }\n        return value + '';\n    }\n    /**\n     * Returns integer processed numeric string\n     *\n     * @param {string} value ?\n     * @param {number} min ?\n     * @returns {string} ?\n     */\n    static processMinimumIntegers(value, min) {\n        const temp = value.split('.');\n        let lead = temp[0];\n        const len = lead.length;\n        if (len < min) {\n            for (let i = 0; i < min - len; i++) {\n                lead = '0' + lead;\n            }\n            temp[0] = lead;\n        }\n        return temp.join('.');\n    }\n}\n\nconst standalone$1 = 'stand-alone';\nconst latnRegex = /^[0-9]*$/;\nconst timeSetter$1 = {\n    minute: 'setMinutes',\n    hour: 'setHours',\n    second: 'setSeconds',\n    day: 'setDate',\n    month: 'setMonth',\n    milliseconds: 'setMilliseconds'\n};\nconst month = 'months';\n/* tslint:disable no-any */\n/**\n * Date Parser.\n *\n * @private\n */\nclass DateParser {\n    /**\n     * Returns the parser function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static dateParser(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n        const numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), false, isBlazor());\n        let parseOptions = {};\n        if (isBlazor() && option.isServerRendered) {\n            option = IntlBase.compareBlazorDateFormats(option, culture);\n        }\n        let resPattern = option.format ||\n            IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n        let regexString = '';\n        let hourOnly;\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n            parseOptions = { isIslamic: IntlBase.islamicRegex.test(option.calendar), pattern: resPattern, evalposition: {}, culture: culture };\n            const patternMatch = resPattern.match(IntlBase.dateParseRegex) || [];\n            const length = patternMatch.length;\n            let gmtCorrection = 0;\n            let zCorrectTemp = 0;\n            let isgmtTraversed = false;\n            const nRegx = numOptions.numericRegex;\n            // eslint-disable-next-line\n            let numMapper = isBlazor() ? dependable.parserObject.numbers :\n                ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n            for (let i = 0; i < length; i++) {\n                const str = patternMatch[i];\n                const len = str.length;\n                const char = (str[0] === 'K') ? 'h' : str[0];\n                let isNumber;\n                let canUpdate;\n                // eslint-disable-next-line\n                let charKey = datePartMatcher[char];\n                const optional = (len === 2) ? '' : '?';\n                if (isgmtTraversed) {\n                    gmtCorrection = zCorrectTemp;\n                    isgmtTraversed = false;\n                }\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        // eslint-disable-next-line\n                        let weekData;\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            weekData = getValue('days.' + IntlBase.monthIndex[len], dependable.dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            weekData = dependable.dateObject[IntlBase.days][standalone$1][IntlBase.monthIndex[len]];\n                        }\n                        // eslint-disable-next-line\n                        let weekObject = ParserBase.reverseObject(weekData);\n                        // tslint:enable\n                        regexString += '(' + Object.keys(weekObject).join('|') + ')';\n                        break;\n                    case 'M':\n                    case 'L':\n                    case 'd':\n                    case 'm':\n                    case 's':\n                    case 'h':\n                    case 'H':\n                    case 'f':\n                        canUpdate = true;\n                        if ((char === 'M' || char === 'L') && len > 2) {\n                            let monthData;\n                            if (isBlazor()) {\n                                // eslint-disable-next-line\n                                monthData = getValue('months.' + IntlBase.monthIndex[len], dependable.dateObject);\n                            }\n                            else {\n                                // eslint-disable-next-line\n                                monthData = dependable.dateObject[month][standalone$1][IntlBase.monthIndex[len]];\n                            }\n                            // eslint-disable-next-line\n                            parseOptions[charKey] = ParserBase.reverseObject(monthData);\n                            // eslint-disable-next-line\n                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        }\n                        else if (char === 'f') {\n                            if (len > 3) {\n                                continue;\n                            }\n                            isNumber = true;\n                            regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';\n                        }\n                        else {\n                            isNumber = true;\n                            regexString += '(' + nRegx + nRegx + optional + ')';\n                        }\n                        if (char === 'h') {\n                            parseOptions.hour12 = true;\n                        }\n                        break;\n                    case 'W':\n                        // eslint-disable-next-line\n                        let opt = len === 1 ? '?' : '';\n                        regexString += '(' + nRegx + opt + nRegx + ')';\n                        break;\n                    case 'y':\n                        canUpdate = isNumber = true;\n                        if (len === 2) {\n                            regexString += '(' + nRegx + nRegx + ')';\n                        }\n                        else {\n                            regexString += '(' + nRegx + '{' + len + ',})';\n                        }\n                        break;\n                    case 'a':\n                        canUpdate = true;\n                        // eslint-disable-next-line\n                        let periodValur = isBlazor() ?\n                            getValue('dayPeriods', dependable.dateObject) :\n                            getValue('dayPeriods.format.wide', dependable.dateObject);\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = ParserBase.reverseObject(periodValur);\n                        // eslint-disable-next-line\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        break;\n                    case 'G':\n                        canUpdate = true;\n                        // eslint-disable-next-line\n                        let eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = ParserBase.reverseObject(isBlazor() ?\n                            getValue('eras', dependable.dateObject) : getValue('eras.' + eText, dependable.dateObject));\n                        // eslint-disable-next-line\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';\n                        break;\n                    case 'z':\n                        // eslint-disable-next-line\n                        let tval = new Date().getTimezoneOffset();\n                        canUpdate = (tval !== 0);\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject);\n                        // eslint-disable-next-line\n                        let tzone = parseOptions[charKey];\n                        hourOnly = (len < 4);\n                        // eslint-disable-next-line\n                        let hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;\n                        hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);\n                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';\n                        isgmtTraversed = true;\n                        zCorrectTemp = hourOnly ? 6 : 12;\n                        break;\n                    case '\\'':\n                        // eslint-disable-next-line\n                        let iString = str.replace(/'/g, '');\n                        regexString += '(' + iString + ')?';\n                        break;\n                    default:\n                        regexString += '([\\\\D])';\n                        break;\n                }\n                if (canUpdate) {\n                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1 + gmtCorrection, hourOnly: hourOnly };\n                }\n                if (i === length - 1 && !isNullOrUndefined(regexString)) {\n                    parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');\n                }\n            }\n        }\n        return (value) => {\n            const parsedDateParts = this.internalDateParse(value, parseOptions, numOptions);\n            if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {\n                return null;\n            }\n            if (parseOptions.isIslamic) {\n                let dobj = {};\n                let tYear = parsedDateParts.year;\n                const tDate = parsedDateParts.day;\n                const tMonth = parsedDateParts.month;\n                const ystrig = tYear ? (tYear + '') : '';\n                const is2DigitYear = (ystrig.length === 2);\n                if (!tYear || !tMonth || !tDate || is2DigitYear) {\n                    dobj = HijriParser.getHijriDate(new Date());\n                }\n                if (is2DigitYear) {\n                    tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);\n                }\n                // tslint:disable-next-line\n                const dateObject = HijriParser.toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);\n                parsedDateParts.year = dateObject.getFullYear();\n                parsedDateParts.month = dateObject.getMonth() + 1;\n                parsedDateParts.day = dateObject.getDate();\n            }\n            return this.getDateObject(parsedDateParts);\n        };\n    }\n    /* tslint:disable */\n    /**\n     * Returns date object for provided date options\n     *\n     * @param {DateParts} options ?\n     * @param {Date} value ?\n     * @returns {Date} ?\n     */\n    static getDateObject(options, value) {\n        const res = value || new Date();\n        res.setMilliseconds(0);\n        const tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];\n        let y = options.year;\n        const desig = options.designator;\n        const tzone = options.timeZone;\n        if (!isUndefined(y)) {\n            const len = (y + '').length;\n            if (len <= 2) {\n                const century = Math.floor(res.getFullYear() / 100) * 100;\n                y += century;\n            }\n            res.setFullYear(y);\n        }\n        for (const key of tKeys) {\n            // eslint-disable-next-line\n            let tValue = options[key];\n            if (isUndefined(tValue) && key === 'day') {\n                res.setDate(1);\n            }\n            if (!isUndefined(tValue)) {\n                if (key === 'month') {\n                    tValue -= 1;\n                    if (tValue < 0 || tValue > 11) {\n                        return new Date('invalid');\n                    }\n                    const pDate = res.getDate();\n                    res.setDate(1);\n                    // eslint-disable-next-line\n                    res[timeSetter$1[key]](tValue);\n                    const lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();\n                    res.setDate(pDate < lDate ? pDate : lDate);\n                }\n                else {\n                    if (key === 'day') {\n                        const lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();\n                        if ((tValue < 1 || tValue > lastDay)) {\n                            return null;\n                        }\n                    }\n                    // eslint-disable-next-line\n                    res[timeSetter$1[key]](tValue);\n                }\n            }\n        }\n        if (!isUndefined(desig)) {\n            const hour = res.getHours();\n            if (desig === 'pm') {\n                res.setHours(hour + (hour === 12 ? 0 : 12));\n            }\n            else if (hour === 12) {\n                res.setHours(0);\n            }\n        }\n        if (!isUndefined(tzone)) {\n            const tzValue = tzone - res.getTimezoneOffset();\n            if (tzValue !== 0) {\n                res.setMinutes(res.getMinutes() + tzValue);\n            }\n        }\n        return res;\n    }\n    /**\n     * Returns date parsing options for provided value along with parse and numeric options\n     *\n     * @param {string} value ?\n     * @param {ParseOptions} parseOptions ?\n     * @param {NumericOptions} num ?\n     * @returns {DateParts} ?\n     */\n    static internalDateParse(value, parseOptions, num) {\n        const matches = value.match(parseOptions.parserRegex);\n        const retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };\n        if (isNullOrUndefined(matches)) {\n            return null;\n        }\n        else {\n            const props = Object.keys(parseOptions.evalposition);\n            for (const prop of props) {\n                const curObject = parseOptions.evalposition[prop];\n                let matchString = matches[curObject.pos];\n                if (curObject.isNumber) {\n                    // eslint-disable-next-line\n                    retOptions[prop] = this.internalNumberParser(matchString, num);\n                }\n                else {\n                    if (prop === 'timeZone' && !isUndefined(matchString)) {\n                        const pos = curObject.pos;\n                        let val;\n                        const tmatch = matches[pos + 1];\n                        const flag = !isUndefined(tmatch);\n                        if (curObject.hourOnly) {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;\n                        }\n                        else {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;\n                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);\n                        }\n                        if (!isNullOrUndefined(val)) {\n                            retOptions[prop] = val;\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line\n                        matchString = ((prop === 'month') && (!parseOptions.isIslamic) && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US'))\n                            ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString;\n                        // eslint-disable-next-line\n                        retOptions[prop] = parseOptions[prop][matchString];\n                    }\n                }\n            }\n            if (parseOptions.hour12) {\n                retOptions.hour12 = true;\n            }\n        }\n        return retOptions;\n    }\n    /**\n     * Returns parsed number for provided Numeric string and Numeric Options\n     *\n     * @param {string} value ?\n     * @param {NumericOptions} option ?\n     * @returns {number} ?\n     */\n    static internalNumberParser(value, option) {\n        value = ParserBase.convertValueParts(value, option.numberParseRegex, option.numericPair);\n        if (latnRegex.test(value)) {\n            return +value;\n        }\n        return null;\n    }\n    /**\n     * Returns parsed time zone RegExp for provided hour format and time zone\n     *\n     * @param {string} hourFormat ?\n     * @param {base.TimeZoneOptions} tZone ?\n     * @param {string} nRegex ?\n     * @returns {string} ?\n     */\n    static parseTimeZoneRegx(hourFormat, tZone, nRegex) {\n        const pattern = tZone.gmtFormat;\n        let ret;\n        const cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';\n        let splitStr;\n        ret = hourFormat.replace('+', '\\\\+');\n        if (hourFormat.indexOf('HH') !== -1) {\n            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');\n        }\n        else {\n            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');\n        }\n        // eslint-disable-next-line\n        splitStr = (ret.split(';').map((str) => {\n            return pattern.replace('{0}', str);\n        }));\n        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;\n        return ret;\n    }\n    /**\n     * Returns zone based value.\n     *\n     * @param {boolean} flag ?\n     * @param {string} val1 ?\n     * @param {string} val2 ?\n     * @param {NumericOptions} num ?\n     * @returns {number} ?\n     */\n    static getZoneValue(flag, val1, val2, num) {\n        const ival = flag ? val1 : val2;\n        if (!ival) {\n            return 0;\n        }\n        const value = this.internalNumberParser(ival, num);\n        if (flag) {\n            return -value;\n        }\n        return value;\n    }\n}\n\nconst parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;\nconst groupRegex = /,/g;\nconst keys = ['minusSign', 'infinity'];\n/**\n * Module for Number Parser.\n *\n * @private\n */\nclass NumberParser {\n    /**\n     * Returns the parser function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static numberParser(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, '', true);\n        const parseOptions = { custom: true };\n        let numOptions;\n        if ((IntlBase.formatRegex.test(option.format)) || !(option.format)) {\n            extend(parseOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n            parseOptions.custom = false;\n            if (!parseOptions.fractionDigits) {\n                if (option.maximumFractionDigits) {\n                    parseOptions.maximumFractionDigits = option.maximumFractionDigits;\n                }\n            }\n        }\n        else {\n            extend(parseOptions, IntlBase.customFormat(option.format, null, null));\n        }\n        const numbers = getValue('numbers', dependable.parserObject);\n        // eslint-disable-next-line\n        numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true, isBlazor());\n        parseOptions.symbolRegex = ParserBase.getSymbolRegex(Object.keys(numOptions.symbolMatch));\n        // eslint-disable-next-line\n        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];\n        let symbolpattern;\n        if (!isBlazor()) {\n            symbolpattern = IntlBase.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);\n            if (symbolpattern) {\n                symbolpattern = symbolpattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n                const split = symbolpattern.split(';');\n                parseOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, '');\n                parseOptions.pData = IntlBase.getFormatData(split[0], true, '');\n            }\n        }\n        else {\n            parseOptions.nData = extend({}, {}, getValue(parseOptions.type + 'nData', numbers));\n            parseOptions.pData = extend({}, {}, getValue(parseOptions.type + 'pData', numbers));\n            if (parseOptions.type === 'currency' && option.currency) {\n                IntlBase.replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], getValue('currencySymbol', numbers), option.currency);\n            }\n        }\n        return (value) => {\n            return this.getParsedNumber(value, parseOptions, numOptions);\n        };\n    }\n    /**\n     * Returns parsed number for the provided formatting options\n     *\n     * @param {string} value ?\n     * @param {NumericParts} options ?\n     * @param {NumericOptions} numOptions ?\n     * @returns {number} ?\n     */\n    static getParsedNumber(value, options, numOptions) {\n        let isNegative;\n        let isPercent;\n        let tempValue;\n        let lead;\n        let end;\n        let ret;\n        if (value.indexOf(options.infinity) !== -1) {\n            return Infinity;\n        }\n        else {\n            value = ParserBase.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);\n            value = ParserBase.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);\n            value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;\n            if (value.indexOf('.') === 0) {\n                value = '0' + value;\n            }\n            const matches = value.match(parseRegex);\n            if (isNullOrUndefined(matches)) {\n                return NaN;\n            }\n            lead = matches[1];\n            tempValue = matches[2];\n            const exponent = matches[5];\n            end = matches[6];\n            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :\n                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));\n            isPercent = isNegative ?\n                options.nData.isPercent :\n                options.pData.isPercent;\n            tempValue = tempValue.replace(groupRegex, '');\n            if (exponent) {\n                tempValue += exponent;\n            }\n            ret = +tempValue;\n            if (options.type === 'percent' || isPercent) {\n                ret = ret / 100;\n            }\n            if (options.custom || options.fractionDigits) {\n                ret = parseFloat(ret.toFixed(options.custom ?\n                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));\n            }\n            if (options.maximumFractionDigits) {\n                ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);\n            }\n            if (isNegative) {\n                ret *= -1;\n            }\n            return ret;\n        }\n    }\n    static convertMaxFracDigits(value, options, ret, isNegative) {\n        let decimalSplitValue = value.split('.');\n        if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {\n            ret = +(ret.toFixed(options.custom ?\n                (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.maximumFractionDigits));\n        }\n        return ret;\n    }\n}\n\nclass Observer {\n    constructor(context) {\n        this.ranArray = [];\n        this.boundedEvents = {};\n        if (isNullOrUndefined(context)) {\n            return;\n        }\n        this.context = context;\n    }\n    /**\n     * To attach handler for given property in current context.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Specifies the handler function to be called while event notified.\n     * @param {Object} context - Specifies the context binded to the handler.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void}\n     */\n    on(property, handler, context, id) {\n        if (isNullOrUndefined(handler)) {\n            return;\n        }\n        const cntxt = context || this.context;\n        if (this.notExist(property)) {\n            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];\n            return;\n        }\n        if (!isNullOrUndefined(id)) {\n            if (this.ranArray.indexOf(id) === -1) {\n                this.ranArray.push(id);\n                this.boundedEvents[property].push({ handler: handler, context: cntxt, id: id });\n            }\n        }\n        else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n            this.boundedEvents[property].push({ handler: handler, context: cntxt });\n        }\n    }\n    /**\n     * To remove handlers from a event attached using on() function.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void} ?\n     */\n    off(property, handler, id) {\n        if (this.notExist(property)) {\n            return;\n        }\n        const curObject = getValue(property, this.boundedEvents);\n        if (handler) {\n            for (let i = 0; i < curObject.length; i++) {\n                if (id) {\n                    if (curObject[i].id === id) {\n                        curObject.splice(i, 1);\n                        const indexLocation = this.ranArray.indexOf(id);\n                        if (indexLocation !== -1) {\n                            this.ranArray.splice(indexLocation, 1);\n                        }\n                        break;\n                    }\n                }\n                else if (handler === curObject[i].handler) {\n                    curObject.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            delete this.boundedEvents[property];\n        }\n    }\n    /**\n     * To notify the handlers in the specified event.\n     *\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @param {Function} successHandler - this function will invoke after event successfully triggered\n     * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n     * @returns {void} ?\n     */\n    notify(property, argument, successHandler, errorHandler) {\n        if (this.notExist(property)) {\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n            return;\n        }\n        if (argument) {\n            argument.name = property;\n        }\n        const blazor = 'Blazor';\n        const curObject = getValue(property, this.boundedEvents).slice(0);\n        if (window[blazor]) {\n            return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n        }\n        else {\n            for (const cur of curObject) {\n                cur.handler.call(cur.context, argument);\n            }\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n        }\n    }\n    blazorCallback(objs, argument, successHandler, errorHandler, index) {\n        const isTrigger = index === objs.length - 1;\n        if (index < objs.length) {\n            const obj = objs[index];\n            const promise = obj.handler.call(obj.context, argument);\n            if (promise && typeof promise.then === 'function') {\n                if (!successHandler) {\n                    return promise;\n                }\n                promise.then((data) => {\n                    data = typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data;\n                    extend(argument, argument, data, true);\n                    if (successHandler && isTrigger) {\n                        successHandler.call(obj.context, argument);\n                    }\n                    else {\n                        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n                    }\n                }).catch((data) => {\n                    if (errorHandler) {\n                        errorHandler.call(obj.context, typeof data === 'string' &&\n                            this.isJson(data) ? JSON.parse(data, this.dateReviver) : data);\n                    }\n                });\n            }\n            else if (successHandler && isTrigger) {\n                successHandler.call(obj.context, argument);\n            }\n            else {\n                return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    dateReviver(key, value) {\n        const dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n        if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n            return (new Date(value));\n        }\n        return (value);\n    }\n    isJson(value) {\n        try {\n            JSON.parse(value);\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * To destroy handlers in the event\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        this.boundedEvents = this.context = undefined;\n    }\n    /**\n     * Returns if the property exists.\n     *\n     * @param {string} prop ?\n     * @returns {boolean} ?\n     */\n    notExist(prop) {\n        // eslint-disable-next-line\n        return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n    }\n    /**\n     * Returns if the handler is present.\n     *\n     * @param {BoundOptions[]} boundedEvents ?\n     * @param {Function} handler ?\n     * @returns {boolean} ?\n     */\n    isHandlerPresent(boundedEvents, handler) {\n        for (const cur of boundedEvents) {\n            if (cur.handler === handler) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Specifies the observer used for external change detection.\n */\nconst onIntlChange = new Observer();\n/**\n * Specifies the default rtl status for EJ2 components.\n */\nlet rightToLeft = false;\n/**\n * Specifies the CLDR data loaded for internationalization functionalities.\n *\n * @private\n */\nconst cldrData = {};\n/**\n * Specifies the default culture value to be considered.\n *\n * @private\n */\nlet defaultCulture = 'en-US';\n/**\n * Specifies default currency code to be considered\n *\n * @private\n */\nlet defaultCurrencyCode = 'USD';\nconst mapper = ['numericObject', 'dateObject'];\n/**\n * Internationalization class provides support to parse and format the number and date object to the desired format.\n * ```typescript\n * // To set the culture globally\n * setCulture('en-GB');\n *\n * // To set currency code globally\n * setCurrencyCode('EUR');\n *\n * //Load cldr data\n * loadCldr(gregorainData);\n * loadCldr(timeZoneData);\n * loadCldr(numbersData);\n * loadCldr(numberSystemData);\n *\n * // To use formatter in component side\n * let Intl:Internationalization = new Internationalization();\n *\n * // Date formatting\n * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});\n * dateFormatter(new Date('11/2/2016'));\n * dateFormatter(new Date('25/2/2030'));\n * Intl.formatDate(new Date(),{skeleton:'E'});\n *\n * //Number formatting\n * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})\n * numberFormatter(24563334);\n * Intl.formatNumber(123123,{skeleton:'p2'});\n *\n * // Date parser\n * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});\n * dateParser('10:30 PM');\n * Intl.parseDate('10',{skeleton:'H'});\n * ```\n */\nclass Internationalization {\n    constructor(cultureName) {\n        if (cultureName) {\n            this.culture = cultureName;\n        }\n    }\n    /**\n     * Returns the format function for given options.\n     *\n     * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function} ?\n     */\n    getDateFormat(options) {\n        return DateFormat.dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);\n    }\n    /**\n     * Returns the format function for given options.\n     *\n     * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function} ?\n     */\n    getNumberFormat(options) {\n        if (options && !options.currency) {\n            options.currency = defaultCurrencyCode;\n        }\n        if (isBlazor() && options && !options.format) {\n            options.minimumFractionDigits = 0;\n        }\n        return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);\n    }\n    /**\n     * Returns the parser function for given options.\n     *\n     * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function} ?\n     */\n    getDateParser(options) {\n        return DateParser.dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);\n    }\n    /**\n     * Returns the parser function for given options.\n     *\n     * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function} ?\n     */\n    getNumberParser(options) {\n        if (isBlazor() && options && !options.format) {\n            options.minimumFractionDigits = 0;\n        }\n        return NumberParser.numberParser(this.getCulture(), options || { format: 'N' }, cldrData);\n    }\n    /**\n     * Returns the formatted string based on format options.\n     *\n     * @param {number} value - Specifies the number to format.\n     * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string} ?\n     */\n    formatNumber(value, option) {\n        return this.getNumberFormat(option)(value);\n    }\n    /**\n     * Returns the formatted date string based on format options.\n     *\n     * @param {Date} value - Specifies the number to format.\n     * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string} ?\n     */\n    formatDate(value, option) {\n        return this.getDateFormat(option)(value);\n    }\n    /**\n     * Returns the date object for given date string and options.\n     *\n     * @param {string} value - Specifies the string to parse.\n     * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.\n     * @returns {Date} ?\n     */\n    parseDate(value, option) {\n        return this.getDateParser(option)(value);\n    }\n    /**\n     * Returns the number object from the given string value and options.\n     *\n     * @param {string} value - Specifies the string to parse.\n     * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.\n     * @returns {number} ?\n     */\n    parseNumber(value, option) {\n        return this.getNumberParser(option)(value);\n    }\n    /**\n     * Returns Native Date Time Pattern\n     *\n     * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.\n     * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.\n     * @returns {string} ?\n     * @private\n     */\n    getDatePattern(option, isExcelFormat) {\n        return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);\n    }\n    /**\n     * Returns Native Number Pattern\n     *\n     * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.\n     * @param {boolean} isExcel ?\n     * @returns {string} ?\n     * @private\n     */\n    getNumberPattern(option, isExcel) {\n        return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);\n    }\n    /**\n     * Returns the First Day of the Week\n     *\n     * @returns {number} ?\n     */\n    getFirstDayOfWeek() {\n        return IntlBase.getWeekData(this.getCulture(), cldrData);\n    }\n    /**\n     * Returns the culture\n     *\n     * @returns {string} ?\n     */\n    getCulture() {\n        return this.culture || defaultCulture;\n    }\n}\n/**\n * Set the default culture to all EJ2 components\n *\n * @param {string} cultureName - Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\nfunction setCulture(cultureName) {\n    defaultCulture = cultureName;\n    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });\n}\n/**\n * Set the default currency code to all EJ2 components\n *\n * @param {string} currencyCode Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\nfunction setCurrencyCode(currencyCode) {\n    defaultCurrencyCode = currencyCode;\n    onIntlChange.notify('notifyExternalChange', { 'currencyCode': defaultCurrencyCode });\n}\n/**\n * Load the CLDR data into context\n *\n * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.\n * @returns {void} ?\n */\nfunction loadCldr(...data) {\n    for (const obj of data) {\n        extend(cldrData, obj, {}, true);\n    }\n}\n/**\n * To enable or disable RTL functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.\n * @returns {void} ?\n */\nfunction enableRtl(status = true) {\n    rightToLeft = status;\n    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });\n}\n/**\n * To get the numeric CLDR object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} type ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\nfunction getNumericObject(locale, type) {\n    // eslint-disable-next-line\n    let numObject = IntlBase.getDependables(cldrData, locale, '', true)[mapper[0]];\n    // eslint-disable-next-line\n    const dateObject = IntlBase.getDependables(cldrData, locale, '')[mapper[1]];\n    const numSystem = getValue('defaultNumberingSystem', numObject);\n    const symbPattern = isBlazor() ? getValue('numberSymbols', numObject) : getValue('symbols-numberSystem-' + numSystem, numObject);\n    const pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);\n    return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), { 'dateSeparator': IntlBase.getDateSeparator(dateObject) });\n}\n/**\n * To get the numeric CLDR  number base object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} currency - Specifies the currency for which numericObject to be returned.\n * @returns {string} ?\n * @ignore\n * @private\n */\nfunction getNumberDependable(locale, currency) {\n    // eslint-disable-next-line\n    const numObject = IntlBase.getDependables(cldrData, locale, '', true);\n    // eslint-disable-next-line\n    return IntlBase.getCurrencySymbol(numObject.numericObject, currency);\n}\n/**\n * To get the default date CLDR object.\n *\n * @param {string} mode ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\nfunction getDefaultDateObject(mode) {\n    // eslint-disable-next-line\n    return IntlBase.getDependables(cldrData, '', mode, false)[mapper[1]];\n}\n\nconst blazorCultureFormats = {\n    'en-US': {\n        'd': 'M/d/y',\n        'D': 'EEEE, MMMM d, y',\n        'f': 'EEEE, MMMM d, y h:mm a',\n        'F': 'EEEE, MMMM d, y h:mm:s a',\n        'g': 'M/d/y h:mm a',\n        'G': 'M/d/yyyy h:mm:ss tt',\n        'm': 'MMMM d',\n        'M': 'MMMM d',\n        'r': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n        'R': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n        's': 'yyyy\\'-\\'MM\\'-\\'dd\\'T\\'HH\\':\\'mm\\':\\'ss',\n        't': 'h:mm tt',\n        'T': 'h:m:s tt',\n        'u': 'yyyy\\'-\\'MM\\'-\\'dd HH\\':\\'mm\\':\\'ss\\'Z\\'',\n        'U': 'dddd, MMMM d, yyyy h:mm:ss tt',\n        'y': 'MMMM yyyy',\n        'Y': 'MMMM yyyy'\n    }\n};\n/**\n * Date base common constants and function for date parser and formatter.\n */\n// eslint-disable-next-line\nvar IntlBase;\n(function (IntlBase) {\n    // tslint:disable-next-line:max-line-length\n    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*[0#\\ ]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;\n    const fractionRegex = /[0-9]/g;\n    IntlBase.defaultCurrency = '$';\n    const mapper = ['infinity', 'nan', 'group', 'decimal'];\n    const patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;\n    const patternMatch = {\n        'G': '',\n        'M': 'm',\n        'L': 'm',\n        'H': 'h',\n        'c': 'd',\n        '\\'': '\"',\n        ' a': ' AM/PM',\n        'yy': 'yy',\n        'y': 'yyyy',\n        'EEEE': 'dddd',\n        'E': 'ddd'\n    };\n    IntlBase.dateConverterMapper = /dddd|ddd/ig;\n    const defaultFirstDay = 'sun';\n    IntlBase.islamicRegex = /^islamic/;\n    const firstDayMapper = {\n        'sun': 0,\n        'mon': 1,\n        'tue': 2,\n        'wed': 3,\n        'thu': 4,\n        'fri': 5,\n        'sat': 6\n    };\n    IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n    IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;\n    IntlBase.curWithoutNumberRegex = /(c|a)$/ig;\n    const typeMapper = {\n        '$': 'isCurrency',\n        '%': 'isPercent',\n        '-': 'isNegative',\n        0: 'nlead',\n        1: 'nend'\n    };\n    IntlBase.dateParseRegex = /([a-z])\\1*|'([^']|'')+'|''|./gi;\n    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];\n    /* tslint:disable:quotemark */\n    IntlBase.defaultObject = {\n        'dates': {\n            'calendars': {\n                'gregorian': {\n                    'months': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                '1': 'Jan',\n                                '2': 'Feb',\n                                '3': 'Mar',\n                                '4': 'Apr',\n                                '5': 'May',\n                                '6': 'Jun',\n                                '7': 'Jul',\n                                '8': 'Aug',\n                                '9': 'Sep',\n                                '10': 'Oct',\n                                '11': 'Nov',\n                                '12': 'Dec'\n                            },\n                            'narrow': {\n                                '1': 'J',\n                                '2': 'F',\n                                '3': 'M',\n                                '4': 'A',\n                                '5': 'M',\n                                '6': 'J',\n                                '7': 'J',\n                                '8': 'A',\n                                '9': 'S',\n                                '10': 'O',\n                                '11': 'N',\n                                '12': 'D'\n                            },\n                            'wide': {\n                                '1': 'January',\n                                '2': 'February',\n                                '3': 'March',\n                                '4': 'April',\n                                '5': 'May',\n                                '6': 'June',\n                                '7': 'July',\n                                '8': 'August',\n                                '9': 'September',\n                                '10': 'October',\n                                '11': 'November',\n                                '12': 'December'\n                            }\n                        }\n                    },\n                    'days': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                'sun': 'Sun',\n                                'mon': 'Mon',\n                                'tue': 'Tue',\n                                'wed': 'Wed',\n                                'thu': 'Thu',\n                                'fri': 'Fri',\n                                'sat': 'Sat'\n                            },\n                            'narrow': {\n                                'sun': 'S',\n                                'mon': 'M',\n                                'tue': 'T',\n                                'wed': 'W',\n                                'thu': 'T',\n                                'fri': 'F',\n                                'sat': 'S'\n                            },\n                            'short': {\n                                'sun': 'Su',\n                                'mon': 'Mo',\n                                'tue': 'Tu',\n                                'wed': 'We',\n                                'thu': 'Th',\n                                'fri': 'Fr',\n                                'sat': 'Sa'\n                            },\n                            'wide': {\n                                'sun': 'Sunday',\n                                'mon': 'Monday',\n                                'tue': 'Tuesday',\n                                'wed': 'Wednesday',\n                                'thu': 'Thursday',\n                                'fri': 'Friday',\n                                'sat': 'Saturday'\n                            }\n                        }\n                    },\n                    'dayPeriods': {\n                        'format': {\n                            'wide': {\n                                'am': 'AM',\n                                'pm': 'PM'\n                            }\n                        }\n                    },\n                    'eras': {\n                        'eraNames': {\n                            '0': 'Before Christ',\n                            '0-alt-variant': 'Before Common Era',\n                            '1': 'Anno Domini',\n                            '1-alt-variant': 'Common Era'\n                        },\n                        'eraAbbr': {\n                            '0': 'BC',\n                            '0-alt-variant': 'BCE',\n                            '1': 'AD',\n                            '1-alt-variant': 'CE'\n                        },\n                        'eraNarrow': {\n                            '0': 'B',\n                            '0-alt-variant': 'BCE',\n                            '1': 'A',\n                            '1-alt-variant': 'CE'\n                        }\n                    },\n                    'dateFormats': {\n                        'full': 'EEEE, MMMM d, y',\n                        'long': 'MMMM d, y',\n                        'medium': 'MMM d, y',\n                        'short': 'M/d/yy'\n                    },\n                    'timeFormats': {\n                        'full': 'h:mm:ss a zzzz',\n                        'long': 'h:mm:ss a z',\n                        'medium': 'h:mm:ss a',\n                        'short': 'h:mm a'\n                    },\n                    'dateTimeFormats': {\n                        'full': '{1} \\'at\\' {0}',\n                        'long': '{1} \\'at\\' {0}',\n                        'medium': '{1}, {0}',\n                        'short': '{1}, {0}',\n                        'availableFormats': {\n                            'd': 'd',\n                            'E': 'ccc',\n                            'Ed': 'd E',\n                            'Ehm': 'E h:mm a',\n                            'EHm': 'E HH:mm',\n                            'Ehms': 'E h:mm:ss a',\n                            'EHms': 'E HH:mm:ss',\n                            'Gy': 'y G',\n                            'GyMMM': 'MMM y G',\n                            'GyMMMd': 'MMM d, y G',\n                            'GyMMMEd': 'E, MMM d, y G',\n                            'h': 'h a',\n                            'H': 'HH',\n                            'hm': 'h:mm a',\n                            'Hm': 'HH:mm',\n                            'hms': 'h:mm:ss a',\n                            'Hms': 'HH:mm:ss',\n                            'hmsv': 'h:mm:ss a v',\n                            'Hmsv': 'HH:mm:ss v',\n                            'hmv': 'h:mm a v',\n                            'Hmv': 'HH:mm v',\n                            'M': 'L',\n                            'Md': 'M/d',\n                            'MEd': 'E, M/d',\n                            'MMM': 'LLL',\n                            'MMMd': 'MMM d',\n                            'MMMEd': 'E, MMM d',\n                            'MMMMd': 'MMMM d',\n                            'ms': 'mm:ss',\n                            'y': 'y',\n                            'yM': 'M/y',\n                            'yMd': 'M/d/y',\n                            'yMEd': 'E, M/d/y',\n                            'yMMM': 'MMM y',\n                            'yMMMd': 'MMM d, y',\n                            'yMMMEd': 'E, MMM d, y',\n                            'yMMMM': 'MMMM y'\n                        }\n                    }\n                },\n                'islamic': {\n                    'months': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                '1': 'Muh.',\n                                '2': 'Saf.',\n                                '3': 'Rab. I',\n                                '4': 'Rab. II',\n                                '5': 'Jum. I',\n                                '6': 'Jum. II',\n                                '7': 'Raj.',\n                                '8': 'Sha.',\n                                '9': 'Ram.',\n                                '10': 'Shaw.',\n                                '11': 'Dhuʻl-Q.',\n                                '12': 'Dhuʻl-H.'\n                            },\n                            'narrow': {\n                                '1': '1',\n                                '2': '2',\n                                '3': '3',\n                                '4': '4',\n                                '5': '5',\n                                '6': '6',\n                                '7': '7',\n                                '8': '8',\n                                '9': '9',\n                                '10': '10',\n                                '11': '11',\n                                '12': '12'\n                            },\n                            'wide': {\n                                '1': 'Muharram',\n                                '2': 'Safar',\n                                '3': 'Rabiʻ I',\n                                '4': 'Rabiʻ II',\n                                '5': 'Jumada I',\n                                '6': 'Jumada II',\n                                '7': 'Rajab',\n                                '8': 'Shaʻban',\n                                '9': 'Ramadan',\n                                '10': 'Shawwal',\n                                '11': 'Dhuʻl-Qiʻdah',\n                                '12': 'Dhuʻl-Hijjah'\n                            }\n                        }\n                    },\n                    'days': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                'sun': 'Sun',\n                                'mon': 'Mon',\n                                'tue': 'Tue',\n                                'wed': 'Wed',\n                                'thu': 'Thu',\n                                'fri': 'Fri',\n                                'sat': 'Sat'\n                            },\n                            'narrow': {\n                                'sun': 'S',\n                                'mon': 'M',\n                                'tue': 'T',\n                                'wed': 'W',\n                                'thu': 'T',\n                                'fri': 'F',\n                                'sat': 'S'\n                            },\n                            'short': {\n                                'sun': 'Su',\n                                'mon': 'Mo',\n                                'tue': 'Tu',\n                                'wed': 'We',\n                                'thu': 'Th',\n                                'fri': 'Fr',\n                                'sat': 'Sa'\n                            },\n                            'wide': {\n                                'sun': 'Sunday',\n                                'mon': 'Monday',\n                                'tue': 'Tuesday',\n                                'wed': 'Wednesday',\n                                'thu': 'Thursday',\n                                'fri': 'Friday',\n                                'sat': 'Saturday'\n                            }\n                        }\n                    },\n                    'dayPeriods': {\n                        'format': {\n                            'wide': {\n                                'am': 'AM',\n                                'pm': 'PM'\n                            }\n                        }\n                    },\n                    'eras': {\n                        'eraNames': {\n                            '0': 'AH'\n                        },\n                        'eraAbbr': {\n                            '0': 'AH'\n                        },\n                        'eraNarrow': {\n                            '0': 'AH'\n                        }\n                    },\n                    'dateFormats': {\n                        'full': 'EEEE, MMMM d, y G',\n                        'long': 'MMMM d, y G',\n                        'medium': 'MMM d, y G',\n                        'short': 'M/d/y GGGGG'\n                    },\n                    'timeFormats': {\n                        'full': 'h:mm:ss a zzzz',\n                        'long': 'h:mm:ss a z',\n                        'medium': 'h:mm:ss a',\n                        'short': 'h:mm a'\n                    },\n                    'dateTimeFormats': {\n                        'full': '{1} \\'at\\' {0}',\n                        'long': '{1} \\'at\\' {0}',\n                        'medium': '{1}, {0}',\n                        'short': '{1}, {0}',\n                        'availableFormats': {\n                            'd': 'd',\n                            'E': 'ccc',\n                            'Ed': 'd E',\n                            'Ehm': 'E h:mm a',\n                            'EHm': 'E HH:mm',\n                            'Ehms': 'E h:mm:ss a',\n                            'EHms': 'E HH:mm:ss',\n                            'Gy': 'y G',\n                            'GyMMM': 'MMM y G',\n                            'GyMMMd': 'MMM d, y G',\n                            'GyMMMEd': 'E, MMM d, y G',\n                            'h': 'h a',\n                            'H': 'HH',\n                            'hm': 'h:mm a',\n                            'Hm': 'HH:mm',\n                            'hms': 'h:mm:ss a',\n                            'Hms': 'HH:mm:ss',\n                            'M': 'L',\n                            'Md': 'M/d',\n                            'MEd': 'E, M/d',\n                            'MMM': 'LLL',\n                            'MMMd': 'MMM d',\n                            'MMMEd': 'E, MMM d',\n                            'MMMMd': 'MMMM d',\n                            'ms': 'mm:ss',\n                            'y': 'y G',\n                            'yyyy': 'y G',\n                            'yyyyM': 'M/y GGGGG',\n                            'yyyyMd': 'M/d/y GGGGG',\n                            'yyyyMEd': 'E, M/d/y GGGGG',\n                            'yyyyMMM': 'MMM y G',\n                            'yyyyMMMd': 'MMM d, y G',\n                            'yyyyMMMEd': 'E, MMM d, y G',\n                            'yyyyMMMM': 'MMMM y G',\n                            'yyyyQQQ': 'QQQ y G',\n                            'yyyyQQQQ': 'QQQQ y G'\n                        }\n                    }\n                }\n            },\n            'timeZoneNames': {\n                'hourFormat': '+HH:mm;-HH:mm',\n                'gmtFormat': 'GMT{0}',\n                'gmtZeroFormat': 'GMT'\n            }\n        },\n        'numbers': {\n            'currencies': {\n                'USD': {\n                    'displayName': 'US Dollar',\n                    'symbol': '$',\n                    'symbol-alt-narrow': '$'\n                },\n                'EUR': {\n                    'displayName': 'Euro',\n                    'symbol': '€',\n                    'symbol-alt-narrow': '€'\n                },\n                'GBP': {\n                    'displayName': 'British Pound',\n                    'symbol-alt-narrow': '£'\n                }\n            },\n            'defaultNumberingSystem': 'latn',\n            'minimumGroupingDigits': '1',\n            'symbols-numberSystem-latn': {\n                'decimal': '.',\n                'group': ',',\n                'list': ';',\n                'percentSign': '%',\n                'plusSign': '+',\n                'minusSign': '-',\n                'exponential': 'E',\n                'superscriptingExponent': '×',\n                'perMille': '‰',\n                'infinity': '∞',\n                'nan': 'NaN',\n                'timeSeparator': ':'\n            },\n            'decimalFormats-numberSystem-latn': {\n                'standard': '#,##0.###'\n            },\n            'percentFormats-numberSystem-latn': {\n                'standard': '#,##0%'\n            },\n            'currencyFormats-numberSystem-latn': {\n                'standard': '¤#,##0.00',\n                'accounting': '¤#,##0.00;(¤#,##0.00)'\n            },\n            'scientificFormats-numberSystem-latn': {\n                'standard': '#E0'\n            }\n        }\n    };\n    IntlBase.blazorDefaultObject = {\n        'numbers': {\n            'mapper': {\n                '0': '0',\n                '1': '1',\n                '2': '2',\n                '3': '3',\n                '4': '4',\n                '5': '5',\n                '6': '6',\n                '7': '7',\n                '8': '8',\n                '9': '9'\n            },\n            'mapperDigits': '0123456789',\n            'numberSymbols': {\n                'decimal': '.',\n                'group': ',',\n                'plusSign': '+',\n                'minusSign': '-',\n                'percentSign': '%',\n                'nan': 'NaN',\n                'timeSeparator': ':',\n                'infinity': '∞'\n            },\n            'timeSeparator': ':',\n            'currencySymbol': '$',\n            'currencypData': {\n                'nlead': '$',\n                'nend': '',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'percentpData': {\n                'nlead': '',\n                'nend': '%',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'percentnData': {\n                'nlead': '-',\n                'nend': '%',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'currencynData': {\n                'nlead': '($',\n                'nend': ')',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'decimalnData': {\n                'nlead': '-',\n                'nend': '',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'decimalpData': {\n                'nlead': '',\n                'nend': '',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            }\n        },\n        'dates': {\n            'dayPeriods': {\n                'am': 'AM',\n                'pm': 'PM'\n            },\n            'dateSeperator': '/',\n            'days': {\n                'abbreviated': {\n                    'sun': 'Sun',\n                    'mon': 'Mon',\n                    'tue': 'Tue',\n                    'wed': 'Wed',\n                    'thu': 'Thu',\n                    'fri': 'Fri',\n                    'sat': 'Sat'\n                },\n                'short': {\n                    'sun': 'Su',\n                    'mon': 'Mo',\n                    'tue': 'Tu',\n                    'wed': 'We',\n                    'thu': 'Th',\n                    'fri': 'Fr',\n                    'sat': 'Sa'\n                },\n                'wide': {\n                    'sun': 'Sunday',\n                    'mon': 'Monday',\n                    'tue': 'Tuesday',\n                    'wed': 'Wednesday',\n                    'thu': 'Thursday',\n                    'fri': 'Friday',\n                    'sat': 'Saturday'\n                }\n            },\n            'months': {\n                'abbreviated': {\n                    '1': 'Jan',\n                    '2': 'Feb',\n                    '3': 'Mar',\n                    '4': 'Apr',\n                    '5': 'May',\n                    '6': 'Jun',\n                    '7': 'Jul',\n                    '8': 'Aug',\n                    '9': 'Sep',\n                    '10': 'Oct',\n                    '11': 'Nov',\n                    '12': 'Dec'\n                },\n                'wide': {\n                    '1': 'January',\n                    '2': 'February',\n                    '3': 'March',\n                    '4': 'April',\n                    '5': 'May',\n                    '6': 'June',\n                    '7': 'July',\n                    '8': 'August',\n                    '9': 'September',\n                    '10': 'October',\n                    '11': 'November',\n                    '12': 'December'\n                }\n            },\n            'eras': {\n                '1': 'AD'\n            }\n        }\n    };\n    /* tslint:enable:quotemark */\n    IntlBase.monthIndex = {\n        3: 'abbreviated',\n        4: 'wide',\n        5: 'narrow',\n        1: 'abbreviated'\n    };\n    /**\n     *\n     */\n    IntlBase.month = 'months';\n    IntlBase.days = 'days';\n    /**\n     * Default numerber Object\n     */\n    IntlBase.patternMatcher = {\n        C: 'currency',\n        P: 'percent',\n        N: 'decimal',\n        A: 'currency',\n        E: 'scientific'\n    };\n    /**\n     * Returns the resultant pattern based on the skeleton, dateObject and the type provided\n     *\n     * @private\n     * @param {string} skeleton ?\n     * @param {Object} dateObject ?\n     * @param {string} type ?\n     * @param {boolean} isIslamic ?\n     * @param {string} blazorCulture ?\n     * @returns {string} ?\n     */\n    function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {\n        let resPattern;\n        const iType = type || 'date';\n        if (blazorCulture) {\n            resPattern = compareBlazorDateFormats({ skeleton: skeleton }, blazorCulture).format ||\n                compareBlazorDateFormats({ skeleton: 'd' }, 'en-US').format;\n        }\n        else {\n            if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {\n                resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);\n                if (iType === 'dateTime') {\n                    const dPattern = getValue('dateFormats.' + skeleton, dateObject);\n                    const tPattern = getValue('timeFormats.' + skeleton, dateObject);\n                    resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);\n                }\n            }\n            else {\n                resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);\n            }\n            if (isUndefined(resPattern) && skeleton === 'yMd') {\n                resPattern = 'M/d/y';\n            }\n        }\n        return resPattern;\n    }\n    IntlBase.getResultantPattern = getResultantPattern;\n    /**\n     * Returns the dependable object for provided cldr data and culture\n     *\n     * @private\n     * @param {Object} cldr ?\n     * @param {string} culture ?\n     * @param {string} mode ?\n     * @param {boolean} isNumber ?\n     * @returns {any} ?\n     */\n    function getDependables(cldr, culture, mode, isNumber) {\n        const ret = {};\n        const calendartype = mode || 'gregorian';\n        ret.parserObject = ParserBase.getMainObject(cldr, culture) || (isBlazor() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);\n        if (isNumber) {\n            ret.numericObject = getValue('numbers', ret.parserObject);\n        }\n        else {\n            const dateString = isBlazor() ? 'dates' : ('dates.calendars.' + calendartype);\n            ret.dateObject = getValue(dateString, ret.parserObject);\n        }\n        return ret;\n    }\n    IntlBase.getDependables = getDependables;\n    /**\n     * Returns the symbol pattern for provided parameters\n     *\n     * @private\n     * @param {string} type ?\n     * @param {string} numSystem ?\n     * @param {Object} obj ?\n     * @param {boolean} isAccount ?\n     * @returns {string} ?\n     */\n    function getSymbolPattern(type, numSystem, obj, isAccount) {\n        return getValue(type + 'Formats-numberSystem-' +\n            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' +\n            numSystem + '.standard', obj) : '');\n    }\n    IntlBase.getSymbolPattern = getSymbolPattern;\n    /**\n     *\n     * @param {string} format ?\n     * @returns {string} ?\n     */\n    function ConvertDateToWeekFormat(format) {\n        const convertMapper = format.match(IntlBase.dateConverterMapper);\n        if (convertMapper && isBlazor()) {\n            const tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';\n            return format.replace(IntlBase.dateConverterMapper, tempString);\n        }\n        return format;\n    }\n    IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;\n    /**\n     *\n     * @param {DateFormatOptions} formatOptions ?\n     * @param {string} culture ?\n     * @returns {DateFormatOptions} ?\n     */\n    function compareBlazorDateFormats(formatOptions, culture) {\n        const format = formatOptions.format || formatOptions.skeleton;\n        let curFormatMapper = getValue((culture || 'en-US') + '.' + format, blazorCultureFormats);\n        if (!curFormatMapper) {\n            curFormatMapper = getValue('en-US.' + format, blazorCultureFormats);\n        }\n        if (curFormatMapper) {\n            curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);\n            formatOptions.format = curFormatMapper.replace(/tt/, 'a');\n        }\n        return formatOptions;\n    }\n    IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;\n    /**\n     * Returns proper numeric skeleton\n     *\n     * @private\n     * @param {string} skeleton ?\n     * @returns {any} ?\n     */\n    function getProperNumericSkeleton(skeleton) {\n        const matches = skeleton.match(IntlBase.formatRegex);\n        const ret = {};\n        const pattern = matches[1].toUpperCase();\n        ret.isAccount = (pattern === 'A');\n        // eslint-disable-next-line\n        ret.type = IntlBase.patternMatcher[pattern];\n        if (skeleton.length > 1) {\n            ret.fractionDigits = parseInt(matches[2], 10);\n        }\n        return ret;\n    }\n    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;\n    /**\n     * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,\n     *\n     * @private\n     * @param {string} pattern ?\n     * @param {boolean} needFraction ?\n     * @param {string} cSymbol ?\n     * @param {boolean} fractionOnly ?\n     * @returns {any} ?\n     */\n    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {\n        const nData = fractionOnly ? {} : { nlead: '', nend: '' };\n        const match = pattern.match(IntlBase.customRegex);\n        if (match) {\n            if (!fractionOnly) {\n                nData.nlead = changeCurrencySymbol(match[1], cSymbol);\n                nData.nend = changeCurrencySymbol(match[10], cSymbol);\n                nData.groupPattern = match[4];\n            }\n            const fraction = match[7];\n            if (fraction && needFraction) {\n                const fmatch = fraction.match(fractionRegex);\n                if (!isNullOrUndefined(fmatch)) {\n                    nData.minimumFraction = fmatch.length;\n                }\n                else {\n                    nData.minimumFraction = 0;\n                }\n                nData.maximumFraction = fraction.length - 1;\n            }\n        }\n        return nData;\n    }\n    IntlBase.getFormatData = getFormatData;\n    /**\n     * Changes currency symbol\n     *\n     * @private\n     * @param {string} val ?\n     * @param {string} sym ?\n     * @returns {string} ?\n     */\n    function changeCurrencySymbol(val, sym) {\n        if (val) {\n            return val.replace(IntlBase.defaultCurrency, sym);\n        }\n        return '';\n    }\n    IntlBase.changeCurrencySymbol = changeCurrencySymbol;\n    /**\n     * Returns currency symbol based on currency code ?\n     *\n     * @private\n     * @param {Object} numericObject ?\n     * @param {string} currencyCode ?\n     * @param {string} altSymbol ?\n     * @returns {string} ?\n     */\n    function getCurrencySymbol(numericObject, currencyCode, altSymbol) {\n        const symbol = altSymbol ? ('.' + altSymbol) : '.symbol';\n        const getCurrency = getValue('currencies.' + currencyCode + symbol, numericObject) ||\n            getValue('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';\n        return getCurrency;\n    }\n    IntlBase.getCurrencySymbol = getCurrencySymbol;\n    /**\n     * Returns formatting options for custom number format\n     *\n     * @private\n     * @param {string} format ?\n     * @param {CommonOptions} dOptions ?\n     * @param {any} obj ?\n     * @returns {any} ?\n     */\n    function customFormat(format, dOptions, obj) {\n        const options = {};\n        const formatSplit = format.split(';');\n        const data = ['pData', 'nData', 'zeroData'];\n        for (let i = 0; i < formatSplit.length; i++) {\n            // eslint-disable-next-line\n            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);\n        }\n        if (isNullOrUndefined(options.nData)) {\n            options.nData = extend({}, options.pData);\n            options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;\n        }\n        return options;\n    }\n    IntlBase.customFormat = customFormat;\n    /**\n     * Returns custom formatting options\n     *\n     * @private\n     * @param {string} format ?\n     * @param {CommonOptions} dOptions ?\n     * @param {Object} numObject ?\n     * @returns {any} ?\n     */\n    function customNumberFormat(format, dOptions, numObject) {\n        const cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };\n        const pattern = format.match(IntlBase.customRegex);\n        if (isNullOrUndefined(pattern) || (pattern[5] === '' && format !== 'N/A')) {\n            cOptions.type = undefined;\n            return cOptions;\n        }\n        cOptions.nlead = pattern[1];\n        cOptions.nend = pattern[10];\n        let integerPart = pattern[6];\n        const spaceCapture = integerPart.match(/\\ $/g) ? true : false;\n        const spaceGrouping = integerPart.replace(/\\ $/g, '').indexOf(' ') !== -1;\n        cOptions.useGrouping = integerPart.indexOf(',') !== -1 || spaceGrouping;\n        integerPart = spaceGrouping ? integerPart.replace(/,/g, '') : integerPart.replace(/,/g, '').replace(/\\ $/g, '');\n        const fractionPart = pattern[7];\n        if (integerPart.indexOf('0') !== -1) {\n            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');\n        }\n        if (!isNullOrUndefined(fractionPart)) {\n            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');\n            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');\n            if (cOptions.minimumFractionDigits === -1) {\n                cOptions.minimumFractionDigits = 0;\n            }\n            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {\n                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;\n            }\n        }\n        if (!isNullOrUndefined(dOptions)) {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));\n            if (!cOptions.isCurrency) {\n                extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));\n            }\n        }\n        else {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));\n        }\n        if (!isNullOrUndefined(numObject)) {\n            const symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);\n            if (cOptions.useGrouping) {\n                // eslint-disable-next-line\n                cOptions.groupSeparator = spaceGrouping ? ' ' : dOptions.numberMapper.numberSymbols[mapper[2]];\n                cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);\n            }\n            cOptions.nlead = cOptions.nlead.replace(/'/g, '');\n            cOptions.nend = spaceCapture ? ' ' + cOptions.nend.replace(/'/g, '') : cOptions.nend.replace(/'/g, '');\n        }\n        return cOptions;\n    }\n    IntlBase.customNumberFormat = customNumberFormat;\n    /**\n     * Returns formatting options for currency or percent type\n     *\n     * @private\n     * @param {string[]} parts ?\n     * @param {string} actual ?\n     * @param {string} symbol ?\n     * @returns {any} ?\n     */\n    function isCurrencyPercent(parts, actual, symbol) {\n        const options = { nlead: parts[0], nend: parts[1] };\n        for (let i = 0; i < 2; i++) {\n            const part = parts[i];\n            const loc = part.indexOf(actual);\n            if ((loc !== -1) && ((loc < part.indexOf('\\'')) || (loc > part.lastIndexOf('\\'')))) {\n                // eslint-disable-next-line\n                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);\n                // eslint-disable-next-line\n                options[typeMapper[actual]] = true;\n                options.type = options.isCurrency ? 'currency' : 'percent';\n                break;\n            }\n        }\n        return options;\n    }\n    IntlBase.isCurrencyPercent = isCurrencyPercent;\n    /**\n     * Returns culture based date separator\n     *\n     * @private\n     * @param {Object} dateObj ?\n     * @returns {string} ?\n     */\n    function getDateSeparator(dateObj) {\n        const value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);\n        return value ? value[1] : '/';\n    }\n    IntlBase.getDateSeparator = getDateSeparator;\n    /**\n     * Returns Native Date Time pattern\n     *\n     * @private\n     * @param {string} culture ?\n     * @param {DateFormatOptions} options ?\n     * @param {Object} cldr ?\n     * @param {boolean} isExcelFormat ?\n     * @returns {string} ?\n     */\n    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {\n        const dependable = getDependables(cldr, culture, options.calendar);\n        if (isBlazor()) {\n            options = compareBlazorDateFormats(options, culture);\n        }\n        let actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);\n        if (isExcelFormat) {\n            actualPattern = actualPattern.replace(patternRegex, (pattern) => {\n                // eslint-disable-next-line\n                return patternMatch[pattern];\n            });\n            if (actualPattern.indexOf('z') !== -1) {\n                const tLength = actualPattern.match(/z/g).length;\n                let timeZonePattern;\n                const options = { 'timeZone': {} };\n                options.numMapper = ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n                options.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                const value = new Date();\n                const timezone = value.getTimezoneOffset();\n                let pattern = (tLength < 4) ? '+H;-H' : options.timeZone.hourFormat;\n                pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n                if (timezone === 0) {\n                    timeZonePattern = options.timeZone.gmtZeroFormat;\n                }\n                else {\n                    timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);\n                    timeZonePattern = options.timeZone.gmtFormat.replace(/\\{0\\}/, timeZonePattern);\n                }\n                actualPattern = actualPattern.replace(/[z]+/, '\"' + timeZonePattern + '\"');\n            }\n            actualPattern = actualPattern.replace(/ $/, '');\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;\n    /**\n     *\n     * @param {string} actual ?\n     * @param {any} option ?\n     * @returns {any} ?\n     */\n    // eslint-disable-next-line\n    function processSymbol(actual, option) {\n        if (actual.indexOf(',') !== -1) {\n            // eslint-disable-next-line\n            let split = actual.split(',');\n            actual = (split[0] + getValue('numberMapper.numberSymbols.group', option) +\n                split[1].replace('.', getValue('numberMapper.numberSymbols.decimal', option)));\n        }\n        else {\n            actual = actual.replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n        }\n        return actual;\n    }\n    /**\n     * Returns Native Number pattern\n     *\n     * @private\n     * @param {string} culture ?\n     * @param {NumberFormatOptions} options ?\n     * @param {Object} cldr ?\n     * @param {boolean} isExcel ?\n     * @returns {string} ?\n     */\n    function getActualNumberFormat(culture, options, cldr, isExcel) {\n        const dependable = getDependables(cldr, culture, '', true);\n        const parseOptions = { custom: true };\n        const numrericObject = dependable.numericObject;\n        let minFrac;\n        const curObj = {};\n        const curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);\n        const type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};\n        const dOptions = {};\n        if (curMatch) {\n            dOptions.numberMapper = isBlazor() ?\n                extend({}, dependable.numericObject) :\n                ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n            const curCode = isBlazor() ? getValue('currencySymbol', dependable.numericObject) :\n                getCurrencySymbol(dependable.numericObject, options.currency || defaultCurrencyCode, options.altSymbol);\n            let symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));\n            symbolPattern = symbolPattern.replace(/\\u00A4/g, curCode);\n            const split = symbolPattern.split(';');\n            curObj.hasNegativePattern = isBlazor() ? true : (split.length > 1);\n            curObj.nData = isBlazor() ? getValue(type.type + 'nData', numrericObject) :\n                getFormatData(split[1] || '-' + split[0], true, curCode);\n            curObj.pData = isBlazor() ? getValue(type.type + 'pData', numrericObject) :\n                getFormatData(split[0], false, curCode);\n            if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {\n                minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;\n            }\n        }\n        let actualPattern;\n        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {\n            extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));\n            parseOptions.custom = false;\n            actualPattern = '###0';\n            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {\n                const defaultMinimum = 0;\n                if (parseOptions.fractionDigits) {\n                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;\n                }\n                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||\n                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);\n            }\n            if (options.minimumIntegerDigits) {\n                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);\n            }\n            if (options.useGrouping) {\n                actualPattern = groupingPattern(actualPattern);\n            }\n            if (parseOptions.type === 'currency' || (parseOptions.type && isBlazor())) {\n                if (isBlazor() && parseOptions.type !== 'currency') {\n                    curObj.pData = getValue(parseOptions.type + 'pData', numrericObject);\n                    curObj.nData = getValue(parseOptions.type + 'nData', numrericObject);\n                }\n                const cPattern = actualPattern;\n                actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;\n                if (curObj.hasNegativePattern || isBlazor()) {\n                    actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;\n                }\n            }\n            if (parseOptions.type === 'percent' && !isBlazor()) {\n                actualPattern += ' %';\n            }\n        }\n        else {\n            actualPattern = options.format.replace(/'/g, '\"');\n        }\n        if (Object.keys(dOptions).length > 0) {\n            actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualNumberFormat = getActualNumberFormat;\n    /**\n     *\n     * @param {string} pattern ?\n     * @param {number} minDigits ?\n     * @param {number} maxDigits ?\n     * @returns {string} ?\n     */\n    function fractionDigitsPattern(pattern, minDigits, maxDigits) {\n        pattern += '.';\n        for (let a = 0; a < minDigits; a++) {\n            pattern += '0';\n        }\n        if (minDigits < maxDigits) {\n            const diff = maxDigits - minDigits;\n            for (let b = 0; b < diff; b++) {\n                pattern += '#';\n            }\n        }\n        return pattern;\n    }\n    IntlBase.fractionDigitsPattern = fractionDigitsPattern;\n    /**\n     *\n     * @param {string} pattern ?\n     * @param {number} digits ?\n     * @returns {string} ?\n     */\n    function minimumIntegerPattern(pattern, digits) {\n        const temp = pattern.split('.');\n        let integer = '';\n        for (let x = 0; x < digits; x++) {\n            integer += '0';\n        }\n        return temp[1] ? (integer + '.' + temp[1]) : integer;\n    }\n    IntlBase.minimumIntegerPattern = minimumIntegerPattern;\n    /**\n     *\n     * @param {string} pattern ?\n     * @returns {string} ?\n     */\n    function groupingPattern(pattern) {\n        const temp = pattern.split('.');\n        let integer = temp[0];\n        const no = 3 - integer.length % 3;\n        const hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');\n        integer = hash + integer;\n        pattern = '';\n        for (let x = integer.length - 1; x > 0; x = x - 3) {\n            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;\n        }\n        pattern = pattern.slice(1);\n        return temp[1] ? (pattern + '.' + temp[1]) : pattern;\n    }\n    IntlBase.groupingPattern = groupingPattern;\n    /**\n     *\n     * @param {string} culture ?\n     * @param {Object} cldr ?\n     * @returns {number} ?\n     */\n    function getWeekData(culture, cldr) {\n        let firstDay = defaultFirstDay;\n        const mapper = getValue('supplemental.weekData.firstDay', cldr);\n        let iCulture = culture;\n        if ((/en-/).test(iCulture)) {\n            iCulture = iCulture.slice(3);\n        }\n        iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);\n        if (mapper) {\n            firstDay = mapper[iCulture] || mapper[iCulture.slice(0, 2)] || defaultFirstDay;\n        }\n        return firstDayMapper[firstDay];\n    }\n    IntlBase.getWeekData = getWeekData;\n    /**\n     * @private\n     * @param {any} pData ?\n     * @param {string} aCurrency ?\n     * @param {string} rCurrency ?\n     * @returns {void} ?\n     */\n    function replaceBlazorCurrency(pData, aCurrency, rCurrency) {\n        const iCurrency = getBlazorCurrencySymbol(rCurrency);\n        if (aCurrency !== iCurrency) {\n            for (const data of pData) {\n                data.nend = data.nend.replace(aCurrency, iCurrency);\n                data.nlead = data.nlead.replace(aCurrency, iCurrency);\n            }\n        }\n    }\n    IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;\n    /**\n     * @private\n     * @param {Date} date ?\n     * @returns {number} ?\n     */\n    function getWeekOfYear(date) {\n        const newYear = new Date(date.getFullYear(), 0, 1);\n        let day = newYear.getDay();\n        let weeknum;\n        day = (day >= 0 ? day : day + 7);\n        const daynum = Math.floor((date.getTime() - newYear.getTime() -\n            (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n        if (day < 4) {\n            weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n            if (weeknum > 52) {\n                const nYear = new Date(date.getFullYear() + 1, 0, 1);\n                let nday = nYear.getDay();\n                nday = nday >= 0 ? nday : nday + 7;\n                weeknum = nday < 4 ? 1 : 53;\n            }\n        }\n        else {\n            weeknum = Math.floor((daynum + day - 1) / 7);\n        }\n        return weeknum;\n    }\n    IntlBase.getWeekOfYear = getWeekOfYear;\n})(IntlBase || (IntlBase = {}));\n\nconst headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nconst defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\nclass Ajax {\n    /**\n     * Constructor for Ajax class\n     *\n     * @param  {string|Object} options ?\n     * @param  {string} type ?\n     * @param  {boolean} async ?\n     * @returns defaultType any\n     */\n    constructor(options, type, async, contentType) {\n        /**\n         * A boolean value indicating whether the request should be sent asynchronous or not.\n         *\n         * @default true\n         */\n        this.mode = true;\n        /**\n         * A boolean value indicating whether to ignore the promise reject.\n         *\n         * @private\n         * @default true\n         */\n        this.emitError = true;\n        this.options = {};\n        if (typeof options === 'string') {\n            this.url = options;\n            this.type = type ? type.toUpperCase() : defaultType;\n            this.mode = !isNullOrUndefined(async) ? async : true;\n        }\n        else if (typeof options === 'object') {\n            this.options = options;\n            merge(this, this.options);\n        }\n        this.type = this.type ? this.type.toUpperCase() : defaultType;\n        this.contentType = (this.contentType !== undefined) ? this.contentType : contentType;\n    }\n    /**\n     *\n     * Send the request to server.\n     *\n     * @param {any} data - To send the user data\n     * @return {Promise} ?\n     */\n    send(data) {\n        this.data = isNullOrUndefined(data) ? this.data : data;\n        const eventArgs = {\n            cancel: false,\n            httpRequest: null\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.httpRequest = new XMLHttpRequest();\n            this.httpRequest.onreadystatechange = () => { this.stateChange(resolve, reject); };\n            if (!isNullOrUndefined(this.onLoad)) {\n                this.httpRequest.onload = this.onLoad;\n            }\n            if (!isNullOrUndefined(this.onProgress)) {\n                this.httpRequest.onprogress = this.onProgress;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onAbort)) {\n                this.httpRequest.onabort = this.onAbort;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onError)) {\n                this.httpRequest.onerror = this.onError;\n            }\n            //** Upload Events **/\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onUploadProgress)) {\n                this.httpRequest.upload.onprogress = this.onUploadProgress;\n            }\n            this.httpRequest.open(this.type, this.url, this.mode);\n            // Set default headers\n            if (!isNullOrUndefined(this.data) && this.contentType !== null) {\n                this.httpRequest.setRequestHeader('Content-Type', this.contentType || 'application/json; charset=utf-8');\n            }\n            if (this.beforeSend) {\n                eventArgs.httpRequest = this.httpRequest;\n                this.beforeSend(eventArgs);\n            }\n            if (!eventArgs.cancel) {\n                this.httpRequest.send(!isNullOrUndefined(this.data) ? this.data : null);\n            }\n        });\n        return promise;\n    }\n    successHandler(data) {\n        if (this.onSuccess) {\n            this.onSuccess(data, this);\n        }\n        return data;\n    }\n    failureHandler(reason) {\n        if (this.onFailure) {\n            this.onFailure(this.httpRequest);\n        }\n        return reason;\n    }\n    stateChange(resolve, reject) {\n        let data = this.httpRequest.responseText;\n        if (this.dataType && this.dataType.toLowerCase() === 'json') {\n            if (data === '') {\n                data = undefined;\n            }\n            else {\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (error) {\n                    // no exception handle\n                }\n            }\n        }\n        if (this.httpRequest.readyState === 4) {\n            //success range should be 200 to 299\n            if ((this.httpRequest.status >= 200 && this.httpRequest.status <= 299) || this.httpRequest.status === 304) {\n                resolve(this.successHandler(data));\n            }\n            else {\n                if (this.emitError) {\n                    reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n                }\n                else {\n                    resolve();\n                }\n            }\n        }\n    }\n    /**\n     * To get the response header from XMLHttpRequest\n     *\n     * @param  {string} key Key to search in the response header\n     * @returns {string} ?\n     */\n    getResponseHeader(key) {\n        let responseHeaders;\n        let header;\n        // eslint-disable-next-line\n        responseHeaders = {};\n        let headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        while (headers) {\n            responseHeaders[headers[1].toLowerCase()] = headers[2];\n            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        }\n        // eslint-disable-next-line\n        header = responseHeaders[key.toLowerCase()];\n        return isNullOrUndefined(header) ? null : header;\n    }\n}\n\nconst REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nconst REGX_IE = /msie|trident/i;\nconst REGX_IE11 = /Trident\\/7\\./;\nconst REGX_IOS = /(ipad|iphone|ipod touch)/i;\nconst REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nconst REGX_ANDROID = /android/i;\nconst REGX_WINDOWS = /trident|windows phone|edge/i;\nconst REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nconst REGX_BROWSER = {\n    OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n    EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n    CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n    PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n    SAFARI: /(safari)[ /]([\\w.]+)/i,\n    WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n    MSIE: /(msie|trident) ([\\w.]+)/i,\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n    window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\nclass Browser {\n    static extractBrowserDetail() {\n        const browserInfo = { culture: {} };\n        const keys = Object.keys(REGX_BROWSER);\n        let clientInfo = [];\n        for (const key of keys) {\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n            if (clientInfo) {\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\n                browserInfo.version = clientInfo[2];\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n                // eslint-disable-next-line\n                if (!!Browser.userAgent.match(REGX_IE11)) {\n                    browserInfo.name = 'msie';\n                    break;\n                }\n                const version = Browser.userAgent.match(REGX_VERSION);\n                if (browserInfo.name === 'safari' && version) {\n                    browserInfo.version = version[2];\n                }\n                break;\n            }\n        }\n        return browserInfo;\n    }\n    /**\n     * To get events from the browser\n     *\n     * @param {string} event - type of event triggered.\n     * @returns {boolean}\n     */\n    static getEvent(event) {\n        // eslint-disable-next-line\n        const events = {\n            start: {\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\n            },\n            move: {\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\n            },\n            end: {\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\n            },\n            cancel: {\n                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'\n            }\n        };\n        return (Browser.isPointer ? events[event].isPointer :\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\n                : events[event].isDevice));\n    }\n    /**\n     * To get the Touch start event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchStartEvent() {\n        return Browser.getEvent('start');\n    }\n    /**\n     * To get the Touch end event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchEndEvent() {\n        return Browser.getEvent('end');\n    }\n    /**\n     * To get the Touch move event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchMoveEvent() {\n        return Browser.getEvent('move');\n    }\n    /**\n     * To cancel the touch event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchCancelEvent() {\n        return Browser.getEvent('cancel');\n    }\n    /**\n     * To get the value based on provided key and regX\n     *\n     * @param {string} key ?\n     * @param {RegExp} regX ?\n     * @returns {Object} ?\n     */\n    static getValue(key, regX) {\n        const browserDetails = window.browserDetails;\n        if ('undefined' === typeof browserDetails[key]) {\n            return browserDetails[key] = regX.test(Browser.userAgent);\n        }\n        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\n            browserDetails['isIos'] = true;\n            browserDetails['isDevice'] = true;\n            browserDetails['isTouch'] = true;\n            browserDetails['isPointer'] = true;\n        }\n        return browserDetails[key];\n    }\n    //Properties\n    /**\n     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n     * Also we can set our own userAgent.\n     *\n     * @param {string} uA ?\n     */\n    static set userAgent(uA) {\n        Browser.uA = uA;\n        window.browserDetails = {};\n    }\n    static get userAgent() {\n        return Browser.uA;\n    }\n    //Read Only Properties\n    /**\n     * Property is to get the browser information like Name, Version and Language\n     *\n     * @returns {BrowserInfo} ?\n     */\n    static get info() {\n        if (isUndefined(window.browserDetails.info)) {\n            return window.browserDetails.info = Browser.extractBrowserDetail();\n        }\n        return window.browserDetails.info;\n    }\n    /**\n     * Property is to get whether the userAgent is based IE.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIE() {\n        return Browser.getValue('isIE', REGX_IE);\n    }\n    /**\n     * Property is to get whether the browser has touch support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isTouch() {\n        if (isUndefined(window.browserDetails.isTouch)) {\n            return (window.browserDetails.isTouch =\n                ('ontouchstart' in window.navigator) ||\n                    (window &&\n                        window.navigator &&\n                        (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));\n        }\n        return window.browserDetails.isTouch;\n    }\n    /**\n     * Property is to get whether the browser has Pointer support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isPointer() {\n        if (isUndefined(window.browserDetails.isPointer)) {\n            return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\n        }\n        return window.browserDetails.isPointer;\n    }\n    /**\n     * Property is to get whether the browser has MSPointer support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isMSPointer() {\n        if (isUndefined(window.browserDetails.isMSPointer)) {\n            return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\n        }\n        return window.browserDetails.isMSPointer;\n    }\n    /**\n     * Property is to get whether the userAgent is device based.\n     *\n     * @returns {boolean} ?\n     */\n    static get isDevice() {\n        return Browser.getValue('isDevice', REGX_MOBILE);\n    }\n    /**\n     * Property is to get whether the userAgent is IOS.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIos() {\n        return Browser.getValue('isIos', REGX_IOS);\n    }\n    /**\n     * Property is to get whether the userAgent is Ios7.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIos7() {\n        return Browser.getValue('isIos7', REGX_IOS7);\n    }\n    /**\n     * Property is to get whether the userAgent is Android.\n     *\n     * @returns {boolean} ?\n     */\n    static get isAndroid() {\n        return Browser.getValue('isAndroid', REGX_ANDROID);\n    }\n    /**\n     * Property is to identify whether application ran in web view.\n     *\n     * @returns {boolean} ?\n     */\n    static get isWebView() {\n        if (isUndefined(window.browserDetails.isWebView)) {\n            window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\n                && isUndefined(window.phonegap) && window.forge !== 'object');\n            return window.browserDetails.isWebView;\n        }\n        return window.browserDetails.isWebView;\n    }\n    /**\n     * Property is to get whether the userAgent is Windows.\n     *\n     * @returns {boolean} ?\n     */\n    static get isWindows() {\n        return Browser.getValue('isWindows', REGX_WINDOWS);\n    }\n    /**\n     * Property is to get the touch start event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchStartEvent() {\n        if (isUndefined(window.browserDetails.touchStartEvent)) {\n            return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n        }\n        return window.browserDetails.touchStartEvent;\n    }\n    /**\n     * Property is to get the touch move event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchMoveEvent() {\n        if (isUndefined(window.browserDetails.touchMoveEvent)) {\n            return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n        }\n        return window.browserDetails.touchMoveEvent;\n    }\n    /**\n     * Property is to get the touch end event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchEndEvent() {\n        if (isUndefined(window.browserDetails.touchEndEvent)) {\n            return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n        }\n        return window.browserDetails.touchEndEvent;\n    }\n    /**\n     * Property is to cancel the touch end event.\n     *\n     * @returns {string} ?\n     */\n    static get touchCancelEvent() {\n        if (isUndefined(window.browserDetails.touchCancelEvent)) {\n            return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n        }\n        return window.browserDetails.touchCancelEvent;\n    }\n}\n/* istanbul ignore next */\nBrowser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n\n/**\n * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element\n * ```html\n * <div id=\"Eventdiv\">  </div>\n * <script>\n *   let node: HTMLElement = document.querySelector(\"#Eventdiv\");\n *   EventHandler.addEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   EventHandler.addEventListener(node, \"onmouseover\", function(){\n *       // mouseover handler function code\n *   });\n *   EventHandler.removeEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   eventObj.clearEvents();\n * </script>\n * ```\n */\nclass EventHandler {\n    // to get the event data based on element\n    static addOrGetEventData(element) {\n        if ('__eventList' in element) {\n            return element.__eventList.events;\n        }\n        else {\n            element.__eventList = {};\n            return element.__eventList.events = [];\n        }\n    }\n    /**\n     * Add an event to the specified DOM element.\n     *\n     * @param {any} element - Target HTML DOM element\n     * @param {string} eventName - A string that specifies the name of the event\n     * @param {Function} listener - Specifies the function to run when the event occurs\n     * @param {Object} bindTo - A object that binds 'this' variable in the event handler\n     * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.\n     * @returns {Function} ?\n     */\n    static add(element, eventName, listener, bindTo, intDebounce) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        let debounceListener;\n        if (intDebounce) {\n            debounceListener = debounce(listener, intDebounce);\n        }\n        else {\n            debounceListener = listener;\n        }\n        if (bindTo) {\n            debounceListener = debounceListener.bind(bindTo);\n        }\n        const event = eventName.split(' ');\n        for (let i = 0; i < event.length; i++) {\n            eventData.push({\n                name: event[i],\n                listener: listener,\n                debounce: debounceListener\n            });\n            if (Browser.isIE) {\n                element.addEventListener(event[i], debounceListener);\n            }\n            else {\n                element.addEventListener(event[i], debounceListener, { passive: false });\n            }\n        }\n        return debounceListener;\n    }\n    /**\n     * Remove an event listener that has been attached before.\n     *\n     * @param {any} element - Specifies the target html element to remove the event\n     * @param {string} eventName - A string that specifies the name of the event to remove\n     * @param {Function} listener - Specifies the function to remove\n     * @returns {void} ?\n     */\n    static remove(element, eventName, listener) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        const event = eventName.split(' ');\n        for (let j = 0; j < event.length; j++) {\n            let index = -1;\n            let debounceListener;\n            if (eventData && eventData.length !== 0) {\n                eventData.some((x, i) => {\n                    return x.name === event[j] && x.listener === listener ?\n                        (index = i, debounceListener = x.debounce, true) : false;\n                });\n            }\n            if (index !== -1) {\n                eventData.splice(index, 1);\n            }\n            if (debounceListener) {\n                element.removeEventListener(event[j], debounceListener);\n            }\n        }\n    }\n    /**\n     * Clear all the event listeners that has been previously attached to the element.\n     *\n     * @param {any} element - Specifies the target html element to clear the events\n     * @returns {void} ?\n     */\n    static clearEvents(element) {\n        let eventData;\n        let copyData;\n        // eslint-disable-next-line\n        eventData = EventHandler.addOrGetEventData(element);\n        // eslint-disable-next-line\n        copyData = extend([], copyData, eventData);\n        for (let i = 0; i < copyData.length; i++) {\n            element.removeEventListener(copyData[i].name, copyData[i].debounce);\n            eventData.shift();\n        }\n    }\n    /**\n     * Trigger particular event of the element.\n     *\n     * @param {any} element - Specifies the target html element to trigger the events\n     * @param {string} eventName - Specifies the event to trigger for the specified element.\n     * Can be a custom event, or any of the standard events.\n     * @param {any} eventProp - Additional parameters to pass on to the event properties\n     * @returns {void} ?\n     */\n    static trigger(element, eventName, eventProp) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        for (const event of eventData) {\n            if (event.name === eventName) {\n                event.debounce.call(this, eventProp);\n            }\n        }\n    }\n}\n\n/**\n * Functions related to dom operations.\n */\nconst SVG_REG = /^svg|^path|^g/;\n/**\n * Function to create Html element.\n *\n * @param {string} tagName - Name of the tag, id and class names.\n * @param {ElementProperties} properties - Object to set properties in the element.\n * @param {ElementProperties} properties.id - To set the id to the created element.\n * @param {ElementProperties} properties.className - To add classes to the element.\n * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.\n * @param {ElementProperties} properties.styles - To set the some custom styles to element.\n * @param {ElementProperties} properties.attrs - To set the attributes to element.\n * @returns {any} ?\n * @private\n */\nfunction createElement(tagName, properties) {\n    const element = (SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName));\n    if (typeof (properties) === 'undefined') {\n        return element;\n    }\n    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');\n    if (properties.className !== undefined) {\n        element.className = properties.className;\n    }\n    if (properties.id !== undefined) {\n        element.id = properties.id;\n    }\n    if (properties.styles !== undefined) {\n        element.setAttribute('style', properties.styles);\n    }\n    if (properties.attrs !== undefined) {\n        attributes(element, properties.attrs);\n    }\n    return element;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\nfunction addClass(elements, classes) {\n    const classList = getClassList(classes);\n    for (const ele of elements) {\n        for (const className of classList) {\n            if (isObject(ele)) {\n                const curClass = getValue('attributes.className', ele);\n                if (isNullOrUndefined(curClass)) {\n                    setValue('attributes.className', className, ele);\n                }\n                else if (!new RegExp('\\\\b' + className + '\\\\b', 'i').test(curClass)) {\n                    setValue('attributes.className', curClass + ' ' + className, ele);\n                }\n            }\n            else {\n                if (!ele.classList.contains(className)) {\n                    ele.classList.add(className);\n                }\n            }\n        }\n    }\n    return elements;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\nfunction removeClass(elements, classes) {\n    const classList = getClassList(classes);\n    for (const ele of elements) {\n        const flag = isObject(ele);\n        const canRemove = flag ? getValue('attributes.className', ele) : ele.className !== '';\n        if (canRemove) {\n            for (const className of classList) {\n                if (flag) {\n                    const classes = getValue('attributes.className', ele);\n                    const classArr = classes.split(' ');\n                    const index = classArr.indexOf(className);\n                    if (index !== -1) {\n                        classArr.splice(index, 1);\n                    }\n                    setValue('attributes.className', classArr.join(' '), ele);\n                }\n                else {\n                    ele.classList.remove(className);\n                }\n            }\n        }\n    }\n    return elements;\n}\n/**\n * The function used to get classlist.\n *\n * @param  {string | string[]} classes - An element the need to check visibility\n * @returns {string[]} ?\n * @private\n */\nfunction getClassList(classes) {\n    let classList = [];\n    if (typeof classes === 'string') {\n        classList.push(classes);\n    }\n    else {\n        classList = classes;\n    }\n    return classList;\n}\n/**\n * The function used to check element is visible or not.\n *\n * @param  {Element|Node} element - An element the need to check visibility\n * @returns {boolean} ?\n * @private\n */\nfunction isVisible(element) {\n    const ele = element;\n    return (ele.style.visibility === '' && ele.offsetWidth > 0);\n}\n/**\n * The function used to insert an array of elements into a first of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\nfunction prepend(fromElements, toElement, isEval) {\n    const docFrag = document.createDocumentFragment();\n    for (const ele of fromElements) {\n        docFrag.appendChild(ele);\n    }\n    toElement.insertBefore(docFrag, toElement.firstElementChild);\n    if (isEval) {\n        executeScript(toElement);\n    }\n    return fromElements;\n}\n/**\n * The function used to insert an array of elements into last of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\nfunction append(fromElements, toElement, isEval) {\n    const docFrag = document.createDocumentFragment();\n    for (const ele of fromElements) {\n        docFrag.appendChild(ele);\n    }\n    toElement.appendChild(docFrag);\n    if (isEval) {\n        executeScript(toElement);\n    }\n    return fromElements;\n}\n/**\n * The function is used to evaluate script from Ajax request\n *\n * @param {Element} ele - An element is going to evaluate the script\n * @returns {void} ?\n */\nfunction executeScript(ele) {\n    const eleArray = ele.querySelectorAll('script');\n    eleArray.forEach((element) => {\n        const script = document.createElement('script');\n        script.text = element.innerHTML;\n        document.head.appendChild(script);\n        detach(script);\n    });\n}\n/**\n * The function used to remove the element from parentnode\n *\n * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction detach(element) {\n    const parentNode = element.parentNode;\n    if (parentNode) {\n        return parentNode.removeChild(element);\n    }\n}\n/**\n * The function used to remove the element from Dom also clear the bounded events\n *\n * @param  {Element|Node|HTMLElement} element - An element remove from the Dom\n * @returns {void} ?\n * @private\n */\nfunction remove(element) {\n    const parentNode = element.parentNode;\n    EventHandler.clearEvents(element);\n    parentNode.removeChild(element);\n}\n/**\n * The function helps to set multiple attributes to an element\n *\n * @param  {Element|Node} element - An element that need to set attributes.\n * @param  {string} attributes - JSON Object that is going to as attributes.\n * @returns {Element} ?\n * @private\n */\n// eslint-disable-next-line\nfunction attributes(element, attributes) {\n    const keys = Object.keys(attributes);\n    const ele = element;\n    for (const key of keys) {\n        if (isObject(ele)) {\n            let iKey = key;\n            if (key === 'tabindex') {\n                iKey = 'tabIndex';\n            }\n            ele.attributes[iKey] = attributes[key];\n        }\n        else {\n            ele.setAttribute(key, attributes[key]);\n        }\n    }\n    return ele;\n}\n/**\n * The function selects the element from giving context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction select(selector, context = document, needsVDOM) {\n    selector = querySelectId(selector);\n    return context.querySelector(selector);\n}\n/**\n * The function selects an array of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {HTMLElement[]} ?\n * @private\n */\n// eslint-disable-next-line\nfunction selectAll(selector, context = document, needsVDOM) {\n    selector = querySelectId(selector);\n    const nodeList = context.querySelectorAll(selector);\n    return nodeList;\n}\n/**\n * The function selects an id of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @returns {string} ?\n * @private\n */\nfunction querySelectId(selector) {\n    const charRegex = /(!|\"|\\$|%|&|'|\\(|\\)|\\*|\\/|:|;|<|=|\\?|@|\\]|\\^|`|{|}|\\||\\+|~)/g;\n    if (selector.match(/#[0-9]/g) || selector.match(charRegex)) {\n        const idList = selector.split(',');\n        for (let i = 0; i < idList.length; i++) {\n            const list = idList[i].split(' ');\n            for (let j = 0; j < list.length; j++) {\n                if (list[j].indexOf('#') > -1) {\n                    if (!list[j].match(/\\[.*\\]/)) {\n                        const splitId = list[j].split('#');\n                        if (splitId[1].match(/^\\d/) || splitId[1].match(charRegex)) {\n                            const setId = list[j].split('.');\n                            setId[0] = setId[0].replace(/#/, '[id=\\'') + '\\']';\n                            list[j] = setId.join('.');\n                        }\n                    }\n                }\n            }\n            idList[i] = list.join(' ');\n        }\n        return idList.join(',');\n    }\n    return selector;\n}\n/**\n * Returns single closest parent element based on class selector.\n *\n * @param  {Element} element - An element that need to find the closest element.\n * @param  {string} selector - A classSelector of closest element.\n * @returns {Element} ?\n * @private\n */\nfunction closest(element, selector) {\n    let el = element;\n    if (typeof el.closest === 'function') {\n        return el.closest(selector);\n    }\n    while (el && el.nodeType === 1) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentNode;\n    }\n    return null;\n}\n/**\n * Returns all sibling elements of the given element.\n *\n * @param  {Element|Node} element - An element that need to get siblings.\n * @returns {Element[]} ?\n * @private\n */\nfunction siblings(element) {\n    const siblings = [];\n    const childNodes = Array.prototype.slice.call(element.parentNode.childNodes);\n    for (const curNode of childNodes) {\n        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {\n            siblings.push(curNode);\n        }\n    }\n    return siblings;\n}\n/**\n * set the value if not exist. Otherwise set the existing value\n *\n * @param  {HTMLElement} element - An element to which we need to set value.\n * @param  {string} property - Property need to get or set.\n * @param  {string} value - value need to set.\n * @returns {string} ?\n * @private\n */\nfunction getAttributeOrDefault(element, property, value) {\n    let attrVal;\n    const isObj = isObject(element);\n    if (isObj) {\n        attrVal = getValue('attributes.' + property, element);\n    }\n    else {\n        attrVal = element.getAttribute(property);\n    }\n    if (isNullOrUndefined(attrVal) && value) {\n        if (!isObj) {\n            element.setAttribute(property, value.toString());\n        }\n        else {\n            element.attributes[property] = value;\n        }\n        attrVal = value;\n    }\n    return attrVal;\n}\n/**\n * Set the style attributes to Html element.\n *\n * @param {HTMLElement} element - Element which we want to set attributes\n * @param {any} attrs - Set the given attributes to element\n * @returns {void} ?\n * @private\n */\nfunction setStyleAttribute(element, attrs) {\n    if (attrs !== undefined) {\n        Object.keys(attrs).forEach((key) => {\n            // eslint-disable-next-line\n            element.style[key] = attrs[key];\n        });\n    }\n}\n/**\n * Method for add and remove classes to a dom element.\n *\n * @param {Element} element - Element for add and remove classes\n * @param {string[]} addClasses - List of classes need to be add to the element\n * @param {string[]} removeClasses - List of classes need to be remove from the element\n * @returns {void} ?\n * @private\n */\nfunction classList(element, addClasses, removeClasses) {\n    addClass([element], addClasses);\n    removeClass([element], removeClasses);\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Element} element - Element to compare with the selector.\n * @param {string} selector - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\nfunction matches(element, selector) {\n    // eslint-disable-next-line\n    let matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n    if (matches) {\n        return matches.call(element, selector);\n    }\n    else {\n        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;\n    }\n}\n/**\n * Method to get the html text from DOM.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} innerHTML - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\nfunction includeInnerHTML(ele, innerHTML) {\n    ele.innerHTML = innerHTML;\n}\n/**\n * Method to get the containsclass.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} className - String selector which element will satisfy.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction containsClass(ele, className) {\n    if (isObject(ele)) {\n        // eslint-disable-next-line\n        return new RegExp('\\\\b' + className + '\\\\b', 'i').test(ele.attributes.className);\n    }\n    else {\n        return ele.classList.contains(className);\n    }\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Object} element - Element to compare with the selector.\n * @param {boolean} deep ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction cloneNode(element, deep) {\n    if (isObject(element)) {\n        if (deep) {\n            return extend({}, {}, element, true);\n        }\n    }\n    else {\n        return element.cloneNode(deep);\n    }\n}\n\nconst isColEName = new RegExp(']');\n/* tslint:enable:no-any */\n/**\n * Base library module is common module for Framework modules like touch,keyboard and etc.,\n *\n * @private\n */\nclass Base {\n    /**\n     * Base constructor accept options and element\n     *\n     * @param {Object} options ?\n     * @param {string} element ?\n     */\n    constructor(options, element) {\n        this.isRendered = false;\n        this.isComplexArraySetter = false;\n        this.isServerRendered = false;\n        this.allowServerDataBinding = true;\n        this.isProtectedOnChange = true;\n        this.properties = {};\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.bulkChanges = {};\n        this.refreshing = false;\n        this.ignoreCollectionWatch = false;\n        // eslint-disable-next-line\n        this.finalUpdate = () => { };\n        this.childChangedProperties = {};\n        this.modelObserver = new Observer(this);\n        if (!isUndefined(element)) {\n            if ('string' === typeof (element)) {\n                this.element = document.querySelector(element);\n            }\n            else {\n                this.element = element;\n            }\n            if (!isNullOrUndefined(this.element)) {\n                this.isProtectedOnChange = false;\n                this.addInstance();\n            }\n        }\n        if (!isUndefined(options)) {\n            this.setProperties(options, true);\n        }\n        this.isDestroyed = false;\n    }\n    /** Property base section */\n    /**\n     * Function used to set bunch of property at a time.\n     *\n     * @private\n     * @param  {Object} prop - JSON object which holds components properties.\n     * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.\n     * @returns {void} ?\n     */\n    setProperties(prop, muteOnChange) {\n        const prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = !!muteOnChange;\n        merge(this, prop);\n        if (muteOnChange !== true) {\n            merge(this.changedProperties, prop);\n            this.dataBind();\n        }\n        else if (isBlazor() && this.isRendered) {\n            this.serverDataBind(prop);\n        }\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.isProtectedOnChange = prevDetection;\n    }\n    /**\n     * Calls for child element data bind\n     *\n     * @param {Object} obj ?\n     * @param {Object} parent ?\n     * @returns {void} ?\n     */\n    // tslint:disable-next-line:no-any\n    static callChildDataBind(obj, parent) {\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (parent[key] instanceof Array) {\n                for (const obj of parent[key]) {\n                    if (obj.dataBind !== undefined) {\n                        obj.dataBind();\n                    }\n                }\n            }\n            else {\n                parent[key].dataBind();\n            }\n        }\n    }\n    clearChanges() {\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.childChangedProperties = {};\n    }\n    /**\n     * Bind property changes immediately to components\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        Base.callChildDataBind(this.childChangedProperties, this);\n        if (Object.getOwnPropertyNames(this.changedProperties).length) {\n            const prevDetection = this.isProtectedOnChange;\n            const newChanges = this.changedProperties;\n            const oldChanges = this.oldProperties;\n            this.clearChanges();\n            this.isProtectedOnChange = true;\n            this.onPropertyChanged(newChanges, oldChanges);\n            this.isProtectedOnChange = prevDetection;\n        }\n    }\n    /* tslint:disable:no-any */\n    serverDataBind(newChanges) {\n        if (!isBlazor()) {\n            return;\n        }\n        newChanges = newChanges ? newChanges : {};\n        extend(this.bulkChanges, {}, newChanges, true);\n        const sfBlazor = 'sfBlazor';\n        if (this.allowServerDataBinding && window[sfBlazor].updateModel) {\n            window[sfBlazor].updateModel(this);\n            this.bulkChanges = {};\n        }\n    }\n    /* tslint:enable:no-any */\n    saveChanges(key, newValue, oldValue) {\n        if (isBlazor()) {\n            // tslint:disable-next-line:no-any\n            const newChanges = {};\n            newChanges[key] = newValue;\n            this.serverDataBind(newChanges);\n        }\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        this.finalUpdate = setImmediate(this.dataBind.bind(this));\n    }\n    /** Event Base Section */\n    /**\n     * Adds the handler to the given event listener.\n     *\n     * @param {string} eventName - A String that specifies the name of the event\n     * @param {Function} handler - Specifies the call to run when the event occurs.\n     * @returns {void} ?\n     */\n    addEventListener(eventName, handler) {\n        this.modelObserver.on(eventName, handler);\n    }\n    /**\n     * Removes the handler from the given event listener.\n     *\n     * @param {string} eventName - A String that specifies the name of the event to remove\n     * @param {Function} handler - Specifies the function to remove\n     * @returns {void} ?\n     */\n    removeEventListener(eventName, handler) {\n        this.modelObserver.off(eventName, handler);\n    }\n    /**\n     * Triggers the handlers in the specified event.\n     *\n     * @private\n     * @param {string} eventName - Specifies the event to trigger for the specified component properties.\n     * Can be a custom event, or any of the standard events.\n     * @param {Event} eventProp - Additional parameters to pass on to the event properties\n     * @param {Function} successHandler - this function will invoke after event successfully triggered\n     * @param {Function} errorHandler - this function will invoke after event if it failured to call.\n     * @returns {void} ?\n     */\n    trigger(eventName, eventProp, successHandler, errorHandler) {\n        if (this.isDestroyed !== true) {\n            const prevDetection = this.isProtectedOnChange;\n            this.isProtectedOnChange = false;\n            let data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);\n            if (isColEName.test(eventName)) {\n                const handler = getValue(eventName, this);\n                if (handler) {\n                    const blazor = 'Blazor';\n                    if (window[blazor]) {\n                        const promise = handler.call(this, eventProp);\n                        if (promise && typeof promise.then === 'function') {\n                            if (!successHandler) {\n                                data = promise;\n                            }\n                            else {\n                                promise.then((data) => {\n                                    if (successHandler) {\n                                        data = typeof data === 'string' && this.modelObserver.isJson(data) ?\n                                            JSON.parse(data) : data;\n                                        successHandler.call(this, data);\n                                    }\n                                }).catch((data) => {\n                                    if (errorHandler) {\n                                        data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                                        errorHandler.call(this, data);\n                                    }\n                                });\n                            }\n                        }\n                        else if (successHandler) {\n                            successHandler.call(this, eventProp);\n                        }\n                    }\n                    else {\n                        handler.call(this, eventProp);\n                        if (successHandler) {\n                            successHandler.call(this, eventProp);\n                        }\n                    }\n                }\n                else if (successHandler) {\n                    successHandler.call(this, eventProp);\n                }\n            }\n            this.isProtectedOnChange = prevDetection;\n            return data;\n        }\n    }\n    /**\n     * To maintain instance in base class\n     *\n     * @returns {void} ?\n     */\n    addInstance() {\n        // Add module class to the root element\n        const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n        addClass([this.element], ['e-lib', moduleClass]);\n        if (!isNullOrUndefined(this.element.ej2_instances)) {\n            this.element.ej2_instances.push(this);\n        }\n        else {\n            setValue('ej2_instances', [this], this.element);\n        }\n    }\n    /**\n     * To remove the instance from the element\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        // eslint-disable-next-line\n        this.element.ej2_instances =\n            this.element.ej2_instances.filter((i) => { return i !== this; });\n        removeClass([this.element], ['e-' + this.getModuleName()]);\n        if (this.element.ej2_instances.length === 0) {\n            // Remove module class from the root element\n            removeClass([this.element], ['e-lib']);\n        }\n        this.clearChanges();\n        this.modelObserver.destroy();\n        this.isDestroyed = true;\n    }\n}\n/**\n * Global function to get the component instance from the rendered element.\n *\n * @param {HTMLElement} elem Specifies the HTMLElement or element id string.\n * @param {string} comp Specifies the component module name or Component.\n * @returns {any} ?\n */\n// tslint:disable-next-line:no-any\nfunction getComponent(elem, comp) {\n    let instance;\n    let i;\n    const ele = typeof elem === 'string' ? document.getElementById(elem) : elem;\n    for (i = 0; i < ele.ej2_instances.length; i++) {\n        instance = ele.ej2_instances[i];\n        if (typeof comp === 'string') {\n            const compName = instance.getModuleName();\n            if (comp === compName) {\n                return instance;\n            }\n        }\n        else {\n            // tslint:disable-next-line:no-any\n            if (instance instanceof comp) {\n                return instance;\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Function to remove the child instances.\n *\n * @param {HTMLElement} element ?\n * @return {void}\n * @private\n */\n// tslint:disable-next-line:no-any\nfunction removeChildInstance(element) {\n    // tslint:disable-next-line:no-any\n    const childEle = [].slice.call(element.getElementsByClassName('e-control'));\n    for (let i = 0; i < childEle.length; i++) {\n        const compName = childEle[i].classList[1].split('e-')[1];\n        // tslint:disable-next-line:no-any\n        const compInstance = getComponent(childEle[i], compName);\n        if (!isUndefined(compInstance)) {\n            compInstance.destroy();\n        }\n    }\n}\n\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n    // eslint-disable-next-line\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n        instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    const result = [];\n    const len = defaultValue ? defaultValue.length : 0;\n    for (let i = 0; i < len; i++) {\n        let curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[i], instance);\n        }\n        if (isSetter) {\n            const inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[i], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[curKey] = defaultValue;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[curKey] !== newValue) {\n            // eslint-disable-next-line\n            let oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        const curType = type({});\n        // eslint-disable-next-line\n        if (this.properties.hasOwnProperty(curKey)) {\n            return this.properties[curKey];\n        }\n        else {\n            return getObject(this, curKey, defaultValue, curType);\n        }\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        const curType = type(newValue, this);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            const defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[curKey] = defCollection;\n        }\n        const ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\n            || this.ignoreCollectionWatch);\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n            ['push', 'pop'].forEach((extendFunc) => {\n                const descriptor = {\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, this.properties[curKey]).bind(this),\n                    configurable: true\n                };\n                Object.defineProperty(this.properties[curKey], extendFunc, descriptor);\n            });\n        }\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n            Object.defineProperty(this.properties[curKey], 'isComplexArray', { value: true });\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        this.isComplexArraySetter = true;\n        const oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        const newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.isComplexArraySetter = false;\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        // eslint-disable-next-line\n        const oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n        const newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        const curType = type({});\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            const defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n    /* tslint:disable no-function-expression */\n    return function (...newValue) {\n        const keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n        switch (dFunc) {\n            case 'push':\n                for (let i = 0; i < newValue.length; i++) {\n                    Array.prototype[dFunc].apply(prop, [newValue[i]]);\n                    const model = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n                    this.serverDataBind(model, newValue[i], false, dFunc);\n                }\n                break;\n            case 'pop':\n                Array.prototype[dFunc].apply(prop);\n                // eslint-disable-next-line\n                let model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\n                break;\n        }\n        return prop;\n    };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n    let modelObject = keyString;\n    if (isControlParent) {\n        modelObject = {};\n        modelObject[keyString] = value;\n        if (value && typeof value === 'object') {\n            const action = 'ejsAction';\n            modelObject[keyString][action] = arrayFunction;\n        }\n    }\n    return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Property(defaultValue) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Complex(defaultValue, type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nfunction ComplexFactory(type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Collection(defaultValue, type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nfunction CollectionFactory(type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nfunction Event$1() {\n    return (target, key) => {\n        const eventDescriptor = {\n            set: function (newValue) {\n                const oldValue = this.properties[key];\n                if (oldValue !== newValue) {\n                    const finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nfunction NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    // eslint-disable-next-line\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    // eslint-disable-next-line\n    target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        const rex = /complex/;\n        for (const key of Object.keys(component.prototype.propList)) {\n            for (const prop of component.prototype.propList[key]) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        const childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        let tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nfunction CreateBuilder(component) {\n    const builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    const instanceFunction = (element) => {\n        // eslint-disable-next-line\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                const temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n    // eslint-disable-next-line\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        const curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Animation_1;\n/**\n * The Animation framework provide options to animate the html DOM elements\n * ```typescript\n *   let animeObject = new Animation({\n *      name: 'SlideLeftIn',\n *      duration: 1000\n *   });\n *   animeObject.animate('#anime1');\n *   animeObject.animate('#anime2', { duration: 500 });\n * ```\n */\nlet Animation = Animation_1 = class Animation extends Base {\n    constructor(options) {\n        super(options, undefined);\n        /**\n         * @private\n         */\n        this.easing = {\n            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',\n            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',\n            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',\n            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',\n            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',\n            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',\n            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',\n            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'\n        };\n    }\n    /**\n     * Applies animation to the current element.\n     *\n     * @param {string | HTMLElement} element - Element which needs to be animated.\n     * @param {AnimationModel} options - Overriding default animation settings.\n     * @returns {void} ?\n     */\n    animate(element, options) {\n        options = !options ? {} : options;\n        const model = this.getModel(options);\n        if (typeof element === 'string') {\n            const elements = Array.prototype.slice.call(selectAll(element, document));\n            for (const element of elements) {\n                model.element = element;\n                Animation_1.delayAnimation(model);\n            }\n        }\n        else {\n            model.element = element;\n            Animation_1.delayAnimation(model);\n        }\n    }\n    /**\n     * Stop the animation effect on animated element.\n     *\n     * @param {HTMLElement} element - Element which needs to be stop the animation.\n     * @param {AnimationOptions} model - Handling the animation model at stop function.\n     * @return {void}\n     */\n    static stop(element, model) {\n        element.style.animation = '';\n        element.removeAttribute('e-animate');\n        const animationId = element.getAttribute('e-animation-id');\n        if (animationId) {\n            const frameId = parseInt(animationId, 10);\n            cancelAnimationFrame(frameId);\n            element.removeAttribute('e-animation-id');\n        }\n        if (model && model.end) {\n            model.end.call(this, model);\n        }\n    }\n    /**\n     * Set delay to animation element\n     *\n     * @param {AnimationModel} model ?\n     * @returns {void}\n     */\n    static delayAnimation(model) {\n        if (model.delay) {\n            setTimeout(() => { Animation_1.applyAnimation(model); }, model.delay);\n        }\n        else {\n            Animation_1.applyAnimation(model);\n        }\n    }\n    /**\n     * Triggers animation\n     *\n     * @param {AnimationModel} model ?\n     * @returns {void}\n     */\n    static applyAnimation(model) {\n        model.timeStamp = 0;\n        let step = 0;\n        let timerId = 0;\n        let prevTimeStamp = 0;\n        const duration = model.duration;\n        model.element.setAttribute('e-animate', 'true');\n        const startAnimation = (timeStamp) => {\n            try {\n                if (timeStamp) {\n                    // let step: number = model.timeStamp = timeStamp - startTime;\n                    /** phantomjs workaround for timestamp fix */\n                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;\n                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;\n                    prevTimeStamp = timeStamp;\n                    /** phantomjs workaround end */\n                    // trigger animation begin event\n                    if (!step && model.begin) {\n                        model.begin.call(this, model);\n                    }\n                    step = step + 1;\n                    const avg = model.timeStamp / step;\n                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {\n                        // apply animation effect to the current element\n                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;\n                        if (model.progress) {\n                            model.progress.call(this, model);\n                        }\n                        // repeat requestAnimationFrame\n                        requestAnimationFrame(startAnimation);\n                    }\n                    else {\n                        // clear requestAnimationFrame\n                        cancelAnimationFrame(timerId);\n                        model.element.removeAttribute('e-animation-id');\n                        model.element.removeAttribute('e-animate');\n                        model.element.style.animation = '';\n                        if (model.end) {\n                            model.end.call(this, model);\n                        }\n                    }\n                }\n                else {\n                    //startTime = performance.now();\n                    // set initial requestAnimationFrame\n                    timerId = requestAnimationFrame(startAnimation);\n                    model.element.setAttribute('e-animation-id', timerId.toString());\n                }\n            }\n            catch (e) {\n                cancelAnimationFrame(timerId);\n                model.element.removeAttribute('e-animation-id');\n                if (model.fail) {\n                    model.fail.call(this, e);\n                }\n            }\n        };\n        startAnimation();\n    }\n    /**\n     * Returns Animation Model\n     *\n     * @param {AnimationModel} options ?\n     * @returns {AnimationModel} ?\n     */\n    getModel(options) {\n        return {\n            name: options.name || this.name,\n            delay: options.delay || this.delay,\n            duration: (options.duration !== undefined ? options.duration : this.duration),\n            begin: options.begin || this.begin,\n            end: options.end || this.end,\n            fail: options.fail || this.fail,\n            progress: options.progress || this.progress,\n            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :\n                (options.timingFunction || this.easing[this.timingFunction])\n        };\n    }\n    /**\n     * @private\n     * @param {AnimationModel} newProp ?\n     * @param {AnimationModel} oldProp ?\n     * @returns {void} ?\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        // no code needed\n    }\n    /**\n     * Returns module name as animation\n     *\n     * @private\n     * @returns {void} ?\n     */\n    getModuleName() {\n        return 'animation';\n    }\n    /**\n     *\n     * @private\n     * @returns {void} ?\n     */\n    destroy() {\n        //Override base destroy;\n    }\n};\n__decorate([\n    Property('FadeIn')\n], Animation.prototype, \"name\", void 0);\n__decorate([\n    Property(400)\n], Animation.prototype, \"duration\", void 0);\n__decorate([\n    Property('ease')\n], Animation.prototype, \"timingFunction\", void 0);\n__decorate([\n    Property(0)\n], Animation.prototype, \"delay\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"progress\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"begin\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"end\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"fail\", void 0);\nAnimation = Animation_1 = __decorate([\n    NotifyPropertyChanges\n], Animation);\n/**\n * Ripple provides material theme's wave effect when an element is clicked\n * ```html\n * <div id='ripple'></div>\n * <script>\n *   rippleEffect(document.getElementById('ripple'));\n * </script>\n * ```\n *\n * @private\n * @param {HTMLElement} element - Target element\n * @param {RippleOptions} rippleOptions - Ripple options .\n * @param {Function} done .\n * @returns {void} .\n */\nfunction rippleEffect(element, rippleOptions, done) {\n    const rippleModel = getRippleModel(rippleOptions);\n    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {\n        return (() => { });\n    }\n    element.setAttribute('data-ripple', 'true');\n    EventHandler.add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });\n    EventHandler.add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });\n    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    if (Browser.isPointer) {\n        EventHandler.add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    }\n    return (() => {\n        element.removeAttribute('data-ripple');\n        EventHandler.remove(element, 'mousedown', rippleHandler);\n        EventHandler.remove(element, 'mouseup', rippleUpHandler);\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n        EventHandler.remove(element, 'transitionend', rippleLeaveHandler);\n    });\n}\n/**\n * Handler for ripple model\n *\n * @param {RippleOptions} rippleOptions ?\n * @returns {RippleOptions} ?\n */\nfunction getRippleModel(rippleOptions) {\n    const rippleModel = {\n        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,\n        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,\n        rippleFlag: rippleOptions && rippleOptions.rippleFlag,\n        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,\n        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350\n    };\n    return rippleModel;\n}\n/**\n * Handler for ripple event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleHandler(e) {\n    const target = (e.target);\n    const selector = this.rippleOptions.selector;\n    const element = selector ? closest(target, selector) : target;\n    if (!element || (this.rippleOptions && closest(target, this.rippleOptions.ignore))) {\n        return;\n    }\n    const offset = element.getBoundingClientRect();\n    const offsetX = e.pageX - document.body.scrollLeft;\n    const offsetY = e.pageY - ((!document.body.scrollTop && document.documentElement) ?\n        document.documentElement.scrollTop : document.body.scrollTop);\n    const pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));\n    const pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));\n    const radius = Math.sqrt(pageX * pageX + pageY * pageY);\n    let diameter = radius * 2 + 'px';\n    let x = offsetX - offset.left - radius;\n    let y = offsetY - offset.top - radius;\n    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {\n        x = 0;\n        y = 0;\n        diameter = '100%';\n    }\n    element.classList.add('e-ripple');\n    const duration = this.rippleOptions.duration.toString();\n    const styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +\n        'transition-duration: ' + duration + 'ms;';\n    const rippleElement = createElement('div', { className: 'e-ripple-element', styles: styles });\n    element.appendChild(rippleElement);\n    window.getComputedStyle(rippleElement).getPropertyValue('opacity');\n    rippleElement.style.transform = 'scale(1)';\n    if (element !== this.parent) {\n        EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });\n    }\n}\n/**\n * Handler for ripple element mouse up event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleUpHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for ripple element mouse move event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleLeaveHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for removing ripple element\n *\n * @param {MouseEvent} e ?\n * @param {RippleArgs} eventArgs ?\n * @returns {void} ?\n * @private\n */\nfunction removeRipple(e, eventArgs) {\n    const duration = eventArgs.rippleOptions.duration;\n    const target = (e.target);\n    const selector = eventArgs.rippleOptions.selector;\n    const element = selector ? closest(target, selector) : target;\n    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {\n        return;\n    }\n    const rippleElements = selectAll('.e-ripple-element', element);\n    const rippleElement = rippleElements[rippleElements.length - 1];\n    if (rippleElement) {\n        rippleElement.style.opacity = '0.5';\n    }\n    if (eventArgs.parent !== element) {\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n    }\n    /* tslint:disable:align */\n    setTimeout(() => {\n        if (rippleElement && rippleElement.parentNode) {\n            rippleElement.parentNode.removeChild(rippleElement);\n        }\n        if (!element.getElementsByClassName('e-ripple-element').length) {\n            element.classList.remove('e-ripple');\n        }\n        if (eventArgs.done) {\n            eventArgs.done(e);\n        }\n    }, duration);\n}\nlet isRippleEnabled = false;\n/**\n * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.\n *\n * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.\n * @returns {boolean} ?\n */\nfunction enableRipple(isRipple) {\n    isRippleEnabled = isRipple;\n    return isRippleEnabled;\n}\n\n/**\n * Module loading operations\n */\nconst MODULE_SUFFIX = 'Module';\nclass ModuleLoader {\n    constructor(parent) {\n        this.loadedModules = [];\n        this.parent = parent;\n    }\n    /**\n     * Inject required modules in component library\n     *\n     * @returns {void} ?\n     * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n     * @param {Function[]} moduleList - Array of modules to be injected from sample side\n     */\n    inject(requiredModules, moduleList) {\n        const reqLength = requiredModules.length;\n        if (reqLength === 0) {\n            this.clean();\n            return;\n        }\n        if (this.loadedModules.length) {\n            this.clearUnusedModule(requiredModules);\n        }\n        for (let i = 0; i < reqLength; i++) {\n            const modl = requiredModules[i];\n            for (const module of moduleList) {\n                const modName = modl.member;\n                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n                    const moduleObject = createInstance(module, modl.args);\n                    const memberName = this.getMemberName(modName);\n                    if (modl.isProperty) {\n                        setValue(memberName, module, this.parent);\n                    }\n                    else {\n                        setValue(memberName, moduleObject, this.parent);\n                    }\n                    const loadedModule = modl;\n                    loadedModule.member = memberName;\n                    this.loadedModules.push(loadedModule);\n                }\n            }\n        }\n    }\n    /**\n     * To remove the created object while destroying the control\n     *\n     * @returns {void}\n     */\n    clean() {\n        for (const modules of this.loadedModules) {\n            if (!modules.isProperty) {\n                getValue(modules.member, this.parent).destroy();\n            }\n        }\n        this.loadedModules = [];\n    }\n    /**\n     * Removes all unused modules\n     *\n     * @param {ModuleDeclaration[]} moduleList ?\n     * @returns {void} ?\n     */\n    clearUnusedModule(moduleList) {\n        const usedModules = moduleList.map((arg) => { return this.getMemberName(arg.member); });\n        const removableModule = this.loadedModules.filter((module) => {\n            return usedModules.indexOf(module.member) === -1;\n        });\n        for (const mod of removableModule) {\n            if (!mod.isProperty) {\n                getValue(mod.member, this.parent).destroy();\n            }\n            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n            deleteObject(this.parent, mod.member);\n        }\n    }\n    /**\n     * To get the name of the member.\n     *\n     * @param {string} name ?\n     * @returns {string} ?\n     */\n    getMemberName(name) {\n        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n    }\n    /**\n     * Returns boolean based on whether the module specified is loaded or not\n     *\n     * @param {string} modName ?\n     * @returns {boolean} ?\n     */\n    isModuleLoaded(modName) {\n        for (const mod of this.loadedModules) {\n            if (mod.member === this.getMemberName(modName)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\nclass ChildProperty {\n    constructor(parent, propName, defaultValue, isArray) {\n        this.isComplexArraySetter = false;\n        this.properties = {};\n        this.changedProperties = {};\n        this.childChangedProperties = {};\n        this.oldProperties = {};\n        // eslint-disable-next-line\n        this.finalUpdate = () => { };\n        this.callChildDataBind = getValue('callChildDataBind', Base);\n        this.parentObj = parent;\n        this.controlParent = this.parentObj.controlParent || this.parentObj;\n        this.propName = propName;\n        this.isParentArray = isArray;\n        this.setProperties(defaultValue, true);\n    }\n    /**\n     * Updates the property changes\n     *\n     * @param {boolean} val ?\n     * @param {string} propName ?\n     * @returns {void} ?\n     */\n    updateChange(val, propName) {\n        if (val === true) {\n            this.parentObj.childChangedProperties[propName] = val;\n        }\n        else {\n            delete this.parentObj.childChangedProperties[propName];\n        }\n        if (this.parentObj.updateChange) {\n            this.parentObj.updateChange(val, this.parentObj.propName);\n        }\n    }\n    /**\n     * Updates time out duration\n     *\n     * @returns {void} ?\n     */\n    updateTimeOut() {\n        if (this.parentObj.updateTimeOut) {\n            this.parentObj.finalUpdate();\n            this.parentObj.updateTimeOut();\n        }\n        else {\n            const changeTime = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n            const clearUpdate = () => {\n                clearTimeout(changeTime);\n            };\n            this.finalUpdate = clearUpdate;\n        }\n    }\n    /**\n     * Clears changed properties\n     *\n     * @returns {void} ?\n     */\n    clearChanges() {\n        this.finalUpdate();\n        this.updateChange(false, this.propName);\n        this.oldProperties = {};\n        this.changedProperties = {};\n    }\n    /**\n     * Set property changes\n     *\n     * @param {Object} prop ?\n     * @param {boolean} muteOnChange ?\n     * @returns {void} ?\n     */\n    setProperties(prop, muteOnChange) {\n        if (muteOnChange === true) {\n            merge(this, prop);\n            this.updateChange(false, this.propName);\n            this.clearChanges();\n        }\n        else {\n            merge(this, prop);\n        }\n    }\n    /**\n     * Binds data\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        this.callChildDataBind(this.childChangedProperties, this);\n        if (this.isParentArray) {\n            const curIndex = this.parentObj[this.propName].indexOf(this);\n            if (Object.keys(this.changedProperties).length) {\n                setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n                setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n            }\n        }\n        else {\n            this.parentObj.changedProperties[this.propName] = this.changedProperties;\n            this.parentObj.oldProperties[this.propName] = this.oldProperties;\n        }\n        this.clearChanges();\n    }\n    /**\n     * Saves changes to newer values\n     *\n     * @param {string} key ?\n     * @param {Object} newValue ?\n     * @param {Object} oldValue ?\n     * @param {boolean} restrictServerDataBind ?\n     * @returns {void} ?\n     */\n    saveChanges(key, newValue, oldValue, restrictServerDataBind) {\n        if (this.controlParent.isProtectedOnChange) {\n            return;\n        }\n        if (!restrictServerDataBind) {\n            this.serverDataBind(key, newValue, true);\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.updateChange(true, this.propName);\n        this.finalUpdate();\n        this.updateTimeOut();\n    }\n    serverDataBind(key, value, isSaveChanges, action) {\n        if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n            let parent;\n            const newChanges = {};\n            const parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n            /* istanbul ignore else  */\n            if (parentKey.indexOf('.') !== -1) {\n                const complexKeys = parentKey.split('.');\n                parent = newChanges;\n                for (let i = 0; i < complexKeys.length; i++) {\n                    const isFinal = i === complexKeys.length - 1;\n                    parent[complexKeys[i]] = isFinal ? value : {};\n                    parent = isFinal ? parent : parent[complexKeys[i]];\n                }\n            }\n            else {\n                newChanges[parentKey] = {};\n                parent = newChanges[parentKey];\n                newChanges[parentKey][key] = value;\n            }\n            /* istanbul ignore next */\n            if (this.isParentArray) {\n                const actionProperty = 'ejsAction';\n                parent[actionProperty] = action ? action : 'none';\n            }\n            this.controlParent.serverDataBind(newChanges);\n        }\n    }\n    getParentKey(isSaveChanges) {\n        // eslint-disable-next-line\n        let index = '';\n        let propName = this.propName;\n        /* istanbul ignore next */\n        if (this.isParentArray) {\n            index = this.parentObj[this.propName].indexOf(this);\n            let valueLength = this.parentObj[this.propName].length;\n            valueLength = isSaveChanges ? valueLength : (valueLength > 0 ? valueLength - 1 : 0);\n            index = index !== -1 ? '-' + index : '-' + valueLength;\n            propName = propName + index;\n        }\n        if (this.controlParent !== this.parentObj) {\n            propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n        }\n        return propName;\n    }\n}\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet componentCount = 0;\nlet lastPageID;\nlet lastHistoryLen = 0;\nlet versionBasedStatePersistence = false;\n/**\n * To enable or disable version based statePersistence functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.\n * @returns {void}\n */\nfunction enableVersionBasedPersistence(status) {\n    versionBasedStatePersistence = status;\n}\n/**\n * Base class for all Essential JavaScript components\n */\nlet Component = class Component extends Base {\n    /**\n     * Initialize the constructor for component base\n     *\n     * @param {Object} options ?\n     * @param {string} selector ?\n     */\n    constructor(options, selector) {\n        super(options, selector);\n        this.randomId = uniqueID();\n        /**\n         * string template option for Blazor template rendering\n         *\n         * @private\n         */\n        this.isStringTemplate = false;\n        this.needsID = false;\n        this.isReactHybrid = false;\n        if (isNullOrUndefined(this.enableRtl)) {\n            this.setProperties({ 'enableRtl': rightToLeft }, true);\n        }\n        if (isNullOrUndefined(this.locale)) {\n            this.setProperties({ 'locale': defaultCulture }, true);\n        }\n        this.moduleLoader = new ModuleLoader(this);\n        this.localObserver = new Observer(this);\n        // tslint:disable-next-line:no-function-constructor-with-string-args\n        onIntlChange.on('notifyExternalChange', this.detectFunction, this, this.randomId);\n        if (!isUndefined(selector)) {\n            this.appendTo();\n        }\n    }\n    requiredModules() {\n        return [];\n    }\n    /**\n     * Destroys the sub modules while destroying the widget\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (this.enablePersistence) {\n            this.setPersistData();\n        }\n        this.localObserver.destroy();\n        if (this.refreshing) {\n            return;\n        }\n        removeClass([this.element], ['e-control']);\n        this.trigger('destroyed', { cancel: false });\n        super.destroy();\n        this.moduleLoader.clean();\n        onIntlChange.off('notifyExternalChange', this.detectFunction, this.randomId);\n    }\n    /**\n     * Applies all the pending property changes and render the component again.\n     *\n     * @returns {void} ?\n     */\n    refresh() {\n        this.refreshing = true;\n        this.moduleLoader.clean();\n        this.destroy();\n        this.clearChanges();\n        this.localObserver = new Observer(this);\n        this.preRender();\n        this.injectModules();\n        this.render();\n        this.refreshing = false;\n    }\n    accessMount() {\n        if (this.mount && !this.isReactHybrid) {\n            this.mount();\n        }\n    }\n    /**\n     * Returns the route element of the component\n     *\n     * @returns {HTMLElement} ?\n     */\n    getRootElement() {\n        if (this.isReactHybrid) {\n            // eslint-disable-next-line\n            return this.actualElement;\n        }\n        else {\n            return this.element;\n        }\n    }\n    /**\n     * Returns the persistence data for component\n     *\n     * @returns {any} ?\n     */\n    // eslint-disable-next-line\n    getLocalData() {\n        const eleId = this.getModuleName() + this.element.id;\n        if (versionBasedStatePersistence) {\n            return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);\n        }\n        else {\n            return window.localStorage.getItem(eleId);\n        }\n    }\n    /**\n     * Appends the control within the given HTML element\n     *\n     * @param {string | HTMLElement} selector - Target element where control needs to be appended\n     * @returns {void} ?\n     */\n    appendTo(selector) {\n        if (!isNullOrUndefined(selector) && typeof (selector) === 'string') {\n            this.element = select(selector, document);\n        }\n        else if (!isNullOrUndefined(selector)) {\n            this.element = selector;\n        }\n        if (!isNullOrUndefined(this.element)) {\n            const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n            addClass([this.element], ['e-control', moduleClass]);\n            this.isProtectedOnChange = false;\n            if (this.needsID && !this.element.id) {\n                this.element.id = this.getUniqueID(this.getModuleName());\n            }\n            if (this.enablePersistence) {\n                this.mergePersistData();\n                window.addEventListener('unload', this.setPersistData.bind(this));\n            }\n            const inst = getValue('ej2_instances', this.element);\n            if (!inst || inst.indexOf(this) === -1) {\n                super.addInstance();\n            }\n            this.preRender();\n            this.injectModules();\n            this.render();\n            if (!this.mount) {\n                this.trigger('created');\n            }\n            else {\n                this.accessMount();\n            }\n        }\n    }\n    /**\n     * It is used to process the post rendering functionalities to a component.\n     *\n     * @param {Node} wrapperElement ?\n     * @returns {void} ?\n     */\n    renderComplete(wrapperElement) {\n        if (isBlazor()) {\n            const sfBlazor = 'sfBlazor';\n            // eslint-disable-next-line\n            window[sfBlazor].renderComplete(this.element, wrapperElement);\n        }\n        this.isRendered = true;\n    }\n    /**\n     * When invoked, applies the pending property changes immediately to the component.\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        this.injectModules();\n        super.dataBind();\n    }\n    /**\n     * Attach one or more  event handler to the current component context.\n     * It is used for internal handling event internally within the component only.\n     *\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs\n     * @param {Object} context - optional parameter Specifies the context to be bind in the handler.\n     * @returns {void} ?\n     * @private\n     */\n    on(event, handler, context) {\n        if (typeof event === 'string') {\n            this.localObserver.on(event, handler, context);\n        }\n        else {\n            for (const arg of event) {\n                this.localObserver.on(arg.event, arg.handler, arg.context);\n            }\n        }\n    }\n    /**\n     * To remove one or more event handler that has been attached with the on() method.\n     *\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the function to run when the event occurs\n     * @returns {void} ?\n     * @private\n     */\n    off(event, handler) {\n        if (typeof event === 'string') {\n            this.localObserver.off(event, handler);\n        }\n        else {\n            for (const arg of event) {\n                this.localObserver.off(arg.event, arg.handler);\n            }\n        }\n    }\n    /**\n     * To notify the handlers in the specified event.\n     *\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @returns {void} ?\n     * @private\n     */\n    notify(property, argument) {\n        if (this.isDestroyed !== true) {\n            this.localObserver.notify(property, argument);\n        }\n    }\n    /**\n     * Get injected modules\n     *\n     * @returns {Function} ?\n     * @private\n     */\n    getInjectedModules() {\n        return this.injectedModules;\n    }\n    /**\n     * Dynamically injects the required modules to the component.\n     *\n     * @param {Function} moduleList ?\n     * @returns {void} ?\n     */\n    static Inject(...moduleList) {\n        if (!this.prototype.injectedModules) {\n            this.prototype.injectedModules = [];\n        }\n        for (let i = 0; i < moduleList.length; i++) {\n            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {\n                this.prototype.injectedModules.push(moduleList[i]);\n            }\n        }\n    }\n    /**\n     * This is a instance method to create an element.\n     *\n     * @param {string} tagName ?\n     * @param {ElementProperties} prop ?\n     * @param {boolean} isVDOM ?\n     * @returns {any} ?\n     * @private\n     */\n    // eslint-disable-next-line\n    createElement(tagName, prop, isVDOM) {\n        return createElement(tagName, prop);\n    }\n    /**\n     *\n     * @param {Function} handler - handler to be triggered after state Updated.\n     * @param {any} argument - Arguments to be passed to caller.\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    triggerStateChange(handler, argument) {\n        if (this.isReactHybrid) {\n            // eslint-disable-next-line\n            this.setState();\n            this.currentContext = { calls: handler, args: argument };\n        }\n    }\n    // tslint: enable: no-any\n    injectModules() {\n        if (this.injectedModules && this.injectedModules.length) {\n            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);\n        }\n    }\n    detectFunction(args) {\n        const prop = Object.keys(args);\n        if (prop.length) {\n            this[prop[0]] = args[prop[0]];\n        }\n    }\n    mergePersistData() {\n        let data;\n        if (versionBasedStatePersistence) {\n            data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);\n        }\n        else {\n            data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        }\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n    }\n    setPersistData() {\n        if (!this.isDestroyed) {\n            if (versionBasedStatePersistence) {\n                window.localStorage.setItem(this.getModuleName() +\n                    this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());\n            }\n            else {\n                window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());\n            }\n        }\n    }\n    //tslint:disable-next-line\n    appendReactElement(element, container) {\n        //No Code\n    }\n    ;\n    //tslint:disable-next-line\n    renderReactTemplates() {\n        //No Code\n    }\n    // eslint-disable-next-line\n    clearTemplate(templateName, index) {\n        //No Code\n    }\n    getUniqueID(definedName) {\n        if (this.isHistoryChanged()) {\n            componentCount = 0;\n        }\n        lastPageID = this.pageID(location.href);\n        lastHistoryLen = history.length;\n        return definedName + '_' + lastPageID + '_' + componentCount++;\n    }\n    pageID(url) {\n        let hash = 0;\n        if (url.length === 0) {\n            return hash;\n        }\n        for (let i = 0; i < url.length; i++) {\n            const char = url.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return Math.abs(hash);\n    }\n    isHistoryChanged() {\n        return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;\n    }\n    addOnPersist(options) {\n        const persistObj = {};\n        for (const key of options) {\n            let objValue;\n            // eslint-disable-next-line\n            objValue = getValue(key, this);\n            if (!isUndefined(objValue)) {\n                setValue(key, this.getActualProperties(objValue), persistObj);\n            }\n        }\n        return JSON.stringify(persistObj, (key, value) => {\n            return this.getActualProperties(value);\n        });\n    }\n    getActualProperties(obj) {\n        if (obj instanceof ChildProperty) {\n            return getValue('properties', obj);\n        }\n        else {\n            return obj;\n        }\n    }\n    ignoreOnPersist(options) {\n        return JSON.stringify(this.iterateJsonProperties(this.properties, options));\n    }\n    iterateJsonProperties(obj, ignoreList) {\n        const newObj = {};\n        for (const key of Object.keys(obj)) {\n            if (ignoreList.indexOf(key) === -1) {\n                // eslint-disable-next-line\n                const value = obj[key];\n                if (typeof value === 'object' && !(value instanceof Array)) {\n                    const newList = ignoreList.filter((str) => {\n                        return new RegExp(key + '.').test(str);\n                    }).map((str) => {\n                        return str.replace(key + '.', '');\n                    });\n                    newObj[key] = this.iterateJsonProperties(this.getActualProperties(value), newList);\n                }\n                else {\n                    newObj[key] = value;\n                }\n            }\n        }\n        return newObj;\n    }\n};\n__decorate$1([\n    Property(false)\n], Component.prototype, \"enablePersistence\", void 0);\n__decorate$1([\n    Property()\n], Component.prototype, \"enableRtl\", void 0);\n__decorate$1([\n    Property()\n], Component.prototype, \"locale\", void 0);\nComponent = __decorate$1([\n    NotifyPropertyChanges\n], Component);\n//Function handling for page navigation detection\n/* istanbul ignore next */\n(() => {\n    if (typeof window !== 'undefined') {\n        window.addEventListener('popstate', \n        /* istanbul ignore next */\n        () => {\n            componentCount = 0;\n        });\n    }\n})();\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Draggable_1;\nconst defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };\nconst isDraggedObject = { isDragged: false };\n/**\n * Specifies the position coordinates\n */\nclass Position extends ChildProperty {\n}\n__decorate$2([\n    Property(0)\n], Position.prototype, \"left\", void 0);\n__decorate$2([\n    Property(0)\n], Position.prototype, \"top\", void 0);\n/**\n * Draggable Module provides support to enable draggable functionality in Dom Elements.\n * ```html\n * <div id='drag'>Draggable</div>\n * <script>\n * var ele = document.getElementById('drag');\n * var drag:Draggable = new Draggable(ele,{\n *     clone:false,\n *     drag: function(e) {\n *      //drag handler code.\n *      },\n *     handle:'.class'\n * });\n * </script>\n * ```\n */\nlet Draggable = Draggable_1 = class Draggable extends Base {\n    constructor(element, options) {\n        super(options, element);\n        this.dragLimit = Draggable_1.getDefaultPosition();\n        this.borderWidth = Draggable_1.getDefaultPosition();\n        this.padding = Draggable_1.getDefaultPosition();\n        this.diffX = 0;\n        this.prevLeft = 0;\n        this.prevTop = 0;\n        this.dragProcessStarted = false;\n        /* tslint:disable no-any */\n        this.eleTop = 0;\n        this.tapHoldTimer = 0;\n        this.externalInitialize = false;\n        this.diffY = 0;\n        this.parentScrollX = 0;\n        this.parentScrollY = 0;\n        this.droppables = {};\n        this.bind();\n    }\n    bind() {\n        this.toggleEvents();\n        if (Browser.isIE) {\n            addClass([this.element], 'e-block-touch');\n        }\n        this.droppables[this.scope] = {};\n    }\n    static getDefaultPosition() {\n        return extend({}, defaultPosition);\n    }\n    toggleEvents(isUnWire) {\n        let ele;\n        if (!isUndefined(this.handle)) {\n            ele = select(this.handle, this.element);\n        }\n        let handler = (this.enableTapHold && Browser.isDevice && Browser.isTouch) ? this.mobileInitialize : this.initialize;\n        if (isUnWire) {\n            EventHandler.remove(ele || this.element, Browser.touchStartEvent, handler);\n        }\n        else {\n            EventHandler.add(ele || this.element, Browser.touchStartEvent, handler, this);\n        }\n    }\n    /* istanbul ignore next */\n    mobileInitialize(evt) {\n        let target = evt.currentTarget;\n        this.tapHoldTimer = setTimeout(() => {\n            this.externalInitialize = true;\n            this.removeTapholdTimer();\n            this.initialize(evt, target);\n        }, this.tapHoldThreshold);\n        EventHandler.add(document, Browser.touchMoveEvent, this.removeTapholdTimer, this);\n        EventHandler.add(document, Browser.touchEndEvent, this.removeTapholdTimer, this);\n    }\n    /* istanbul ignore next */\n    removeTapholdTimer() {\n        clearTimeout(this.tapHoldTimer);\n        EventHandler.remove(document, Browser.touchMoveEvent, this.removeTapholdTimer);\n        EventHandler.remove(document, Browser.touchEndEvent, this.removeTapholdTimer);\n    }\n    /* istanbul ignore next */\n    getScrollableParent(element, axis) {\n        let scroll = { 'vertical': 'scrollHeight', 'horizontal': 'scrollWidth' };\n        let client = { 'vertical': 'clientHeight', 'horizontal': 'clientWidth' };\n        if (isNullOrUndefined(element)) {\n            return null;\n        }\n        if (element[scroll[axis]] > element[client[axis]]) {\n            if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {\n                if (axis === 'vertical') {\n                    this.parentScrollY = this.parentScrollY +\n                        (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);\n                    this.tempScrollHeight = element.scrollHeight;\n                }\n                else {\n                    this.parentScrollX = this.parentScrollX +\n                        (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);\n                    this.tempScrollWidth = element.scrollWidth;\n                }\n                if (!isNullOrUndefined(element)) {\n                    return this.getScrollableParent(element.parentNode, axis);\n                }\n                else {\n                    return element;\n                }\n            }\n            else {\n                return this.getScrollableParent(element.parentNode, axis);\n            }\n        }\n        else {\n            return this.getScrollableParent(element.parentNode, axis);\n        }\n    }\n    getScrollableValues() {\n        this.parentScrollX = 0;\n        this.parentScrollY = 0;\n        let isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');\n        let verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');\n        let horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');\n    }\n    initialize(evt, curTarget) {\n        this.currentStateTarget = evt.target;\n        if (this.isDragStarted()) {\n            return;\n        }\n        else {\n            this.isDragStarted(true);\n            this.externalInitialize = false;\n        }\n        this.target = (evt.currentTarget || curTarget);\n        this.dragProcessStarted = false;\n        if (this.abort) {\n            /* tslint:disable no-any */\n            let abortSelectors = this.abort;\n            if (typeof abortSelectors === 'string') {\n                abortSelectors = [abortSelectors];\n            }\n            for (let i = 0; i < abortSelectors.length; i++) {\n                if (!isNullOrUndefined(closest(evt.target, abortSelectors[i]))) {\n                    /* istanbul ignore next */\n                    if (this.isDragStarted()) {\n                        this.isDragStarted(true);\n                    }\n                    return;\n                }\n            }\n        }\n        if (this.preventDefault && !isUndefined(evt.changedTouches) && evt.type !== 'touchstart') {\n            evt.preventDefault();\n        }\n        this.element.setAttribute('aria-grabbed', 'true');\n        let intCoord = this.getCoordinates(evt);\n        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };\n        if (!this.clone) {\n            let pos = this.element.getBoundingClientRect();\n            this.getScrollableValues();\n            if (evt.clientX === evt.pageX) {\n                this.parentScrollX = 0;\n            }\n            if (evt.clientY === evt.pageY) {\n                this.parentScrollY = 0;\n            }\n            this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);\n            this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);\n        }\n        if (this.externalInitialize) {\n            this.intDragStart(evt);\n        }\n        else {\n            EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);\n            EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);\n        }\n        this.toggleEvents(true);\n        if (evt.type !== 'touchstart' && this.isPreventSelect) {\n            document.body.classList.add('e-prevent-select');\n        }\n        this.externalInitialize = false;\n        EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);\n    }\n    intDragStart(evt) {\n        this.removeTapholdTimer();\n        let isChangeTouch = !isUndefined(evt.changedTouches);\n        if (isChangeTouch && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        if (isChangeTouch) {\n            evt.preventDefault();\n        }\n        let intCordinate = this.getCoordinates(evt);\n        let pos;\n        let styleProp = getComputedStyle(this.element);\n        this.margin = {\n            left: parseInt(styleProp.marginLeft, 10),\n            top: parseInt(styleProp.marginTop, 10),\n            right: parseInt(styleProp.marginRight, 10),\n            bottom: parseInt(styleProp.marginBottom, 10),\n        };\n        let element = this.element;\n        if (this.clone && this.dragTarget) {\n            let intClosest = closest(evt.target, this.dragTarget);\n            if (!isNullOrUndefined(intClosest)) {\n                element = intClosest;\n            }\n        }\n        /* istanbul ignore next */\n        if (this.isReplaceDragEle) {\n            element = this.currentStateCheck(evt.target, element);\n        }\n        this.offset = this.calculateParentPosition(element);\n        this.position = this.getMousePosition(evt, this.isDragScroll);\n        let x = this.initialPosition.x - intCordinate.pageX;\n        let y = this.initialPosition.y - intCordinate.pageY;\n        let distance = Math.sqrt((x * x) + (y * y));\n        if ((distance >= this.distance || this.externalInitialize)) {\n            let ele = this.getHelperElement(evt);\n            if (!ele || isNullOrUndefined(ele)) {\n                return;\n            }\n            let dragTargetElement = this.helperElement = ele;\n            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);\n            if (this.dragStart) {\n                let curTarget = this.getProperTargetElement(evt);\n                let args = {\n                    event: evt,\n                    element: element,\n                    target: curTarget,\n                    bindEvents: isBlazor() ? this.bindDragEvents.bind(this) : null,\n                    dragElement: dragTargetElement\n                };\n                this.trigger('dragStart', args);\n            }\n            if (this.dragArea) {\n                this.setDragArea();\n            }\n            else {\n                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };\n                this.borderWidth = { top: 0, left: 0 };\n            }\n            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };\n            if (this.clone && !this.enableTailMode) {\n                this.diffX = this.position.left - this.offset.left;\n                this.diffY = this.position.top - this.offset.top;\n            }\n            this.getScrollableValues();\n            // when drag element has margin-top\n            let styles = getComputedStyle(element);\n            let marginTop = parseFloat(styles.marginTop);\n            /* istanbul ignore next */\n            if (this.clone && marginTop !== 0) {\n                pos.top += marginTop;\n            }\n            this.eleTop = !isNaN(parseFloat(styles.top)) ? parseFloat(styles.top) - this.offset.top : 0;\n            /* istanbul ignore next */\n            // if (this.eleTop > 0) {\n            //     pos.top += this.eleTop;\n            // }\n            if (this.enableScrollHandler && !this.clone) {\n                pos.top -= this.parentScrollY;\n                pos.left -= this.parentScrollX;\n            }\n            let posValue = this.getProcessedPositionValue({\n                top: (pos.top - this.diffY) + 'px',\n                left: (pos.left - this.diffX) + 'px'\n            });\n            this.dragElePosition = { top: pos.top, left: pos.left };\n            setStyleAttribute(dragTargetElement, this.getDragPosition({ position: 'absolute', left: posValue.left, top: posValue.top }));\n            EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n            EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n            if (!isBlazor()) {\n                this.bindDragEvents(dragTargetElement);\n            }\n        }\n    }\n    bindDragEvents(dragTargetElement) {\n        if (isVisible(dragTargetElement)) {\n            EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);\n            EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);\n            this.setGlobalDroppables(false, this.element, dragTargetElement);\n        }\n        else {\n            this.toggleEvents();\n            document.body.classList.remove('e-prevent-select');\n        }\n    }\n    elementInViewport(el) {\n        this.top = el.offsetTop;\n        this.left = el.offsetLeft;\n        this.width = el.offsetWidth;\n        this.height = el.offsetHeight;\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            this.top += el.offsetTop;\n            this.left += el.offsetLeft;\n        }\n        return (this.top >= window.pageYOffset &&\n            this.left >= window.pageXOffset &&\n            (this.top + this.height) <= (window.pageYOffset + window.innerHeight) &&\n            (this.left + this.width) <= (window.pageXOffset + window.innerWidth));\n    }\n    getProcessedPositionValue(value) {\n        if (this.queryPositionInfo) {\n            return this.queryPositionInfo(value);\n        }\n        return value;\n    }\n    calculateParentPosition(ele) {\n        if (isNullOrUndefined(ele)) {\n            return { left: 0, top: 0 };\n        }\n        let rect = ele.getBoundingClientRect();\n        let style = getComputedStyle(ele);\n        return {\n            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),\n            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)\n        };\n    }\n    // tslint:disable-next-line:max-func-body-length\n    intDrag(evt) {\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        let left;\n        let top;\n        this.position = this.getMousePosition(evt, this.isDragScroll);\n        let docHeight = this.getDocumentWidthHeight('Height');\n        if (docHeight < this.position.top) {\n            this.position.top = docHeight;\n        }\n        let docWidth = this.getDocumentWidthHeight('Width');\n        if (docWidth < this.position.left) {\n            this.position.left = docWidth;\n        }\n        if (this.drag) {\n            let curTarget = this.getProperTargetElement(evt);\n            this.trigger('drag', { event: evt, element: this.element, target: curTarget });\n        }\n        let eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            /* tslint:disable no-any */\n            let flag = true;\n            if (this.hoverObject) {\n                if (this.hoverObject.instance !== eleObj.instance) {\n                    this.triggerOutFunction(evt, eleObj);\n                }\n                else {\n                    flag = false;\n                }\n            }\n            if (flag) {\n                eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n                eleObj.instance.intOver(evt, eleObj.target);\n                this.hoverObject = eleObj;\n            }\n        }\n        else if (this.hoverObject) {\n            this.triggerOutFunction(evt, eleObj);\n        }\n        let helperElement = this.droppables[this.scope].helper;\n        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);\n        let tLeft = this.parentClientRect.left;\n        let tTop = this.parentClientRect.top;\n        let intCoord = this.getCoordinates(evt);\n        let pagex = intCoord.pageX;\n        let pagey = intCoord.pageY;\n        let dLeft = this.position.left - this.diffX;\n        let dTop = this.position.top - this.diffY;\n        let styles = getComputedStyle(helperElement);\n        if (this.dragArea) {\n            if (this.pageX !== pagex || this.skipDistanceCheck) {\n                let helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)\n                    + parseFloat(styles.marginRight));\n                if (this.dragLimit.left > dLeft && dLeft > 0) {\n                    left = this.dragLimit.left;\n                }\n                else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {\n                    left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;\n                }\n                else {\n                    left = dLeft < 0 ? this.dragLimit.left : dLeft;\n                }\n            }\n            if (this.pageY !== pagey || this.skipDistanceCheck) {\n                let helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)\n                    + parseFloat(styles.marginBottom));\n                if (this.dragLimit.top > dTop && dTop > 0) {\n                    top = this.dragLimit.top;\n                }\n                else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {\n                    top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;\n                }\n                else {\n                    top = dTop < 0 ? this.dragLimit.top : dTop;\n                }\n            }\n        }\n        else {\n            left = dLeft;\n            top = dTop;\n        }\n        let iTop = tTop + this.borderWidth.top;\n        let iLeft = tLeft + this.borderWidth.left;\n        if (this.dragProcessStarted) {\n            if (isNullOrUndefined(top)) {\n                top = this.prevTop;\n            }\n            if (isNullOrUndefined(left)) {\n                left = this.prevLeft;\n            }\n        }\n        let draEleTop;\n        let draEleLeft;\n        if (this.dragArea) {\n            this.dragLimit.top = this.clone ? this.dragLimit.top : 0;\n            draEleTop = (top - iTop) < 0 ? this.dragLimit.top : (top - iTop);\n            draEleLeft = (left - iLeft) < 0 ? this.dragElePosition.left : (left - iLeft);\n        }\n        else {\n            draEleTop = top - iTop;\n            draEleLeft = left - iLeft;\n        }\n        let marginTop = parseFloat(getComputedStyle(this.element).marginTop);\n        // when drag-element has margin-top\n        /* istanbul ignore next */\n        if (marginTop > 0) {\n            if (this.clone) {\n                draEleTop += marginTop;\n                if (dTop < 0) {\n                    if ((marginTop + dTop) >= 0) {\n                        draEleTop = marginTop + dTop;\n                    }\n                    else {\n                        draEleTop -= marginTop;\n                    }\n                }\n                draEleTop = (this.dragLimit.bottom < draEleTop) ? this.dragLimit.bottom : draEleTop;\n            }\n            if ((top - iTop) < 0) {\n                if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {\n                    let tempDraEleTop = this.dragLimit.top + dTop - iTop;\n                    if ((tempDraEleTop + marginTop + iTop) < 0) {\n                        draEleTop -= marginTop + iTop;\n                    }\n                    else {\n                        draEleTop = tempDraEleTop;\n                    }\n                }\n                else {\n                    draEleTop -= marginTop + iTop;\n                }\n            }\n        }\n        /* istanbul ignore next */\n        // if(this.eleTop > 0) {\n        //      draEleTop += this.eleTop;\n        // }\n        if (this.enableScrollHandler && !this.clone) {\n            draEleTop -= this.parentScrollY;\n            draEleLeft -= this.parentScrollX;\n        }\n        let dragValue = this.getProcessedPositionValue({ top: draEleTop + 'px', left: draEleLeft + 'px' });\n        setStyleAttribute(helperElement, this.getDragPosition(dragValue));\n        if (!this.elementInViewport(helperElement) && this.enableAutoScroll) {\n            this.helperElement.scrollIntoView();\n        }\n        this.dragProcessStarted = true;\n        this.prevLeft = left;\n        this.prevTop = top;\n        this.position.left = left;\n        this.position.top = top;\n        this.pageX = pagex;\n        this.pageY = pagey;\n    }\n    triggerOutFunction(evt, eleObj) {\n        this.hoverObject.instance.intOut(evt, eleObj.target);\n        this.hoverObject.instance.dragData[this.scope] = null;\n        this.hoverObject = null;\n    }\n    getDragPosition(dragValue) {\n        let temp = extend({}, dragValue);\n        if (this.axis) {\n            if (this.axis === 'x') {\n                delete temp.top;\n            }\n            else if (this.axis === 'y') {\n                delete temp.left;\n            }\n        }\n        return temp;\n    }\n    getDocumentWidthHeight(str) {\n        let docBody = document.body;\n        let docEle = document.documentElement;\n        let returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);\n        return returnValue;\n    }\n    intDragStop(evt) {\n        this.dragProcessStarted = false;\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        let type = ['touchend', 'pointerup', 'mouseup'];\n        if (type.indexOf(evt.type) !== -1) {\n            if (this.dragStop) {\n                let curTarget = this.getProperTargetElement(evt);\n                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });\n            }\n            this.intDestroy(evt);\n        }\n        else {\n            this.element.setAttribute('aria-grabbed', 'false');\n        }\n        let eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            eleObj.instance.dragStopCalled = true;\n            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n            eleObj.instance.intDrop(evt, eleObj.target);\n        }\n        this.setGlobalDroppables(true);\n        document.body.classList.remove('e-prevent-select');\n    }\n    /**\n     * @private\n     */\n    intDestroy(evt) {\n        this.dragProcessStarted = false;\n        this.toggleEvents();\n        document.body.classList.remove('e-prevent-select');\n        this.element.setAttribute('aria-grabbed', 'false');\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);\n        if (this.isDragStarted()) {\n            this.isDragStarted(true);\n        }\n    }\n    // triggers when property changed\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    getModuleName() {\n        return 'draggable';\n    }\n    isDragStarted(change) {\n        if (change) {\n            isDraggedObject.isDragged = !isDraggedObject.isDragged;\n        }\n        return isDraggedObject.isDragged;\n    }\n    setDragArea() {\n        let eleWidthBound;\n        let eleHeightBound;\n        let top = 0;\n        let left = 0;\n        let ele;\n        let type = typeof this.dragArea;\n        if (type === 'string') {\n            ele = select(this.dragArea);\n        }\n        else {\n            ele = this.dragArea;\n        }\n        if (ele) {\n            let elementArea = ele.getBoundingClientRect();\n            eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;\n            eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;\n            let keys = ['Top', 'Left', 'Bottom', 'Right'];\n            let styles = getComputedStyle(ele);\n            for (let i = 0; i < keys.length; i++) {\n                let key = keys[i];\n                let tborder = styles['border' + key + 'Width'];\n                let tpadding = styles['padding' + key];\n                let lowerKey = key.toLowerCase();\n                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);\n                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);\n            }\n            top = elementArea.top;\n            left = elementArea.left;\n            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;\n            this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;\n            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);\n            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);\n        }\n    }\n    getProperTargetElement(evt) {\n        let intCoord = this.getCoordinates(evt);\n        let ele;\n        let prevStyle = this.helperElement.style.pointerEvents || '';\n        if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {\n            this.helperElement.style.pointerEvents = 'none';\n            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);\n            this.helperElement.style.pointerEvents = prevStyle;\n        }\n        else {\n            ele = evt.target;\n        }\n        return ele;\n    }\n    /* istanbul ignore next */\n    currentStateCheck(ele, oldEle) {\n        let elem;\n        if (!isNullOrUndefined(this.currentStateTarget) && this.currentStateTarget !== ele) {\n            elem = this.currentStateTarget;\n        }\n        else {\n            elem = !isNullOrUndefined(oldEle) ? oldEle : ele;\n        }\n        return elem;\n    }\n    getMousePosition(evt, isdragscroll) {\n        /* tslint:disable no-any */\n        let dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;\n        let intCoord = this.getCoordinates(evt);\n        let pageX;\n        let pageY;\n        let isOffsetParent = isNullOrUndefined(dragEle.offsetParent);\n        /* istanbul ignore next */\n        if (isdragscroll) {\n            pageX = this.clone ? intCoord.pageX :\n                (intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft)) - this.relativeXPosition;\n            pageY = this.clone ? intCoord.pageY :\n                (intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop)) - this.relativeYPosition;\n        }\n        else {\n            pageX = this.clone ? intCoord.pageX : (intCoord.pageX + window.pageXOffset) - this.relativeXPosition;\n            pageY = this.clone ? intCoord.pageY : (intCoord.pageY + window.pageYOffset) - this.relativeYPosition;\n        }\n        return {\n            left: pageX - (this.margin.left + this.cursorAt.left),\n            top: pageY - (this.margin.top + this.cursorAt.top)\n        };\n    }\n    getCoordinates(evt) {\n        if (evt.type.indexOf('touch') > -1) {\n            return evt.changedTouches[0];\n        }\n        return evt;\n    }\n    getHelperElement(evt) {\n        let element;\n        if (this.clone) {\n            if (this.helper) {\n                element = this.helper({ sender: evt, element: this.target });\n            }\n            else {\n                element = createElement('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });\n                document.body.appendChild(element);\n            }\n        }\n        else {\n            element = this.element;\n        }\n        return element;\n    }\n    setGlobalDroppables(reset, drag, helper) {\n        this.droppables[this.scope] = reset ? null : {\n            draggable: drag,\n            helper: helper,\n            draggedElement: this.element\n        };\n    }\n    checkTargetElement(evt) {\n        let target = this.getProperTargetElement(evt);\n        let dropIns = this.getDropInstance(target);\n        if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {\n            let parent = closest(target.parentNode, '.e-droppable') || target.parentElement;\n            if (parent) {\n                dropIns = this.getDropInstance(parent);\n            }\n        }\n        return { target: target, instance: dropIns };\n    }\n    getDropInstance(ele) {\n        let name = 'getModuleName';\n        let drop;\n        let eleInst = ele && ele.ej2_instances;\n        if (eleInst) {\n            for (let inst of eleInst) {\n                if (inst[name]() === 'droppable') {\n                    drop = inst;\n                    break;\n                }\n            }\n        }\n        return drop;\n    }\n    destroy() {\n        this.toggleEvents(true);\n        super.destroy();\n    }\n};\n__decorate$2([\n    Complex({}, Position)\n], Draggable.prototype, \"cursorAt\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"clone\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"dragArea\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"isDragScroll\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"isReplaceDragEle\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"isPreventSelect\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"drag\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"dragStart\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"dragStop\", void 0);\n__decorate$2([\n    Property(1)\n], Draggable.prototype, \"distance\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"handle\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"abort\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"helper\", void 0);\n__decorate$2([\n    Property('default')\n], Draggable.prototype, \"scope\", void 0);\n__decorate$2([\n    Property('')\n], Draggable.prototype, \"dragTarget\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"axis\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"queryPositionInfo\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableTailMode\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"skipDistanceCheck\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"preventDefault\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableAutoScroll\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableTapHold\", void 0);\n__decorate$2([\n    Property(750)\n], Draggable.prototype, \"tapHoldThreshold\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableScrollHandler\", void 0);\nDraggable = Draggable_1 = __decorate$2([\n    NotifyPropertyChanges\n], Draggable);\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Droppable Module provides support to enable droppable functionality in Dom Elements.\n * ```html\n * <div id='drop'>Droppable</div>\n * <script>\n * let ele:HTMLElement = document.getElementById('drop');\n * var drag:Droppable = new Droppable(ele,{\n *     accept:'.drop',\n *     drop: function(e) {\n *      //drop handler code.\n *     }\n * });\n * </script>\n * ```\n */\nlet Droppable = class Droppable extends Base {\n    constructor(element, options) {\n        super(options, element);\n        this.mouseOver = false;\n        this.dragData = {};\n        this.dragStopCalled = false;\n        this.bind();\n    }\n    bind() {\n        this.wireEvents();\n    }\n    wireEvents() {\n        EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);\n    }\n    // triggers when property changed\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    getModuleName() {\n        return 'droppable';\n    }\n    intOver(event, element) {\n        if (!this.mouseOver) {\n            const drag = this.dragData[this.scope];\n            this.trigger('over', { event: event, target: element, dragData: drag });\n            this.mouseOver = true;\n        }\n    }\n    intOut(event, element) {\n        if (this.mouseOver) {\n            this.trigger('out', { evt: event, target: element });\n            this.mouseOver = false;\n        }\n    }\n    intDrop(evt, element) {\n        if (!this.dragStopCalled) {\n            return;\n        }\n        else {\n            this.dragStopCalled = false;\n        }\n        let accept = true;\n        const drag = this.dragData[this.scope];\n        const isDrag = drag ? (drag.helper && isVisible(drag.helper)) : false;\n        let area;\n        if (isDrag) {\n            area = this.isDropArea(evt, drag.helper, element);\n            if (this.accept) {\n                accept = matches(drag.helper, this.accept);\n            }\n        }\n        if (isDrag && this.drop && area.canDrop && accept) {\n            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });\n        }\n        this.mouseOver = false;\n    }\n    isDropArea(evt, helper, element) {\n        const area = { canDrop: true, target: element || evt.target };\n        const isTouch = evt.type === 'touchend';\n        if (isTouch || area.target === helper) {\n            helper.style.display = 'none';\n            const coord = isTouch ? (evt.changedTouches[0]) : evt;\n            const ele = document.elementFromPoint(coord.clientX, coord.clientY);\n            area.canDrop = false;\n            area.canDrop = compareElementParent(ele, this.element);\n            if (area.canDrop) {\n                area.target = ele;\n            }\n            helper.style.display = '';\n        }\n        return area;\n    }\n    destroy() {\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);\n        super.destroy();\n    }\n};\n__decorate$3([\n    Property()\n], Droppable.prototype, \"accept\", void 0);\n__decorate$3([\n    Property('default')\n], Droppable.prototype, \"scope\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"drop\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"over\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"out\", void 0);\nDroppable = __decorate$3([\n    NotifyPropertyChanges\n], Droppable);\n\nvar __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar KeyboardEvents_1;\nconst keyCode = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'control': 17,\n    'alt': 18,\n    'pause': 19,\n    'capslock': 20,\n    'space': 32,\n    'escape': 27,\n    'pageup': 33,\n    'pagedown': 34,\n    'end': 35,\n    'home': 36,\n    'leftarrow': 37,\n    'uparrow': 38,\n    'rightarrow': 39,\n    'downarrow': 40,\n    'insert': 45,\n    'delete': 46,\n    'f1': 112,\n    'f2': 113,\n    'f3': 114,\n    'f4': 115,\n    'f5': 116,\n    'f6': 117,\n    'f7': 118,\n    'f8': 119,\n    'f9': 120,\n    'f10': 121,\n    'f11': 122,\n    'f12': 123,\n    'semicolon': 186,\n    'plus': 187,\n    'comma': 188,\n    'minus': 189,\n    'dot': 190,\n    'forwardslash': 191,\n    'graveaccent': 192,\n    'openbracket': 219,\n    'backslash': 220,\n    'closebracket': 221,\n    'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\nlet KeyboardEvents = KeyboardEvents_1 = class KeyboardEvents extends Base {\n    /**\n     * Initializes the KeyboardEvents\n     *\n     * @param {HTMLElement} element ?\n     * @param {KeyboardEventsModel} options ?\n     */\n    constructor(element, options) {\n        super(options, element);\n        /**\n         * To handle a key press event returns null\n         *\n         * @param {KeyboardEventArgs} e ?\n         * @returns {void} ?\n         */\n        this.keyPressHandler = (e) => {\n            const isAltKey = e.altKey;\n            const isCtrlKey = e.ctrlKey;\n            const isShiftKey = e.shiftKey;\n            const curkeyCode = e.which;\n            const keys = Object.keys(this.keyConfigs);\n            for (const key of keys) {\n                const configCollection = this.keyConfigs[key].split(',');\n                for (const rconfig of configCollection) {\n                    const rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&\n                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n                        e.action = key;\n                        if (this.keyAction) {\n                            this.keyAction(e);\n                        }\n                    }\n                }\n            }\n        };\n        this.bind();\n    }\n    /**\n     * Unwire bound events and destroy the instance.\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        this.unwireEvents();\n        super.destroy();\n    }\n    /**\n     * Function can be used to specify certain action if a property is changed\n     *\n     * @param {KeyboardEventsModel} newProp ?\n     * @param {KeyboardEventsModel} oldProp ?\n     * @returns {void} ?\n     * @private\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        // No code are needed\n    }\n    bind() {\n        this.wireEvents();\n    }\n    /**\n     * To get the module name, returns 'keyboard'.\n     *\n     * @returns {string} ?\n     * @private\n     */\n    getModuleName() {\n        return 'keyboard';\n    }\n    /**\n     * Wiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    wireEvents() {\n        this.element.addEventListener(this.eventName, this.keyPressHandler);\n    }\n    /**\n     * Unwiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    unwireEvents() {\n        this.element.removeEventListener(this.eventName, this.keyPressHandler);\n    }\n    /**\n     * To get the key configuration data\n     *\n     * @param {string} config - configuration data\n     * @returns {KeyData} ?\n     */\n    static getKeyConfigData(config) {\n        if (config in this.configCache) {\n            return this.configCache[config];\n        }\n        const keys = config.toLowerCase().split('+');\n        const keyData = {\n            altKey: (keys.indexOf('alt') !== -1 ? true : false),\n            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),\n            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),\n            keyCode: null\n        };\n        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n            keyData.keyCode = Number(keys[keys.length - 1]);\n        }\n        else {\n            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n        }\n        KeyboardEvents_1.configCache[config] = keyData;\n        return keyData;\n    }\n    // Return the keycode value as string\n    static getKeyCode(keyVal) {\n        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);\n    }\n};\nKeyboardEvents.configCache = {};\n__decorate$4([\n    Property({})\n], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n__decorate$4([\n    Property('keyup')\n], KeyboardEvents.prototype, \"eventName\", void 0);\n__decorate$4([\n    Event$1()\n], KeyboardEvents.prototype, \"keyAction\", void 0);\nKeyboardEvents = KeyboardEvents_1 = __decorate$4([\n    NotifyPropertyChanges\n], KeyboardEvents);\n\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nclass L10n {\n    /**\n     * Constructor\n     *\n     * @param {string} controlName ?\n     * @param {Object} localeStrings ?\n     * @param {string} locale ?\n     */\n    constructor(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     *\n     * @param {string} locale ?\n     * @returns {void} ?\n     */\n    setLocale(locale) {\n        const intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    }\n    /**\n     * Sets the global locale for all components.\n     *\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     * @returns {void} ?\n     */\n    static load(localeObject) {\n        this.locale = extend(this.locale, localeObject, {}, true);\n    }\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     *\n     * @param {string} prop - specifies the property for which localize text to be returned.\n     * @returns {string} ?\n     */\n    getConstant(prop) {\n        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n        if (!isNullOrUndefined(this.currentLocale[prop])) {\n            return this.currentLocale[prop];\n        }\n        else {\n            return this.localeStrings[prop] || '';\n        }\n    }\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     *\n     * @param {Object} curObject ?\n     * @param {string} locale ?\n     * @returns {Object} ?\n     */\n    intGetControlConstant(curObject, locale) {\n        if ((curObject)[locale]) {\n            return (curObject)[locale][this.controlName];\n        }\n        return null;\n    }\n}\nL10n.locale = {};\n\nvar __decorate$5 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\nclass SwipeSettings extends ChildProperty {\n}\n__decorate$5([\n    Property(50)\n], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\nconst swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\nlet Touch = class Touch extends Base {\n    /* End-Properties */\n    constructor(element, options) {\n        super(options, element);\n        this.touchAction = true;\n        this.tapCount = 0;\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.startEvent = (evt) => {\n            if (this.touchAction === true) {\n                const point = this.updateChangeTouches(evt);\n                if (evt.changedTouches !== undefined) {\n                    this.touchAction = false;\n                }\n                this.isTouchMoved = false;\n                this.movedDirection = '';\n                this.startPoint = this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n                this.startEventData = point;\n                this.hScrollLocked = this.vScrollLocked = false;\n                this.tStampStart = Date.now();\n                this.timeOutTapHold = setTimeout(() => { this.tapHoldEvent(evt); }, this.tapHoldThreshold);\n                EventHandler.add(this.element, Browser.touchMoveEvent, this.moveEvent, this);\n                EventHandler.add(this.element, Browser.touchEndEvent, this.endEvent, this);\n                EventHandler.add(this.element, Browser.touchCancelEvent, this.cancelEvent, this);\n            }\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.moveEvent = (evt) => {\n            const point = this.updateChangeTouches(evt);\n            this.movedPoint = point;\n            this.isTouchMoved = !(point.clientX === this.startPoint.clientX && point.clientY === this.startPoint.clientY);\n            let eScrollArgs = {};\n            if (this.isTouchMoved) {\n                clearTimeout(this.timeOutTapHold);\n                this.calcScrollPoints(evt);\n                const scrollArg = {\n                    startEvents: this.startEventData,\n                    originalEvent: evt, startX: this.startPoint.clientX,\n                    startY: this.startPoint.clientY, distanceX: this.distanceX,\n                    distanceY: this.distanceY, scrollDirection: this.scrollDirection,\n                    velocity: this.getVelocity(point)\n                };\n                eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n                this.trigger('scroll', eScrollArgs);\n                this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n            }\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.cancelEvent = (evt) => {\n            clearTimeout(this.timeOutTapHold);\n            clearTimeout(this.timeOutTap);\n            this.tapCount = 0;\n            this.swipeFn(evt);\n            EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.endEvent = (evt) => {\n            this.swipeFn(evt);\n            if (!this.isTouchMoved) {\n                if (typeof this.tap === 'function') {\n                    this.trigger('tap', { originalEvent: evt, tapCount: ++this.tapCount });\n                    this.timeOutTap = setTimeout(() => {\n                        this.tapCount = 0;\n                    }, this.tapThreshold);\n                }\n            }\n            this.modeclear();\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.swipeFn = (evt) => {\n            clearTimeout(this.timeOutTapHold);\n            clearTimeout(this.timeOutTap);\n            const point = this.updateChangeTouches(evt);\n            let diffX = point.clientX - this.startPoint.clientX;\n            let diffY = point.clientY - this.startPoint.clientY;\n            diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n            diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n            this.isTouchMoved = diffX > 1 || diffY > 1;\n            this.endPoint = point;\n            this.calcPoints(evt);\n            const swipeArgs = {\n                originalEvent: evt,\n                startEvents: this.startEventData,\n                startX: this.startPoint.clientX,\n                startY: this.startPoint.clientY,\n                distanceX: this.distanceX, distanceY: this.distanceY, swipeDirection: this.movedDirection,\n                velocity: this.getVelocity(point)\n            };\n            if (this.isTouchMoved) {\n                let eSwipeArgs;\n                const tDistance = this.swipeSettings.swipeThresholdDistance;\n                // eslint-disable-next-line\n                eSwipeArgs = extend(eSwipeArgs, this.defaultArgs, swipeArgs);\n                let canTrigger = false;\n                const ele = this.element;\n                const scrollBool = this.isScrollable(ele);\n                const moved = swipeRegex.test(this.movedDirection);\n                if ((tDistance < this.distanceX && !moved) || (tDistance < this.distanceY && moved)) {\n                    if (!scrollBool) {\n                        canTrigger = true;\n                    }\n                    else {\n                        canTrigger = this.checkSwipe(ele, moved);\n                    }\n                }\n                if (canTrigger) {\n                    this.trigger('swipe', eSwipeArgs);\n                }\n            }\n            this.modeclear();\n        };\n        this.modeclear = () => {\n            this.modeClear = setTimeout(() => {\n                this.touchAction = true;\n            }, (typeof this.tap !== 'function' ? 0 : 20));\n            this.lastTapTime = new Date().getTime();\n            EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n            EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n            EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n        };\n        this.bind();\n    }\n    // triggers when property changed\n    /**\n     *\n     * @private\n     * @param {TouchModel} newProp ?\n     * @param {TouchModel} oldProp ?\n     * @returns {void} ?\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    bind() {\n        this.wireEvents();\n        if (Browser.isIE) {\n            this.element.classList.add('e-block-touch');\n        }\n    }\n    /**\n     * To destroy the touch instance.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        this.unwireEvents();\n        super.destroy();\n    }\n    // Need to changes the event binding once we updated the event handler.\n    wireEvents() {\n        EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n    }\n    unwireEvents() {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n    }\n    /**\n     * Returns module name as touch\n     *\n     * @returns {string} ?\n     * @private\n     */\n    getModuleName() {\n        return 'touch';\n    }\n    /**\n     * Returns if the HTML element is Scrollable.\n     *\n     * @param {HTMLElement} element - HTML Element to check if Scrollable.\n     * @returns {boolean} ?\n     */\n    isScrollable(element) {\n        const eleStyle = getComputedStyle(element);\n        const style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n        if ((/(auto|scroll)/).test(style)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n    tapHoldEvent(evt) {\n        this.tapCount = 0;\n        this.touchAction = true;\n        let eTapArgs;\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n        // eslint-disable-next-line\n        eTapArgs = { originalEvent: evt };\n        this.trigger('tapHold', eTapArgs);\n        EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    }\n    calcPoints(evt) {\n        const point = this.updateChangeTouches(evt);\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));\n        if (this.distanceX > this.distanceY) {\n            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';\n        }\n        else {\n            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';\n        }\n    }\n    calcScrollPoints(evt) {\n        const point = this.updateChangeTouches(evt);\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));\n        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';\n            this.hScrollLocked = true;\n        }\n        else {\n            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';\n            this.vScrollLocked = true;\n        }\n    }\n    getVelocity(pnt) {\n        const newX = pnt.clientX;\n        const newY = pnt.clientY;\n        const newT = Date.now();\n        const xDist = newX - this.startPoint.clientX;\n        const yDist = newY - this.startPoint.clientX;\n        const interval = newT - this.tStampStart;\n        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n    }\n    // eslint-disable-next-line\n    checkSwipe(ele, flag) {\n        const keys = ['scroll', 'offset'];\n        const temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {\n            return true;\n        }\n        return (ele[keys[0] + temp[1]] === 0) ||\n            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);\n    }\n    updateChangeTouches(evt) {\n        const point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;\n        return point;\n    }\n};\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"tap\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"tapHold\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"swipe\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"scroll\", void 0);\n__decorate$5([\n    Property(350)\n], Touch.prototype, \"tapThreshold\", void 0);\n__decorate$5([\n    Property(750)\n], Touch.prototype, \"tapHoldThreshold\", void 0);\n__decorate$5([\n    Complex({}, SwipeSettings)\n], Touch.prototype, \"swipeSettings\", void 0);\nTouch = __decorate$5([\n    NotifyPropertyChanges\n], Touch);\n\n/**\n * Template Engine\n */\nconst LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nconst QUOTES = new RegExp(/'|\"/g);\nconst IF_STMT = new RegExp('if ?\\\\(');\nconst ELSEIF_STMT = new RegExp('else if ?\\\\(');\nconst ELSE_STMT = new RegExp('else');\nconst FOR_STMT = new RegExp('for ?\\\\(');\nconst IF_OR_FOR = new RegExp('(/if|/for)');\nconst CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nconst NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nconst WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nconst DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nconst WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nlet exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nconst ARR_OBJ = /^\\..*/gm;\nconst SINGLE_SLASH = /\\\\/gi;\nconst DOUBLE_SLASH = /\\\\\\\\/gi;\nconst WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nconst WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\n\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nfunction compile$1(template, helper, ignorePrefix) {\n    const argName = 'data';\n    const evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n    const condtion = `var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-■\\\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\\\s='\"./]+)([\\\\w-./?=&\\\\\\\\#\"]+)((.)([\\\\w)(!-;/?-■\\\\s]+)['])/g);\n    if((str.match(valueRegEx)) && (str.match('svg') === null)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if (str.match(/(?:href='')/) === null) {\n        if((str.match(hrefRegex)) && (str.match('svg') === null)) {\n            var check = str.match(hrefRegex);\n            var str1 = str;\n            for (var i=0; i < check.length; i++) {\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\n                var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n                change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n                str1 = str1.replace(check1, change);\n            }\n            str = str.replace(str, str1);\n        }\n    }\n    `;\n    const fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n    const fn = new Function(argName, fnCode);\n    return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n    let varCOunt = 0;\n    /**\n     * Variable containing Local Keys\n     */\n    const localKeys = [];\n    const isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n    let singleSpace = '';\n    if (isClass) {\n        isClass.forEach((value) => {\n            singleSpace = value.replace(/\\s\\s+/g, ' ');\n            str = str.replace(value, singleSpace);\n        });\n    }\n    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, \n    // eslint-disable-next-line\n    (match, cnt, offset, matchStr) => {\n        const SPECIAL_CHAR = /@|#|\\$/gm;\n        const matches = cnt.match(CALL_FUNCTION);\n        // matches to detect any function calls\n        if (matches) {\n            const rlStr = matches[1];\n            if (ELSEIF_STMT.test(cnt)) {\n                //handling else-if condition\n                cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, (str) => {\n                    str = str.trim();\n                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (IF_STMT.test(cnt)) {\n                //handling if condition\n                cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, (strs) => {\n                    return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (FOR_STMT.test(cnt)) {\n                //handling for condition\n                const rlStr = matches[1].split(' of ');\n                // replace for each into actual JavaScript\n                // eslint-disable-next-line\n                cnt = '\"; ' + cnt.replace(matches[1], (mtc) => {\n                    localKeys.push(rlStr[0]);\n                    localKeys.push(rlStr[0] + 'Index');\n                    varCOunt = varCOunt + 1;\n                    // tslint:disable-next-line\n                    return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n                }) + '{ \\n ' + rlStr[0] + '= ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix)\n                    + '[i' + varCOunt + ']; \\n var ' + rlStr[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n            }\n            else {\n                //helper function handling\n                const fnStr = cnt.split('(');\n                // eslint-disable-next-line\n                let fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');\n                fNameSpace = (/\\./.test(fnStr[0]) ? '' : fNameSpace);\n                const ftArray = matches[1].split(',');\n                if (matches[1].length !== 0 && !(/data/).test(ftArray[0]) && !(/window./).test(ftArray[0])) {\n                    matches[1] = (fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1]);\n                }\n                const splRegexp = /@|\\$|#/gm;\n                const arrObj = /\\]\\./gm;\n                if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n                    const splArrRegexp = /@|\\$|#|\\]\\./gm;\n                    if (splArrRegexp.test(cnt)) {\n                        // tslint:disable-next-line\n                        cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, (strs) => {\n                            return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                        })) + '+ \"';\n                    }\n                }\n                else {\n                    cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +\n                        cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys, ignorePrefix)) +\n                        '+\"';\n                }\n            }\n        }\n        else if (ELSE_STMT.test(cnt)) {\n            // handling else condition\n            cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n            // eslint-disable-next-line\n        }\n        else if (!!cnt.match(IF_OR_FOR)) {\n            // close condition\n            cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n        }\n        else if (SPECIAL_CHAR.test(cnt)) {\n            // template string with double slash with special character\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n            }\n            cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n        }\n        else {\n            // template string with double slash\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n                cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n            }\n            else {\n                // evaluate normal expression\n                cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), (localKeys.indexOf(cnt) === -1), nameSpace, localKeys, ignorePrefix) + '+\"';\n            }\n        }\n        return cnt;\n    });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix) ? nameSpace + '.' + str : str);\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n    const arrObjReg = /^\\..*/gm;\n    return ((addNS && !(NOT_NUMBER.test(str)) &&\n        ignoreList.indexOf(str.split('.')[0]) === -1 && !(arrObjReg.test(str))) ? nameSpace + '.' + str : str);\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '[\"' + str : str);\n}\n// eslint-disable-next-line\nfunction SlashReplace(tempStr) {\n    const double = '\\\\\\\\';\n    if (tempStr.match(DOUBLE_SLASH)) {\n        // eslint-disable-next-line\n        tempStr = tempStr;\n    }\n    else {\n        tempStr = tempStr.replace(SINGLE_SLASH, double);\n    }\n    return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n    str = str.trim();\n    const windowFunc = /\\window\\./gm;\n    if (!windowFunc.test(str)) {\n        const quotes = /'|\"/gm;\n        const splRegexp = /@|\\$|#/gm;\n        if (splRegexp.test(str)) {\n            str = NameSpaceForspecialChar(str, (keys.indexOf(str) === -1), nameSpaceNew, keys) + '\"]';\n        }\n        if (ARR_OBJ.test(str)) {\n            return NameSpaceArrObj(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys);\n        }\n        else {\n            return addNameSpace(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys, ignorePrefix);\n        }\n    }\n    else {\n        return str;\n    }\n}\n\n/**\n * Template Engine Bridge\n */\nconst HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nconst HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nconst blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\nfunction getRandomId() {\n    return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\nfunction compile$$1(templateString, helper, ignorePrefix) {\n    const compiler = engineObj.compile(templateString, helper, ignorePrefix);\n    // eslint-disable-next-line\n    return (data, component, propName, templateId, isStringTemplate, index, element) => {\n        const result = compiler(data, component, propName, element);\n        const blazorTemplateId = 'BlazorTemplateId';\n        if (isBlazor() && !isStringTemplate) {\n            const randomId = getRandomId();\n            let blazorId = templateId + randomId;\n            if (!blazorTemplates[templateId]) {\n                blazorTemplates[templateId] = [];\n            }\n            if (!isNullOrUndefined(index)) {\n                const keys = Object.keys(blazorTemplates[templateId][index]);\n                for (const key of keys) {\n                    if (key !== blazorTemplateId && data[key]) {\n                        blazorTemplates[templateId][index][key] = data[key];\n                    }\n                    if (key === blazorTemplateId) {\n                        blazorId = blazorTemplates[templateId][index][key];\n                    }\n                }\n            }\n            else {\n                data[blazorTemplateId] = blazorId;\n                blazorTemplates[templateId].push(data);\n            }\n            // eslint-disable-next-line\n            return propName === 'rowTemplate' ? [createElement('tr', { id: blazorId, className: 'e-blazor-template' })] :\n                // eslint-disable-next-line\n                [createElement('div', { id: blazorId, className: 'e-blazor-template' })];\n        }\n        if (typeof result === 'string') {\n            if (HAS_SVG.test(result)) {\n                const ele = createElement('svg', { innerHTML: result });\n                return ele.childNodes;\n            }\n            else {\n                const ele = createElement((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });\n                return ele.childNodes;\n            }\n        }\n        else {\n            return result;\n        }\n    };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\nfunction updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n    if (isBlazor()) {\n        const ejsIntrop = 'sfBlazor';\n        window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n        if (isEmpty !== false) {\n            blazorTemplates[templateId] = [];\n        }\n    }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\nfunction resetBlazorTemplate(templateId, templateName, index) {\n    const templateDiv = document.getElementById(templateId);\n    if (templateDiv) {\n        // eslint-disable-next-line\n        const innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n        for (let i = 0; i < innerTemplates.length; i++) {\n            let tempId = ' ';\n            if (!isNullOrUndefined(index)) {\n                tempId = innerTemplates[index].getAttribute('data-templateId');\n            }\n            else {\n                tempId = innerTemplates[i].getAttribute('data-templateId');\n            }\n            const tempElement = document.getElementById(tempId);\n            if (tempElement) {\n                const length = tempElement.childNodes.length;\n                for (let j = 0; j < length; j++) {\n                    if (!isNullOrUndefined(index)) {\n                        innerTemplates[index].appendChild(tempElement.childNodes[0]);\n                        i = innerTemplates.length;\n                    }\n                    else {\n                        innerTemplates[i].appendChild(tempElement.childNodes[0]);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\nfunction setTemplateEngine(classObj) {\n    engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\nfunction getTemplateEngine() {\n    return engineObj.compile;\n}\n//Default Engine Class\nclass Engine {\n    // eslint-disable-next-line\n    compile(templateString, helper = {}, ignorePrefix) {\n        return compile$1(templateString, helper);\n    }\n}\nconst engineObj = { compile: new Engine().compile };\n\n/**\n * SanitizeHtmlHelper for sanitize the value.\n */\nconst removeTags = [\n    'script',\n    'style',\n    'iframe[src]',\n    'link[href*=\"javascript:\"]',\n    'object[type=\"text/x-scriptlet\"]',\n    'object[data^=\"data:text/html;base64\"]',\n    'img[src^=\"data:text/html;base64\"]',\n    '[src^=\"javascript:\"]',\n    '[dynsrc^=\"javascript:\"]',\n    '[lowsrc^=\"javascript:\"]',\n    '[type^=\"application/x-shockwave-flash\"]'\n];\nconst removeAttrs = [\n    { attribute: 'href', selector: '[href*=\"javascript:\"]' },\n    { attribute: 'background', selector: '[background^=\"javascript:\"]' },\n    { attribute: 'style', selector: '[style*=\"javascript:\"]' },\n    { attribute: 'style', selector: '[style*=\"expression(\"]' },\n    { attribute: 'href', selector: 'a[href^=\"data:text/html;base64\"]' }\n];\nconst jsEvents = ['onchange',\n    'onclick',\n    'onmouseover',\n    'onmouseout',\n    'onkeydown',\n    'onload',\n    'onerror',\n    'onblur',\n    'onfocus',\n    'onbeforeload',\n    'onbeforeunload',\n    'onkeyup',\n    'onsubmit',\n    'onafterprint',\n    'onbeforeonload',\n    'onbeforeprint',\n    'onblur',\n    'oncanplay',\n    'oncanplaythrough',\n    'onchange',\n    'onclick',\n    'oncontextmenu',\n    'ondblclick',\n    'ondrag',\n    'ondragend',\n    'ondragenter',\n    'ondragleave',\n    'ondragover',\n    'ondragstart',\n    'ondrop',\n    'ondurationchange',\n    'onemptied',\n    'onended',\n    'onerror',\n    'onerror',\n    'onfocus',\n    'onformchange',\n    'onforminput',\n    'onhaschange',\n    'oninput',\n    'oninvalid',\n    'onkeydown',\n    'onkeypress',\n    'onkeyup',\n    'onload',\n    'onloadeddata',\n    'onloadedmetadata',\n    'onloadstart',\n    'onmessage',\n    'onmousedown',\n    'onmousemove',\n    'onmouseout',\n    'onmouseover',\n    'onmouseup',\n    'onmousewheel',\n    'onoffline',\n    'onoine',\n    'ononline',\n    'onpagehide',\n    'onpageshow',\n    'onpause',\n    'onplay',\n    'onplaying',\n    'onpopstate',\n    'onprogress',\n    'onratechange',\n    'onreadystatechange',\n    'onredo',\n    'onresize',\n    'onscroll',\n    'onseeked',\n    'onseeking',\n    'onselect',\n    'onstalled',\n    'onstorage',\n    'onsubmit',\n    'onsuspend',\n    'ontimeupdate',\n    'onundo',\n    'onunload',\n    'onvolumechange',\n    'onwaiting',\n    'onmouseenter',\n    'onmouseleave',\n    'onmousewheel',\n    'onstart',\n    'onpropertychange'\n];\nclass SanitizeHtmlHelper {\n    static beforeSanitize() {\n        return {\n            selectors: {\n                tags: removeTags,\n                attributes: removeAttrs\n            }\n        };\n    }\n    static sanitize(value) {\n        const item = this.beforeSanitize();\n        const output = this.serializeValue(item, value);\n        return output;\n    }\n    static serializeValue(item, value) {\n        this.removeAttrs = item.selectors.attributes;\n        this.removeTags = item.selectors.tags;\n        this.wrapElement = document.createElement('div');\n        this.wrapElement.innerHTML = value;\n        this.removeXssTags();\n        this.removeJsEvents();\n        this.removeXssAttrs();\n        const tempEleValue = this.wrapElement.innerHTML;\n        this.removeElement();\n        return tempEleValue;\n    }\n    static removeElement() {\n        // Removes an element's attibute to avoid html tag validation\n        const nodes = this.wrapElement.children;\n        for (let j = 0; j < nodes.length; j++) {\n            const attribute = nodes[j].attributes;\n            for (let i = 0; i < attribute.length; i++) {\n                this.wrapElement.children[j].removeAttribute(attribute[i].localName);\n            }\n        }\n    }\n    static removeXssTags() {\n        const elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));\n        if (elements.length > 0) {\n            elements.forEach((element) => {\n                detach(element);\n            });\n        }\n        else {\n            return;\n        }\n    }\n    static removeJsEvents() {\n        const elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');\n        if (elements.length > 0) {\n            elements.forEach((element) => {\n                jsEvents.forEach((attr) => {\n                    if (element.hasAttribute(attr)) {\n                        element.removeAttribute(attr);\n                    }\n                });\n            });\n        }\n        else {\n            return;\n        }\n    }\n    static removeXssAttrs() {\n        // eslint-disable-next-line\n        this.removeAttrs.forEach((item, index) => {\n            const elements = this.wrapElement.querySelectorAll(item.selector);\n            if (elements.length > 0) {\n                elements.forEach((element) => {\n                    element.removeAttribute(item.attribute);\n                });\n            }\n        });\n    }\n}\n\n/**\n * Base modules\n */\n\nexport { blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event$1 as Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile$$1 as compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
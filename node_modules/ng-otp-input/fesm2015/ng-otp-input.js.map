{"version":3,"file":"ng-otp-input.js","sources":["../../../projects/ng-otp-input/src/lib/utils/keyboard-util.ts","../../../projects/ng-otp-input/src/lib/pipes/keys.pipe.ts","../../../projects/ng-otp-input/src/lib/components/ng-otp-input/ng-otp-input.component.ts","../../../projects/ng-otp-input/src/lib/components/ng-otp-input/ng-otp-input.component.html","../../../projects/ng-otp-input/src/lib/ng-otp-input.module.ts","../../../projects/ng-otp-input/src/lib/models/config.ts","../../../projects/ng-otp-input/src/public_api.ts","../../../projects/ng-otp-input/src/ng-otp-input.ts"],"sourcesContent":["export class KeyboardUtil{\r\n\r\n    static ifBackspaceOrDelete(event:KeyboardEvent){\r\n        return this.ifKey(event,'Backspace;Delete;Del');\r\n    }\r\n    static ifRightArrow(event:KeyboardEvent){\r\n        return this.ifKey(event,'ArrowRight;Right')\r\n    }\r\n    static ifLeftArrow(event:KeyboardEvent){\r\n        return this.ifKey(event,'ArrowLeft;Left')\r\n    }\r\n    static ifSpacebar(event:KeyboardEvent){\r\n        return this.ifKey(event,'Spacebar; ')//don't remove the space after ; as this will check for space key\r\n    }\r\n    static  ifKey(event:KeyboardEvent, keys:string):boolean{\r\n        let keysToCheck=keys.split(';');\r\n        return keysToCheck.some(k=> k ===event.key);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys'\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any): string[] {\r\n    return Object.keys(value)\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\nimport { Config } from '../../models/config';\r\nimport { KeyboardUtil } from '../../utils/keyboard-util';\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-otp-input',\r\n  templateUrl: './ng-otp-input.component.html',\r\n  styleUrls: ['./ng-otp-input.component.scss']\r\n})\r\nexport class NgOtpInputComponent implements OnInit, AfterViewInit {\r\n  @Input() config: Config = { length: 4 };\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onInputChange = new EventEmitter<string>();\r\n  @Input() formCtrl:FormControl;\r\n  otpForm: FormGroup;\r\n  currentVal:string;\r\n  inputControls: FormControl[] = new Array(this.config.length);\r\n  componentKey =\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2) + new Date().getTime().toString(36);\r\n  get inputType(){\r\n    return this.config?.isPasswordInput \r\n    ? 'password' \r\n    : this.config?.allowNumbersOnly \r\n      ? 'tel'\r\n      : 'text';\r\n  }\r\n  constructor(private keysPipe: KeysPipe) {}\r\n\r\n  ngOnInit() {\r\n    this.otpForm = new FormGroup({});\r\n    for (let index = 0; index < this.config.length; index++) {\r\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n    }\r\n    this.otpForm.valueChanges.subscribe((v:object)=>{\r\n      this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n        var val = this.otpForm.controls[k].value;\r\n        if(val && val.length>1){\r\n          if (val.length >= this.config.length) {\r\n            this.setValue(val);\r\n          }else{\r\n            this.rebuildValue();\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      if (containerItem) {\r\n        const ele: any = containerItem.getElementsByClassName('otp-input')[0];\r\n        if (ele && ele.focus) {\r\n          ele.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getControlName(idx) {\r\n    return `ctrl_${idx}`;\r\n  }\r\n\r\n  onKeyDown($event, inputIdx){\r\n    if (KeyboardUtil.ifSpacebar($event)) {\r\n      $event.preventDefault();\r\n      return false;\r\n     }\r\n  }\r\n  onInput($event){\r\n    let newVal=this.currentVal ? `${this.currentVal}${$event.target.value}` : $event.target.value;\r\n    if(this.config.allowNumbersOnly && !this.validateNumber(newVal)){\r\n      $event.target.value='';\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n      return;\r\n    }\r\n  }\r\n  \r\n\r\n  onKeyUp($event, inputIdx) {\r\n    const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n    const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n    if (KeyboardUtil.ifRightArrow($event)) {\r\n      $event.preventDefault();\r\n      this.setSelected(nextInputId);\r\n      return;\r\n    }\r\n    if (KeyboardUtil.ifLeftArrow($event)) {\r\n      $event.preventDefault();\r\n      this.setSelected(prevInputId);\r\n      return;\r\n    }\r\n    if (KeyboardUtil.ifBackspaceOrDelete($event) && !$event.target.value) {\r\n      this.setSelected(prevInputId);\r\n      this.rebuildValue();\r\n      return;\r\n    }\r\n    \r\n    if (!$event.target.value) {\r\n      return;\r\n    }\r\n  \r\n    if (this.ifValidKeyCode($event)) {\r\n      this.setSelected(nextInputId);\r\n    }\r\n    this.rebuildValue();\r\n  }\r\n\r\n  validateNumber(val){\r\n    return val && /^\\d*\\.?\\d*$/.test(val);\r\n  }\r\n\r\n  appendKey(id) {\r\n    return `${id}_${this.componentKey}`;\r\n  }\r\n\r\n  setSelected(eleId) {\r\n    this.focusTo(eleId);\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele && ele.setSelectionRange) {\r\n      setTimeout(() => {\r\n        ele.setSelectionRange(0, 1);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ifValidKeyCode(event) {\r\n    const inp = event.key;\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    return (\r\n      isMobile ||\r\n      /[a-zA-Z0-9-_]/.test(inp) ||\r\n      (this.config.allowKeyCodes &&\r\n        this.config.allowKeyCodes.includes(event.keyCode)) \r\n    );\r\n  }\r\n\r\n  focusTo(eleId) {\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  // method to set component value\r\n  setValue(value: any) {\r\n    if (this.config.allowNumbersOnly && isNaN(value)) {\r\n        return;\r\n    }\r\n    this.otpForm.reset();\r\n     if (!value) {\r\n       this.rebuildValue();\r\n       return;\r\n     }\r\n     value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n     Array.from(value).forEach((c, idx) => {\r\n          if (this.otpForm.get(this.getControlName(idx))) {\r\n            this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n          }\r\n     });\r\n     if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n      let ele : any = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n      if (ele && ele.focus) {\r\n        ele.focus();\r\n      }\r\n     }\r\n     this.rebuildValue();\r\n  }\r\n\r\n  rebuildValue() {\r\n    let val = '';\r\n    this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n      if (this.otpForm.controls[k].value) {\r\n        let ctrlVal=this.otpForm.controls[k].value;\r\n        let isLengthExceed=ctrlVal.length>1;\r\n        let isCaseTransformEnabled= !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase()== 'lower');\r\n        ctrlVal=ctrlVal[0];\r\n        let transformedVal=isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase()  : ctrlVal;\r\n        if(isCaseTransformEnabled && transformedVal == ctrlVal){\r\n          isCaseTransformEnabled=false;\r\n        }else{\r\n          ctrlVal=transformedVal;\r\n        }\r\n        val += ctrlVal;\r\n        if(isLengthExceed || isCaseTransformEnabled) \r\n        {\r\n         this.otpForm.controls[k].setValue(ctrlVal);\r\n        }\r\n      }\r\n    });\r\n    if(this.formCtrl?.setValue){\r\n      this.formCtrl.setValue(val);\r\n    }\r\n    this.onInputChange.emit(val);\r\n    this.currentVal=val;\r\n  }\r\n  \r\n  \r\n  handlePaste(e) {\r\n    // Get pasted data via clipboard API\r\n    let clipboardData = e.clipboardData || window['clipboardData'];\r\n    if(clipboardData){\r\n     var pastedData =clipboardData.getData('Text');\r\n    }\r\n    // Stop data actually being pasted into div\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!pastedData || (this.config.allowNumbersOnly && !this.validateNumber(pastedData))) {\r\n      return;\r\n    }\r\n    this.setValue(pastedData);\r\n  }\r\n}\r\n","<div class=\"ng-otp-input-wrapper wrapper {{config.containerClass}}\" id=\"c_{{componentKey}}\" *ngIf=\"otpForm?.controls\"\r\n  [ngStyle]=\"config.containerStyles\">\r\n  <input (paste)=\"handlePaste($event)\" [pattern]=\"config.allowNumbersOnly ? '\\\\d*' : ''\" [type]=\"inputType\"  [placeholder]=\"config?.placeholder || ''\"\r\n    [ngStyle]=\"config.inputStyles\" \r\n    class=\"otp-input {{config.inputClass}}\" autocomplete=\"one-time-code\" *ngFor=\"let item of otpForm?.controls | keys;let i=index\"\r\n    [formControl]=\"otpForm.controls[item]\" #inp id=\"otp_{{i}}_{{componentKey}}\" \r\n    (keyup)=\"onKeyUp($event,i)\" (input)=\"onInput($event)\" (keydown)=\"onKeyDown($event,i)\" >\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NgOtpInputComponent, KeysPipe],\r\n  exports: [NgOtpInputComponent],\r\n  providers: [KeysPipe]\r\n})\r\nexport class NgOtpInputModule { }\r\n","export class Config {\r\n  inputStyles?: { [key: string]: any };\r\n  containerStyles?: { [key: string]: any };\r\n  /**\r\n   * @deprecated Don't use as this will be removed in upcoming versions\r\n   */\r\n  allowKeyCodes?: string[];\r\n  length: number;\r\n  allowNumbersOnly?: boolean;\r\n  inputClass?: string;\r\n  containerClass?: string;\r\n  isPasswordInput?: boolean;\r\n  disableAutoFocus?: boolean;\r\n  placeholder?: string;\r\n  letterCase?: \"Upper\" | \"Lower\";\r\n}\r\n","/*\r\n * Public API Surface of ng-otp-input\r\n */\r\n\r\nexport * from './lib/ng-otp-input.module';\r\nexport {Config as NgOtpInputConfig} from './lib/models/config';\r\nexport * from './lib/components/ng-otp-input/ng-otp-input.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.KeysPipe"],"mappings":"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"}
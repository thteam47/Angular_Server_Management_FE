import { OnInit, EventEmitter, AfterViewInit } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';
import { KeysPipe } from '../../pipes/keys.pipe';
import { Config } from '../../models/config';
import * as i0 from "@angular/core";
export declare class NgOtpInputComponent implements OnInit, AfterViewInit {
    private keysPipe;
    config: Config;
    onInputChange: EventEmitter<string>;
    formCtrl: FormControl;
    otpForm: FormGroup;
    currentVal: string;
    inputControls: FormControl[];
    componentKey: string;
    get inputType(): "password" | "text" | "tel";
    constructor(keysPipe: KeysPipe);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private getControlName;
    onKeyDown($event: any, inputIdx: any): boolean;
    onInput($event: any): void;
    onKeyUp($event: any, inputIdx: any): void;
    validateNumber(val: any): boolean;
    appendKey(id: any): string;
    setSelected(eleId: any): void;
    ifValidKeyCode(event: any): boolean;
    focusTo(eleId: any): void;
    setValue(value: any): void;
    rebuildValue(): void;
    handlePaste(e: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgOtpInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgOtpInputComponent, "ng-otp-input", never, { "config": "config"; "formCtrl": "formCtrl"; }, { "onInputChange": "onInputChange"; }, never, never>;
}
